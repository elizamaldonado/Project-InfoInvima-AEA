%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Виталий Викторович
%%CreationDate: 1/26/2022
%%BoundingBox: 0 0 3000 2000
%%HiResBoundingBox: 0 0 3000 2000
%%CropBox: 0 0 3000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.1 (Windows)"
   xmp:CreateDate="2022-01-22T21:15:32+03:00"
   xmp:ModifyDate="2022-01-22T21:15:32+03:00"
   xmp:MetadataDate="2022-02-21T09:37:14+03:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:1d7c3066-57f0-0a42-b184-cfc11d8694b2"
   xmpMM:InstanceID="xmp.iid:2af3f423-da63-a34d-b26e-ebd7dce41eb3"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny pharmacist with pills and vitamins flat vector illustration</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny pharmacist with pills and vitamins flat vector illustration. Doctors writing prescriptions for antibiotics, working together, helping patients to cure. Pharmacy business, drugstore concept</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>pharmacist</rdf:li>
     <rdf:li>pill</rdf:li>
     <rdf:li>pharmacy</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>pharmaceutical</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>antibiotic</rdf:li>
     <rdf:li>doctor</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>medicare</rdf:li>
     <rdf:li>vitamin</rdf:li>
     <rdf:li>addiction</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>cure</rdf:li>
     <rdf:li>delivery</rdf:li>
     <rdf:li>drugstore</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>medical</rdf:li>
     <rdf:li>store</rdf:li>
     <rdf:li>work</rdf:li>
     <rdf:li>concept</rdf:li>
     <rdf:li>tiny</rdf:li>
     <rdf:li>writing</rdf:li>
     <rdf:li>prescription</rdf:li>
     <rdf:li>working</rdf:li>
     <rdf:li>together</rdf:li>
     <rdf:li>helping</rdf:li>
     <rdf:li>patient</rdf:li>
     <rdf:li>service</rdf:li>
     <rdf:li>healthcare</rdf:li>
     <rdf:li>apothecary</rdf:li>
     <rdf:li>remedy</rdf:li>
     <rdf:li>illness</rdf:li>
     <rdf:li>chemical</rdf:li>
     <rdf:li>aid</rdf:li>
     <rdf:li>syringe</rdf:li>
     <rdf:li>sick</rdf:li>
     <rdf:li>science</rdf:li>
     <rdf:li>professional</rdf:li>
     <rdf:li>chemist</rdf:li>
     <rdf:li>medication</rdf:li>
     <rdf:li>assistant</rdf:li>
     <rdf:li>checkout</rdf:li>
     <rdf:li>diagnosis</rdf:li>
     <rdf:li>disease</rdf:li>
     <rdf:li>presenting</rdf:li>
     <rdf:li>job</rdf:li>
     <rdf:li>huge</rdf:li>
     <rdf:li>hospital</rdf:li>
     <rdf:li>expertise</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="172"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FWndURnY0VQST7DCBakqIVbqBTKhQN8XCpBp25Up27ZK+E7MeY3VDbwmL0ig9M&#xA;dEpttkeI3aaFUsKtBARAhfjuELGtO4BNcN2d0chsqRuHRXAIDCtGFD9IOAikgrsCXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVKSSQTxRotVbkZGoaAAbfSS&#xA;ckAKJQTuq5FKFvNUsbTaaQc/5F3b7h/HLIYpS5MJZAOaXN5qta/DC5HiSB/XLvyp72vxwvh8w2k1&#xA;1Cok9LnVWikoK9+St7YJacgJGUEpxmM3OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KqcbSmeUMKRrxEZp12qckQKCBdpXrusNbD6tbmk7Crt/KD/E5fgw8W55&#xA;NWXJWwYwSWJJNSdyT1zPcRC6lcTW+nXVxAnqTQwySRR/zMqkqv0kYJGhbPHHikB3l4R5j8mea9R1&#xA;766bk3SyEFr6VwpiZRVgVH2QGHw8RQe2c/DtKJFy+p7YaDg9MR6XsP5G/mPcapojaZqtx9Yu9Of0&#xA;XnZuTGM/3chY/aBoVJ9q982XBxxsc3nNXj8Kf9EvX8xmp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoV7l4LWeecbRs5QdKqDRfvywRsgBhxUCSwyaV5pXlkNXc&#xA;ksfc5swKFOETazChSu9P1XULC7tdKKrfyQusEsh4pG7LxV3NG2UmvTK8sgIm23APWPIsZ0/yydUv&#xA;7jynJq3O9W3cXmpwQrGC/EAlFLPUjkoPTv0zmI6eHj0OUdy9rl1WSOlGWQ+s0P1n5H7El0n8ovNn&#xA;kDzfaX1tKNV0G65W13PCpSSNXFUMsRLUAcL8QJHjSubzBP1Og1OaOXERykN3tXl3U/Vj+qSn94gr&#xA;ET3Xw+jDqcVeoOuwzvYp3mK3uxV2KuxVZLNFEvKRwg7VNMIiTyQSA1LPFEAXJAPQgEj8BiIkqSAv&#xA;VldQymqsKgjuDgIS3irsVdirsVdirsVdirsVdirsVaduKFqFqCtF3J+WEBSsjeZ0LNH6bfsqTX76&#xA;dMJAQCXRPMeXrRiPj+0G5A/qOJA6KCeqorBgGUgg7gjpkUuxV2KuxV2Ksd1+7mFrDbSH965Mko26&#xA;AniNszdPAWSHGyyNAFg3nHzMnlnQpdYktXu4YGRZY4yFYCRggbf/ACiMzALccvPf+hi9F/6tFz/y&#xA;MjyXAi2R+Uf+chfL+oXS6QmmT2s1xHO5upJEK8oomkVaDfcIQPc5h6rGYgzPKIcvSDjnHGOciB80&#xA;8/J1jcavqk8rcrl1Rw56lmLsxP05z/Z5syJ8nsvaQcMMcY/SL+4U9cRhIm461DKd9+hGbI7PJsPv&#xA;4m0/VHEJ48GDxnwB3p/DNljPHDdw5jhlsyuxvI7u2SdNuWzL4MOozX5IcJpy4ysWr5Bk7FVOd5lT&#xA;90nN2NBU0A9z7ZKIHVBJ6LhGpKu6qZFFOVPvpgtaXYEqc8TyKOEhjdTVWHT6R3GSiaQRa5ZF5CNm&#xA;BlCglR91aYK6ra7Al2KuxV2KuxV2KuxV2KtFlXckDtv4nFVOGJ0Z3kcu7mv+SAOgAyUjaAFXIpdi&#xA;qj6aW0btEhYfa9NT9/EHJXxHdjVclSKVJY1kQ1RtwcBFGkg2uwJdirTtxRm6UBNT02whSwa8upLm&#xA;cyyNyagFfYCmbWEREUHAlKykvmnSBrPlzUtLIBa7t5I469pCtYz9D0OTBYvj8qwJBBBGxBy9gq2l&#xA;xLaXUN1GPjgdZFHjxNafTlebHxwMe8U3afMceSMx/CQfk+mfyw1BNN1UanMW+pT259Mrvy5lSrU8&#xA;KVzitLlGKZ4vd9r6L2zAanDEY6Ju/hRe1JfW0dsZ5H6/G4G5Fe233ZveAk0HheIAWxXULtry6knp&#xA;RSfhHcL0GbDHDhFOJOVm0RompfU7njIf3Euz+x7NkM+LiHmyxT4Sy4EEVG4Oa5zGiabVHI/ZB74q&#xA;st45I4/3jl5GPJz2qew8BkpGzsiIpUyKXYq7FVjwxs6SEfHHUqRsdxuMIPRBDoZkmjEifZPj1BHU&#xA;HGQo0oNr8CXYq7FXYq7FXYq7FVF0imlX4qmBqlO3Km1flXJAkD3saBPuVsiyQ93f2lotZ5ApPRer&#xA;H5AZOGMy5MZTA5oEeZ9O5U4yAfzcRT9eW/lZNfjxRltqlhc0EUylj0Q/C33GmVyxSjzDOMwVWZp1&#xA;ZGjUOlaSL3oe4+WRFdUm1XIsnYqkGu6whU2cDVrtM46U/lH8czMGH+IuPlydAx80qadO2ZjjK1jb&#xA;fWbuKCtA7UJHh1P4ZCcuEEsoRs0g/MOjeWEla3ttHsUCfDyFtDUk7VJ41PjmpzaiY2BNu/7P0MJD&#xA;jkNuiD0/yZoF1MsC6VaEH7RMEX/NOVYpTkfqNe9y9V4WON8MbPLYMtsvy68j20YX9A6c7UoWa0gP&#xA;3VXMo5Jd5dGQCbLHfzL/ADO0bQIo9KtQl9esw+sW8ThRDGnZmAYBqgUXw602rs+zuzp5TxH0x6eb&#xA;YMBmO5LPK/muw8wW0storxSQkLPDIBVeQqKEVBBocydRppYjRcHNgOM7pldLO91aWccnpG6lEbTA&#xA;Biq0rsD3OUAgAnuagLKe6Xqc+k6rJo99cNc23orNaTMo5qpYqVbj1FRmJkxDJHjiKPVyIz4TRZHG&#xA;kMsgulf1KrSPwAPWnucxCSBTcADu1calY25pLOqsOq1qfuFTjHHI8gpmBzQh8x6WDQMx9wp/jln5&#xA;abDxoqkOvaXIaetwJ/nBX8emA4JjokZYlHKysoZSGU9CNwcpIbG8VUfUjjnWEJx9UM4YdCw6/Tkq&#xA;sWxujStkWTsVdirsVdirsVad1RGdjRVBJPsMIFqSsgSNULR9JCZCT1JbfvhkT1QAsvrpbW1knbfg&#xA;Nh4k7AYYQ4jSJSoWwqeeWeVpZW5OxqTm0jEAUHBJsqeFDsVRdtq2oW+0czcf5W+IfjlcsUTzDMZJ&#xA;BFxeY75Ofwq5c1ANSAfbfKzpolmMxQ93rWoXIKvJwQ9UT4R/XJwwxixllkUEtAwr075aWtrFUVpd&#xA;3b2l/DPcPwiUlS1Cd3BVdgCftMMqzi4FuwRJmAEFqDiS5ZweSlwQfwzQ5TciXrtLAxxgHnSa6FqO&#xA;l6dDcXV9OkCoCxdq/ZA36DMjTji9I+qRdfr8U5TBA9IDyjz/AOe9Y1zVrmCy1Ga30WNjHbw27GIS&#xA;Ku3NyAGbn1o3Twzs9D2fDHAGQufm1Y8IA35sIXTbVeoLfM/0pmztup6L+WEaJbX6ooUco9h8mzUd&#xA;p84/F1naPOLKL++ghvdPBf8AfR3MUgX/ACQ1DX7810YExPudcDumHnW6Fhq1leMpZZYZIWC9aKyt&#xA;/wAbZTpBxRIbMqla3cc8IlgeqN4bfQcslGju1KmBXYq7FUXYandWUgMbVj/aiP2TleTEJc2cJmLL&#xA;7O8hu7dZojseo7g9wc104GJouZGQItu5l9KFpgvMxitPbv8AhgiLNJkaFqoNRUZFLsVdirsVdirs&#xA;VUbyS2SEi5IWKQhDU0Hxe+2SgDezGVVugrjzL5ettpdQgBHVVcMR9C1OWR0+Q8gUGcR1Y55j88aD&#xA;PbpDazPPR+TlUYDYH+cL45mafSTBshpy5ARQYyfNNvy+GByvckgH7t8zfALjpva3MNzCs0RqjfeD&#xA;4HKZRINKwPzj5v8AM663JougwCN7UJJPdNxPJXUMKB9go5bn2zSdodoTxz4I7V1d/wBm9mRyw45b&#xA;307mX+XbrUrrSYZ9SES3jFhKsFeA4sVFKluwzY6PMcuMSPMur12nGHKYC9kyzJcRHafpdxqEhK0S&#xA;NftykbV9vE5VkyiDZCBkmNx5YKRM0EvqSAbIwAr8jlEdVZ3DZLB3JAQQaHYjqMzHHS/X5vQ0i4m/&#xA;30Ff/gWByzFDilw9+zkaQ1lj73ahcC3spbg/ZiX1D8lNc5vT4+PII9+z2MjQtC+ZgW0C+pv+6J+g&#xA;b5k9mGtRD+sxy/SXk+eguudirPPyz/uL/wD1o/1Nmp7T5x+Lq+0eYavppJL6aRiefM09qGg+7KYj&#xA;Z1rKfzVmvG0bSrq0ZV9SXiSYJbinqpyB/dsnEfDuWOa7RbSIbcvIJP5QknUyW80gkcoHZlXiCQaV&#xA;C1anXxzMzja2pk2YyuxV2KuxVU0XzbpNjetDNcUhk2dgGZQw6Gqg/LIZ9NKUbA3bcU6LLrTXNGu6&#xA;fVr2GVj+yHXl/wACTXNdLDOPMFyhMHqiraV5YVd14sahl8CCR3yMhRTE2FTIpdirsVdirE/zE1y+&#xA;02wt4bNzFJdswaZdmCoBUA9ieWZ2hwxnIk9GnNMgbPKNS1NLe3lvb+c+lEC0kkhLGn07knNyAA4h&#xA;KWaR5jsNasp7iwLgwni6yKAwNKg9SKHDE2gG01jJdVI3LAUHzxKWEeZ/Mvmm283LoVjbPaTQOqSQ&#xA;TxUaUmjciHFVTj0I7b5WJiXJhIkGnrvlaStvNF/K4b/ghT/jXKs43Zpn9Us9K1UatqGnm5huUMTR&#xA;uoJ5DjR1V/hPwilPpznO0IQjPxPqvYj9L0HZ2ac8fgg8Fbg8vgmd6baZI57GzFrZFRw4Iqgk778P&#xA;hB3zYaMREdurqtZKRl6rNdVun2Mt5crCmw6u38q9zmTkmIi3GhHiNMzt4IreFYYhxRBQDNXKRJsu&#xA;cBQpezKqlmICgVJPQAYEsFupEkuppE2R3Zl+RJIzbQFAB18jZeJeaPOvmC6v57eaT6vYrIUFslFV&#xA;lDUHJ+rV+72zocOnx4o8R+buMWGGMcR+ac3X5m6PLpL6dMWW7kgMbLQMgqvHl6ill/jnLYNFIaoS&#xA;B/diV39tVzdh/KWAxq/VS5/zL0d9KGm3HI3c0BhKhag/CVLFwaL8jvhx6CR1YMPo4rv7apMe0cMh&#xA;w36ixQ3dsP8Adi/fnaU12sbUbVf2+XsAcaRa6y806xYXHPS5nhBpzjoGV6fzKQRleTBCY9QasuKM&#xA;+YZtb3ct5Al3MoSacCSRV6Bm3antXNVOHCaHR0eWHDIhmPneD9IflhaS8BKbf6u1GikuN1/cn4I3&#xA;jJ+1vU0zVY9s5HvTPeDG/JbwpdRxwWps4iHVYWRU6jmTxUnqczso9LSGbZiJdirsVQWsTGHTZ3Bo&#xA;xXiP9kafxyeMXIKw+KGWVuMSNI3Wigk/hmXKYjuTSREnkgdV1fTdJXlqU62v+S9eXh9kCvfHjHep&#xA;BCO0TzVLNbi40fU3aAHjWGVuII/ZKg/gRkZY4S5gFRIjkWRWn5heZregadLhR2lQH8V4N+OUS0OM&#xA;9KbBmkGa+UfOS640ltPEILyNedFJKOtaEiu4pUbZrtVpfD3G4b8eXiZNmG2uxVh35oW3PRbecDeG&#xA;cA/6rqa/iBmw7Ol6yPJozjZiupflh5d1vyBJPq91JbzSL9Zt7uImkLAEIpjJVZKk7g/QR1y7JqZn&#xA;LwxDX4QMLLBvL3l+20bSlsovidvinl7u5FCfl2GbECmgCmT+SLzTrXV7O41Ggt4uVWZSwVwDwNBX&#xA;o1Mq1cJSgRHm2YyAd0V5617TdY1WO8iijWOzjaKK8dQshViC1WPxBKjYZVpNOccd+ZTlmJFlP5Z6&#xA;Kn1J9Wko4nPG2HUcU6v9+wzE1+bfhDbhh1ZD5pVX08rQEggmvgan/jXNVmFwLmYDWQJRo2s2unWV&#xA;095II7SFC7Fum37IHv0ynT5QIG/4XJy6eWTIBAWZbMS0L82YoNcuTd2qxaRdSD0vTH7yEDYE0+0D&#xA;1Yfd4ZjjtGUper6fud9m9m4jEPDP7wc+6X6vJ6xa3Vtd28dzbSrNBKOUcqEMrD2IzYCQIsPLzxyh&#xA;IxkKIeN/mr+at0t8dF8vXASO2al7dqFbnIP91LUEcV/aPc/LfcaLSbcUvg6jV6o3wxSHyf8AmBrF&#xA;7rNtpd/6dwLklVlACSAhS1aLRSNvDMrLhAFhx8Wck0WNakite3KsAy+q+x3H2jm9gAYAHueuiAYg&#xA;FBNZWjdYl+gU/Vh8KHcPkjwo9wWfo2z7R0+k4RjiDYA+SRiiOQDf6OtP5D95ydsqXLY2g6Rj6an9&#xA;eNrSqsaIKIoX5CmKWXWCcdOtD/PHy/4Yj+GajMfWXQ6v+8LOxD+kPysvrbishijl+Bo2mB9N/WA9&#xA;NWRm9vizUZNs4LAbwYT5WM8V1amaQMSyBIvTEXpqw4heNX/XmwmPSWkPQcwkuxV2KpL5ol42kUXd&#xA;3r9Cj+3LsA3VMPLVE0qIwQEs5YySEqAWDEbndtvlmi7S3zHiPLp+Nvtdzo9sYoJN50/Kkebba8mm&#xA;vUt5rhY+DFS3o+gDwUGoqtXZj0+1kMAlExnE+kXsft/Q3ZJQlCWOUTxSrcfZ+l5/+UnljT4tb1fR&#xA;odRNy1vHBJeMqFQsgLq6JXwqK5sB2lKOLjMaMjt7u9wp6CMcpxiXFwjf39z0bWfLlla2zS205EiD&#xA;k0MjKSw70pTDo+0Z5JVIbHqGOo0kYiwUw/K+2L6xc3H7MMHH6XYU/BTmT2jL0AebjYBu9NzTuU7F&#xA;Uh8823r+V70D7UYWQf7BwT+FcydHKsga8o9JeR3WqXn6P9KaeV7O1RpBDVmVVQFmIQV6CubzhiDx&#xA;Vu4dmmDeWPOup635gltltkXTgrMGoeaAbKWatKse1MINtYlZZba9ZE8HNB88skzQ35p/lt53fy9Z&#xA;X1oqyWJZTfWSnjNGzsBG712ZRUVHVT19sGOqjKfCGWTFIC3qn5OPbWfkuw0Jpla905XSVehYO7Sc&#xA;lHcfHTMDW4jGd9C5GA+mmXalpovImQSemWpU0qNgadx/NmDLeJDkQNSBeUee9OCXosZL9RBEquVW&#xA;gqxJ+1U9u2aXVxMCBfR6/sadxM+H1XX9jz6UIJGCHkgJ4n2zFelHLdPvL+r+YbTT7y0sr6S0tLtC&#xA;jBaEgtsXjrXg1NuQ/gKdF2JpJSPHL6PvLxntVqMW0B/e9/cP2/Z8UjHkbTyfjubhh3HJR/xqc6y3&#xA;gvyse8sq8h+W9IsdZEsMHKdI2KyyHkwJoKiuw2PYZRqCeFux4YxOzDtQ/wCOhc/8ZX/4kc3uP6R7&#xA;nqIfSEJJKkaF3NFGWMkBJqxr+7QU8W/oMNMbWrqstfiRSPao/rjS2jre7inHwmjDqp64CEgq2BLN&#xA;YEpomlyfzQuv/AyMf+Ns0+U/vJe/9DodX/eFm/kmNb3y1qunMFZZPUUq681Imi4UK1FR8PSuavWb&#xA;TBY49wQ8z8vRpaOoXTjaOpDSXAhigVyGqBwR3eu/cZsK2aA9SG/TevTMFKB803U+neXbu6tmC3CB&#xA;ArkA05yKppX2bJ4QJTAPJTyQnlLUbrUNFjuLpuc3JkL0AqFO3SmTzwEZUEBBeaJeV5HF2jSv0sf7&#xA;MswDZKQaT560u2vmsY9Ygs29Ro5hcNwjRl2YtzG1KduuVanT48guQsj5tuLUShsDSfahrGm6p5q0&#xA;XQtJvV1BL0rJe6iGDqycS4jjVDwXYEnbw3zXy0MJYiZRoR5D9Z5luh2llhkqB3kNz+pllt+V3lny&#xA;5JeX+g2foC5HK6t0LMWCkn4KmtBU/B92Y+XJLIANrDdiEYEnoUk1XzFposJLawAZplKMQnBQGFD1&#xA;A3plml7Py+IJZP4fO2WfVw4TGHVkX5XWvDSru6IoZpggPisa1H4ucv7Rl6gPJxsA2Zpmvb3YqhdV&#xA;tvrOmXdvSpmhkjHzZSMnjlUgfNEhYeefl/faFp8d9eX8qR3MYAj5kcihBLCNepJI3pm11sJyoR5O&#xA;NhIFksOuYNJGqX15ptjFYR3sxlaKIcRXoNug8aDapOZmKBjEAm2mVXYUImKXclDQkKwPyy48kMh8&#xA;2eernU7Ot1ws7G3BklAJIJA+0xPh2GYeDSxx78y2ZMpkl/5Q+YNL8xeZ0NnzpZh2lSVQtQyMqkUJ&#xA;2JyOsn+6KMBuT1PzjcWtjpDSyyehGSFaSp2qQB4+OaOeOWSJjEWXbaTGZZQALfPcqBJXQMHCkgOu&#xA;4IHcZz+XDLHLhkKL6ZjmJAFXsbJ7iQEgiIH4m/gPfMzs7QHUT/oDmf0Oq7Y7VjpMe2+Q/SP0nyTz&#xA;lFEFSoQdFHTO6hjEQBEbB8yyZJTkZSNyK/JME68pf8dU/wDGJv1jKNR9KQ861D/joXP/ABlf/iRz&#xA;fY/pHuejh9ISq30/Utbvnt9Pi9Z41LBOSr8IIBNXKjqclPJGAuTCcxHmjf8AlX/m7/lg/wCSsP8A&#xA;zXlX53F3/YWvx4d7v+Vf+bv+WD/krD/zXj+dxd/2FfHh3oXUPLHmDSIVvLy29CIMFD+pG3xGpAor&#xA;Me2Tx6iEzUSyhljI7FXglEsSyD9odPfLG96DFF/zqekSeAcfex/5pzSZT++k6HV/3hZT+Wc1Lq+g&#xA;/nRH/wCAJH/G+YGvGwLDE89FkdP1q+s+S2sUVzMkdokMMCP8Ro6qjO3Qe2ZeM3EFqIovT9NHOzgm&#xA;O5eNSPpAzCnzpIeZ+e/PupNf32gi0iFijhJJQWaU8CHBFSij4gOxzL0+ICpOLkzkSqtkN5N88ahD&#xA;e2ejJaxNZTzBfUYlZQZCATsWU08KZPPjBuSI5yZVWzKplhvPMJjmbjCZODGtNkFCPpplGWcoYSY8&#xA;6c7DESmAeTxP82tJj03z1frCAtvc8LmFQCKCRfiqCB+2GyjRZTPHv9Q2K6zFwT25Hcfd+hN/yuvr&#xA;nT9Y0W7kRkVblUV5AVBjkPAsCeoAc5lSInCQB5OFwyhkjIjm+uoX5AgmvHofEEVBznyHcgvHfOOn&#xA;Cw8w3cSLxidvVip0pIORA+RJGb7SZeOA7xs4eWHCXpfkq0+reWbFSKNIhlb39Qlh/wAKRmp1cryF&#xA;ycQqITvMZsdirsVeHXWm3B1qfTreMvMJ3hjjUdaMQPozo45BwCR7nAMd6ef+efKXn+Hzvb2N5G9r&#xA;aA+pY3cDEwGJCOcgeg+PfdSKio7b5DFmGTcMJwkDuyt9ruM/zKV+7fMocksug/Lfy/5g8j3U2tXD&#xA;wx3IZ4biJipg9FiORXo9WXdSD7b75q9RqZjJwx/tbo4gY2UB+RXlW00PUbmOF/WkMDNNcEcS55qF&#xA;+GpoAK7VyWv2xj3o08aLKPznmKeWYo1qXmmCog/aYfEB/wALmP2cPW7/ALIH7++6J/Q8i8ryQy6z&#xA;pjSRLLFPNErRuAVIkIG4PX7WbLU4YzgeIAvS6yUhhmYkg8J5PS/zOitLPULNIkSCEQfCiAKo+M9A&#xA;MxezI+ggd759qpmUrJssBuZoZmUKpLdA3Tr7ZtIghxliSTRuY435Afd+OSIBVlPk2aOXVX4b8Y2r&#xA;94zD1IqKQ881SovLunX1JP8AiRzfY/pHuekh9ISXSINImuimqXUlpbcSRLFF6xLVFBx5Lt75LKZA&#xA;ekWWuZIGwtOf0X5A/wCr5d/9If8A18zH8TP/ADR/pv2NfFk7h83fovyB/wBXy7/6Q/8Ar5j4mf8A&#xA;mj/TfsXiydw+aB1iy8rwWyvpepT3dwXAaKW39JQtDU8ubfqyzFLIT6ogD3s4GZO4pbplfq3+yNMt&#xA;LcHqtpFz8g2D/wC+zy++Rl/jmhzH9/J0er/vCxnXvNWt+WNFvNS0aRYb0qsImZFk4K8i1IVwyk7d&#xA;xkM2MSFFxuIjkknlfWLrV6ardWSS3147Pc3UUVrCofkRJIeLCQs5+Jvg6k0yWMUKDEG93svl+T1N&#xA;Htj3Clf+BYj+GYeYeosw8Y1u70rXvPTxWHNLa6m4STsQ3JhsXQUFFNNq1/hh1uplptLLJVmAunF0&#xA;+OOfUCHISK2CbS/LfndIr0STWdm8bCVCFYMyK4ZloeSqW6Cn8Mh2ZrJazSRykCJle3ukR+hnrcEd&#xA;NqDjuxGvtALMVuJBOLhGpJy9RXHjWtc2EoAjhPJvjIg2GN+dvJWveevMltc6ebaK4+relKJGdAxh&#xA;5yc9lf8AZNMw8eGOngaPptnmlLLK+tJbob+YLK3TStX9KW00+RREqblxGWHBm/lBp+znLa3U4xkM&#xA;8NiRu/LzD3XZnZWWWHg1FcIrh62N9j9j6S8vafqmnWk8lxdrcQyKJELliVou9a+I98yMWKcLuXE8&#xA;9qtRjyVww4Ked+Zb2HU9WX6tSR2PFpR+27H9XbN92finDGTPr9jrNVOMpAR6PYLaBLe3igT7ESKi&#xA;/JRQZqZGzbcAqYEuxVTubhLeBpX6KOniewyUY2aRKVC3lj6wNJ86TalLEZFYszRoQv8Aep2r7nN1&#xA;4XHh4Q4YnUrSLzv52iuJG1LU5BbWcfwW8W7ca9gAKsx77ZbgwjFGmOTJZspNFe2t7b217aSCW3kb&#xA;4JBUVBqDsaHqMyYsE1N/fmz+p+vK1opLi2BYrXrsgyowiDxVv3srPJH/AJA+Zpdf1rzC8cYSwtI7&#xA;dIDT4j6jSbvv39PYZru0ZbBt0xslmX5mWy3R0S3deSPfxl18VCOSPuGVaE1xHydvo8nB4kh/qZ+8&#xA;PE/J1f0lowPUXFuD9EijNxm+k+4vV6z+4n/Ul9z1X82oEa9siRycQHYGnRswezD6T73z3PzectK6&#xA;goEEdRQ7b/ec2tNCmRShr1HbCrK/y/EbamVA+IRtz+8Zh6z6WUWBal/x0br/AIzSf8SObzF9I9z0&#xA;cOQSe0ul0q+keSyt75WUqkd0rsgBIPIBHjNdqdclOHEKsj3MJxvrSYf4utv+pd0n/kVP/wBVsq/L&#xA;H+fP7P1NfhH+dL8fB3+Lrb/qXdJ/5FT/APVbH8sf58/s/UvhH+dL8fBCalrsWoW4t49IsbNuQYTW&#xA;qSrJtUcavI4oa+GTx4TE3xSPvr9TKOOjzJVraL0oFQ9QN/mcsLeHrWjRep5AhWnSF2/4GQt/DOe1&#xA;B/wg+90er/vCwPznbrceV9RQ/sxGT6YyH/41yyXJxJcmI/l7cKti3O4NkiSsHnH1VQworcWaXlL1&#xA;PZae9cEWEXvPldlk8vXBB3jMgUg9igYEffmHqNptvR4X5Mtbl/MVhKkTtEkoLyBSVGx6noMwvaPV&#xA;Yo6TJCUoico7CxZ9wYdi6fJLUQkIkxB3NbD4oj8wLa5Hme9nMTiBvS4ylTwNIUGzdOuY/spqcR0W&#xA;PGJR8QcVxsX9UunNt7fwZBqZzMTwGt62+kdXqflHRrO50yO8vSPRVVRULcRUKCSTUeOZ3aOsnCQh&#xA;j583K0WnjKPFLkyfSdI0yDUjeWYKiKGXmByaOjLxqGO37XjmFDV5ZDhn+35ORPBAbx67PGCSTU9c&#xA;5V9SfTenL6mkwpWnKILX5imdNyfKp8y8c8voW1qzIAb05Vkoeh9P49/+Bzos30F10TRe1206XEKy&#xA;p9lh08D3Gc9KNGnPibFqmRS7FUk8w3FXjtwdgObfM7DMrTx6uPml0ec+bYD+koWUbyxgD3YMR/EZ&#xA;ttOfS45Sr80/yZS40Cyv01X0b+2YJPbSbwSeo3xekAOQdR47MB+zmNi1RyTqtmeXBUbtJrfTbfTt&#xA;IisrYERW6gJXqTWpJ9ySTmyhzaqZ5+Xl3olpdXV5qEscUsUam2eQ0oDXnxHdqU6b5ga6M5ACLfhI&#xA;BsrNM84eWtA1nW9Vt9K9FNWlieZrYKrOYuQDupIXkxcsadz3O+Vz0UpRiL3DlaLF42XgjsZfoRZ8&#xA;6aT5q1/TY7GC4T6mZJ3M6oooI3QU4O/eQZGOnliibrd2ep0M9PimZEeqht77/Q8q0Ce203WIZblC&#xA;8NndSF1joT+6lanGpXuM2WQGUaHUPSZYSy4CI85R+96X+aN7613bSxqVpCVHj9rr+OYnZ8KBHm+e&#xA;ZZWXn0hkJHqEk075tA1NKpNWUVC7nFWX+QZIn1VuChSIm5AfMZg6wellF57qX/HRuv8AjNJ/xI5v&#xA;sX0j3PRw5BBXFtHOnF+o+yw6jLAWRCWyabcqfhAceINP15K2NLV0+7Y04cfckY2tI+1sEhPNjyk7&#xA;HsPlkSUgIrAl7L5RthP5Js4+7wyL97uM5nWSrOfe6TVD94WCajbrc6fdW7fZmhkjPydSP45lnk4b&#xA;zb8t2nMl0sdu1x6ZR+A9ED4gy/E0nxgbfsfTkIsIvePJszNpmoRuOD+mHKVrQsjAivtTMbVDcFtH&#xA;Jj3l/TVXRtMmhbg31aFypFRUxgnpTrnjXbMCdblN/wCUn/ui972bkA0uMV/BH7lTWdPD6ffTTOHP&#xA;oSHiBQbIada5V2bjP5rGb/jj94bNbkH5eYr+CX3K/lXWo9OtYlmh9SNkQhlA5qeI6E9s9n1+iOb6&#xA;TR+x4bSagYxuGV23mJLrSdbngiZI7S0LcmIDFjVgNq0+wc1OXRHBAykbNH7nY4Mwz5YRA24o/aXj&#xA;ecw+mvpvRXD6VauDVWQEH27Z0r5XMVIg95eX+W7b/c3dMdxBzAI6VLU/VXN/ml6A63q9D8vXB5SW&#xA;5Ox+Nf1HNVqI9XIwy6J1mK5DsVYlq10DqM/IH4W4/wDAimbHDH0hwsh9RYx5pgNzDBJEP3kTMCtQ&#xA;CQ1Onypkp63FpheWQiD3ssWCeU1AEpZqdzr+qsj6hP6xjFEB4qBXrsgAr75qo+0/Z+PaJP8ApT+l&#xA;2B7J1MuYHzS+PS7q4qiIGVqivIAH5VIzY6P2h0eoNQn6u42Pv5uPqOzc+IXKO3zR8Ple9IAd441G&#xA;1Klj+r+ObM5w4KE8zaBHZ6JNOZzI6sgC8Ao3YDryOMMpJqnb9h/4zH3H7lL8sQqand3LKTwhEYp2&#xA;LsD/AMaZHVCwA7n2iyVjjHvl939rGLgB/MuoqNgdTuKDwDTk/wAcuj9A9ztNNL/Bon+gPuZ956nS&#xA;aWCjen8BHI7ftZRpI1b54Swx0aNgxKye9a1zPBti0qSMS8Y4jxrQfecSVZT5EkWLUWkZRUxsDxpv&#xA;uMxNWLiyBYDqJrqFyfGV/wDiRzeY/pHuejh9IQ+TZOxV2KqsNpdT/wBzC8v+opb9QzGz63Bh/vJw&#xA;h/WkB97IQJ5BfJp9/EvKW2lRfFkYD8RlOPtXSZDwwy45E9BOJ/Sk4pDoXrnki8jj8raehUkhG/5O&#xA;Nmp10Cc0nQao/vC8985a3HoFnc3XD1HEphgjJoC5JpX5BScyQdnEkaeQeX/Mt9ol69xaqhSWglha&#xA;vEqDWg3qKdjkAaagafQPkjWILm1luowfSvLMyKO4NAaH5VOQ1EbA97cDs7y7/wAo/pn/ADCQf8m1&#xA;zxntf/G83/DJ/wC6L3PZ/wDi+P8AqR+4Kms/8ce+/wCYeX/iByvs7/Gcf9eP3hs1n9zP+rL7lG18&#xA;uX31C2eJkkVokIFaHdR47fjntvjB4CPIJbrkGv2NoyxQ3KwyVW5+r8ipSh2cId1375pu2+KeMcFn&#xA;feu56b2alhGaRyGI2HDxd99L6/aw4apa8yrckI7sM5Kn0NNYfNXmCdobSC8vLm2VlDR+rKYlUH+U&#xA;nj0zN0ZyyyxqzRB+RdVr8Gmx4ZmQhG4kXQG5H3vSPKSrFaTSsprK4APso/qc7PUbl8uDLNEmZtSi&#xA;Eak9eXgFp1OYWcektmI+plWa9zHYqgL/AEWzvH9R6pL0LpTf5g5djzyjs1zxCTz3zAsdprdxZF6+&#xA;lw4FtqhkDbfSTnnntDqDPWSEugjXyH6beq7Kw8OnBHW/vSwkzmg2hHU/zew9s0f1e52P0+9fJPDC&#xA;vxsFp0Hf6BhMhFAiZMktbO/ks4J/q8hWWNHDBSdmUHt889h7O1HHp8cpH1GESffQeC1eLhyzAGwk&#xA;fvY958imHlq6PNLcoY2LzhuP2xttvuTTNljnRvn7m7s3URwZhOfLdK/yziY6bdXLTQy+rKqUhDfD&#xA;wXlRi3U/vO2Syz4uhHvcjtjtCGolHg5RH3sX1orpnnyRJZ4vRe6S8lryDKjUdlrQLyoNt8s8X0ci&#xA;52LtjENN4Rvj4CPLkzTUYrXzJCs+mzpOsB4SKrAEMQGpXcdDkcOXh59XmiKSd/K1+v8AumTbwo36&#xA;syRnDFbH5Y1VyOUT+21P10wnPFWQ+XtCuLCYyygKCpHGvJiTTw27ZjZsoklNF/J7RNTVr57ma1e4&#xA;JcRRcSgJPX4gTue1crPbGSHpoGnaYNRIRFpJ5l/J2HSdJu9Ti1Yulshf0ZIQC29AOYf3A6ZKXtBw&#xA;xJlDl5/sc/SyObJGH84vNzA3iMrx+1enP1RmPkf0u8l2JlHIxKeaB5cuJJYb27hVtOavF+aEM3QA&#xA;qG5dfEZje0nbohoDPTy9UiBfIi+fx6OuxYwM5xT+odGZM0cMYAFFGyoo+4AZ4zkyEnikbJdxGPct&#xA;jjbl6sm8h6Dso8BkAOpZE9AmOlzLya3WlEHIKO1T/HO89lNfkyGWKZ4hEAi+nSvc8z25poxrIBRJ&#xA;r3sI/MryvLqtvPbIQkjuLi1dvslwCCDSv8xGd/jNxeckLeT2/wCXfmiW5EMlssMdaNOzoUA8fhJJ&#xA;+7Dwlr4S9y8j6ItnZpAKtbQQ/Vwx2LnbkdshmNCmwBfD5A8w2aiPR9WmWzX+7trm3E4UeAkBVqDs&#xA;M0es7I0WokZZIDjPMg1+xytPrNThHDCfpHQi1R/y782X6mLUtUnNpJtJBa2ohLKeo9QljvkNL2Ro&#xA;cEhOEAZDkZSv7OTLPrNVlHDKXpPQCvtZdbaHfQwRwRW0gjiVUQEGvFRQbnNkc0e9xhiPcqvpGoJG&#xA;ZJIvTjUVZ3ZVUAdyWIpg8aHey8KXcx/y9pVnrGoX0MJtrtrY0f4o5AAWIrUcttu2aTQRGPLPiG3T&#xA;bzej7SzmeDHwS3rej5BUj8v2f+KhoNxJCkrR+tDAG34AVqqAqSBuPDHTyOLVSlEHhN/bujU5PF0U&#xA;QT6xXv22Zpa+U7OJVV5GZV2CIAi/xzZS1cjydGMA6ptbWdtbJwgjCDvTqfmeuY8pmXNtjEDkrZFk&#xA;7FXYqlGu+VtI1oBruMrOo4pcRni4Hh3BHzGa3X9k4dV9Y9XeObmaXX5MH0nbuLGn/KuPl+61N1Tw&#xA;aIMfvDrmhl7JC9sh/wBL+12g7ePWH2/sR+mfltotrKsty73jKahHosdfdRufpOZml9mNPjNzJn7+&#xA;Xy/a4+ftrLMVECP3stAAAAFANgBnSAOnU7i2t7mFoLmJJ4HFHikUOjD3Vqg4QSNwgi0Img6JFEYo&#xA;bGCCOteEMaxip7/AFyzxp95YnHHuYhrekaHPdBzp6lgOJNzGrNQHYDkCafTmfilKty4k6B2ULa0t&#xA;LWMx20McEZPIpEoQVO1aKB4ZYwVcVdirsVTTT9fuLSEQsgljX7NTQgeFd8oyacSNtsMpApC+a9Rk&#xA;1vy9daZDGIJbjgBIzVUBZFc9B3C0zEz6EzgYgux7P7QjhzRySFgfqp5jJ5B1tD8LQyDxVyP+JKM1&#xA;Mux8w5UXroe1OlPMTHw/UWV6T5fW10QafcvzZiXdl6Bj/LXwpmxl2TDJpjgybg93Q+Ty2s7YM9V4&#xA;+MVWwvu80NJoGpxtWCdZFXZeVQQPpBGcbqPY3UxP7ucZDzsH9I+122L2hwSHriYny3H6Gl0bWpNn&#xA;mVB3PLf/AIUZTj9kdbI+qUIj3/qDZPt7TR5CR+H6ym2maXFYo1GMkslOch708Bna9jdiY9DE0eKc&#xA;uZ/UHnO0e0p6mQsVEcgiZ7eC4j9OZA6eB/hm7BI5OtQa6Dpaty9GvsWYj9eT8WSpnbW844i2jYcP&#xA;semp2p4UyqUh1SAejJdIfXTIBdL/AKP3MlA/TtTf78wcwx1tzcrGZ9eScZjNzsVSvzJ5Y0PzJp36&#xA;N1q3N1Y81lMHqSRgslePIxMhIFeh2yePIYGwxlASFFAeV/y68m+Vrma50HThZT3CCOZhLNJyUHkB&#xA;SR3HXJZM85/UUQxxjyVJvIflSbzQnmmWx5a9HT0731ZgRxT0wAgf06cNvs4jNLh4ei+GLvqn+VM3&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FWmVWFGAI8Dviqi+n2L/at4yfHgtf1ZMZJDqx4B3KLaLpZ626/RUf&#xA;qOS8afejw49ymfL+knpCR8nf+Jw/mJ96PBitPlzSydkYewY/xw/mZo8GK0+WtNJ/3YPYN/Zh/MyR&#xA;4EWv8M6d4yf8EP6Y/mpL4EXf4Z07xk/4If0x/NSXwItjy1poP+7D7Fv7MfzMl8CK4eXNMB+yx9uR&#xA;wfmZp8GK4eX9KHWEn5s38Dg/MT718GK9dE0peluNvEsf1nB48+9PhR7lVdL05eltH9Kg/rwHLLvT&#xA;wR7lVLa3T7ESL8lAyJkT1ZcIVMil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:7f80673f-2a11-4ce8-9446-2cb94b55abd6"
    stRef:documentID="xmp.did:6e4e4146-ab7a-464b-b454-de7bb07d19dd"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:6e4e4146-ab7a-464b-b454-de7bb07d19dd"
      stEvt:when="2022-01-19T11:39:43+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1d7c3066-57f0-0a42-b184-cfc11d8694b2"
      stEvt:when="2022-01-22T21:15:32+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2af3f423-da63-a34d-b26e-ebd7dce41eb3"
      stEvt:when="2022-02-21T09:37:14+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="3000.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Р‘РµР»С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Р§РµСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РєСЂР°СЃРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р¶РµР»С‚С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р·РµР»РµРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РіРѕР»СѓР±РѕР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB СЃРёРЅРёР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB РїСѓСЂРїСѓСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3000 2000 li
3000 0 li
cp
clp
3000 2000 mo
0 2000 li
0 0 li
3000 0 li
3000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
601.445 1645.49 mo
601.445 1645.49 274.655 910.131 509.825 746.384 cv
667.013 636.935 833.624 878.21 1032.49 750.57 cv
1209.53 636.935 1153.25 291.21 1435.61 243.423 cv
1753.07 189.696 1822.97 834.521 2083.5 746.384 cv
2399.63 639.436 2714.1 856.543 2442.34 1646.9 cv
601.445 1645.49 li
cp
.729412 .823529 .956863 rgb
f
1429.24 119.775 mo
1413.61 112.701 1397.33 107.863 1380.85 105.399 cv
1383.2 94.3078 li
1401.09 96.9825 1418.72 102.215 1435.61 109.858 cv
1429.24 119.775 li
cp
1282.65 119.782 mo
1275.41 110.293 li
1291.31 101.752 1308.82 96.1976 1327.46 93.7863 cv
1329.51 104.921 li
1312.72 107.092 1296.96 112.092 1282.65 119.782 cv
cp
1507.54 177.777 mo
1495.82 165.436 1483.72 154.504 1471.57 145.286 cv
1480.57 136.93 li
1493.25 146.556 1505.85 157.936 1518.03 170.751 cv
1507.54 177.777 li
cp
1217.67 186.387 mo
1205.63 181.401 li
1214.44 166.413 1224.21 153.16 1234.67 142.011 cv
1245.21 148.982 li
1235.33 159.516 1226.06 172.101 1217.67 186.387 cv
cp
1565.09 253.253 mo
1556.26 239.298 1547.25 226.198 1538.29 214.316 cv
1549.63 208.292 li
1558.77 220.414 1567.95 233.763 1576.94 247.969 cv
1565.09 253.253 li
cp
1182.5 270.791 mo
1169.48 268.061 li
1174.17 252.329 1179.32 237.511 1184.82 224.018 cv
1197.52 227.663 li
1192.14 240.856 1187.09 255.367 1182.5 270.791 cv
cp
1610.52 335.092 mo
1603.31 320.531 1596.04 306.6 1588.92 293.685 cv
1601.09 288.951 li
1608.29 302 1615.63 316.069 1622.91 330.768 cv
1610.52 335.092 li
cp
1162.34 359.49 mo
1149.06 357.879 li
1151.77 342.106 1154.75 326.937 1157.92 312.794 cv
1171.11 314.877 li
1167.97 328.864 1165.02 343.874 1162.34 359.49 cv
cp
1649.13 419.618 mo
1642.65 404.423 1636.54 390.533 1630.45 377.156 cv
1642.98 373.136 li
1649.1 386.587 1655.25 400.549 1661.76 415.818 cv
1649.13 419.618 li
cp
1150.13 449.522 mo
1136.76 448.526 li
1138.44 432.719 1140.26 417.453 1142.17 403.153 cv
1155.5 404.412 li
1153.6 418.626 1151.79 433.803 1150.13 449.522 cv
cp
2352.14 468.527 mo
2335.52 462.642 2318.7 459 2302.15 457.701 cv
2303.39 446.484 li
2321.32 447.89 2339.47 451.814 2357.36 458.147 cv
2352.14 468.527 li
cp
2205.74 482.329 mo
2198.05 473.098 li
2214.55 463.405 2231.22 456.226 2247.59 451.762 cv
2251.73 462.476 li
2236.63 466.596 2221.15 473.276 2205.74 482.329 cv
cp
1684.29 505.479 mo
1677.62 488.717 1672.12 475.05 1666.98 462.467 cv
1679.67 458.815 li
1684.82 471.424 1690.33 485.117 1697.02 501.906 cv
1684.29 505.479 li
cp
2437.24 519.511 mo
2424.33 508.399 2410.95 498.591 2397.49 490.359 cv
2405.39 481.253 li
2419.46 489.855 2433.4 500.079 2446.85 511.642 cv
2437.24 519.511 li
cp
604.93 537.722 mo
588.187 530.727 571.719 526.261 555.983 524.451 cv
557.804 513.289 li
574.989 515.267 592.856 520.093 610.908 527.636 cv
604.93 537.722 li
cp
1142.32 540.081 mo
1128.93 539.411 li
1130.09 523.036 1131.24 508.165 1132.45 493.948 cv
1145.84 494.752 li
1144.63 508.923 1143.48 523.751 1142.32 540.081 cv
cp
2130.06 544.511 mo
2119.64 537.418 li
2132.22 524.381 2144.15 513.164 2156.09 503.124 cv
2165.58 511.086 li
2153.97 520.847 2142.35 531.781 2130.06 544.511 cv
cp
460.2 547.957 mo
452.062 539 li
468.085 528.737 484.762 521.335 501.628 517.002 cv
505.554 527.775 li
490.214 531.716 474.955 538.506 460.2 547.957 cv
cp
2501.72 590.429 mo
2492.11 577.256 2482.03 564.797 2471.76 553.399 cv
2482.46 546.603 li
2492.99 558.293 2503.32 571.058 2513.16 584.542 cv
2501.72 590.429 li
cp
689.37 590.91 mo
675.656 579.699 662.171 569.796 649.291 561.475 cv
657.474 552.546 li
670.764 561.133 684.645 571.324 698.73 582.838 cv
689.37 590.91 li
cp
1718.69 591.699 mo
1712.54 576.559 1706.5 561.41 1701.41 548.588 cv
1714.14 545.023 li
1719.22 557.827 1725.25 572.952 1731.39 588.06 cv
1718.69 591.699 li
cp
391.312 614.618 mo
380.003 608.555 li
390.547 594.691 401.418 582.168 412.315 571.337 cv
422.566 578.607 li
412.052 589.057 401.537 601.174 391.312 614.618 cv
cp
2067.31 617.798 mo
2056.12 611.586 li
2067.33 597.344 2077.35 585.023 2086.77 573.922 cv
2097.7 580.457 li
2088.37 591.451 2078.43 603.665 2067.31 617.798 cv
cp
1136.56 630.858 mo
1123.15 630.291 li
1124.06 615.24 1124.96 600.182 1125.91 584.858 cv
1139.31 585.449 li
1138.36 600.764 1137.46 615.815 1136.56 630.858 cv
cp
760.907 658.06 mo
748.732 645.37 737.4 634.077 726.261 623.533 cv
736.299 616.057 li
747.579 626.735 759.047 638.162 771.356 650.992 cv
760.907 658.06 li
cp
2550.45 670.355 mo
2543.24 656.247 2535.61 642.542 2527.77 629.621 cv
2539.73 624.51 li
2547.7 637.648 2555.46 651.577 2562.78 665.911 cv
2550.45 670.355 li
cp
1755.81 677.381 mo
1749.73 664.582 1743.45 650.617 1736.61 634.69 cv
1749.23 630.867 li
1756.02 646.676 1762.25 660.526 1768.27 673.209 cv
1755.81 677.381 li
cp
2008.46 694.042 mo
1997.25 687.852 li
2006.79 675.681 2016.64 662.785 2026.61 649.758 cv
2037.89 655.848 li
2027.9 668.909 2018.04 681.816 2008.46 694.042 cv
cp
341.525 694.045 mo
329.249 689.497 li
336.615 675.49 344.464 661.735 352.805 648.286 cv
364.702 653.494 li
356.495 666.727 348.773 680.261 341.525 694.045 cv
cp
1130.59 721.778 mo
1117.2 721.051 li
1118.22 707.852 1119.25 693.017 1120.37 675.697 cv
1133.76 676.303 li
1132.65 693.663 1131.61 708.538 1130.59 721.778 cv
cp
826.232 730.151 mo
813.956 716.065 803.726 704.5 794.036 693.757 cv
804.733 686.956 li
814.468 697.75 824.74 709.361 837.061 723.499 cv
826.232 730.151 li
cp
2587.33 754.927 mo
2581.93 740.33 2576.16 725.961 2570.19 712.219 cv
2582.8 708.358 li
2588.84 722.27 2594.68 736.813 2600.15 751.583 cv
2587.33 754.927 li
cp
1803.71 759.916 mo
1795.03 748.668 1786.42 735.423 1777.41 719.423 cv
1789.53 714.604 li
1798.3 730.147 1806.62 742.964 1814.97 753.788 cv
1803.71 759.916 li
cp
1943.37 767.662 mo
1933.51 760.02 li
1943.69 750.768 1954.59 739.357 1966.86 725.132 cv
1977.73 731.738 li
1965.15 746.328 1953.91 758.079 1943.37 767.662 cv
cp
304.275 778.402 mo
291.444 775.108 li
296.776 760.47 302.624 745.912 308.829 731.837 cv
321.412 735.748 li
315.297 749.62 309.532 763.971 304.275 778.402 cv
cp
1872.34 802.676 mo
1861.89 802.676 1851.63 800.055 1841.86 794.885 cv
1849.02 785.354 li
1863.7 793.133 1878.13 793.15 1893.72 786.946 cv
1899.5 797.115 li
1890.28 800.805 1881.14 802.676 1872.34 802.676 cv
cp
889.997 803.603 mo
879.091 791.235 867.778 778.162 858.031 766.88 cv
868.892 760.265 li
878.621 771.526 889.91 784.572 900.781 796.898 cv
889.997 803.603 li
cp
1120.85 812.759 mo
1107.54 811.321 li
1109.6 797.874 1111.45 783.148 1113.19 766.302 cv
1126.56 767.275 li
1124.8 784.278 1122.93 799.156 1120.85 812.759 cv
cp
2614.9 842.123 mo
2610.93 827.243 2606.64 812.492 2602.16 798.279 cv
2615.13 795.397 li
2619.66 809.747 2623.98 824.64 2627.99 839.659 cv
2614.9 842.123 li
cp
278.46 865.823 mo
265.288 863.677 li
268.764 848.641 272.697 833.647 276.978 819.112 cv
290.003 821.817 li
285.776 836.167 281.893 850.973 278.46 865.823 cv
cp
957.782 875.063 mo
947.093 865.069 935.67 853.567 922.861 839.899 cv
933.405 832.932 li
946.033 846.406 957.272 857.725 967.765 867.536 cv
957.782 875.063 li
cp
1094.52 902.47 mo
1082.57 897.347 li
1088.72 887.248 1094.15 873.234 1098.71 855.694 cv
1111.82 858.099 li
1106.94 876.844 1101.28 891.357 1094.52 902.47 cv
cp
1047.97 929.274 mo
1029.33 926.806 1015.84 919.68 997.161 907.374 cv
1005.64 898.644 li
1022.01 909.396 1033.83 915.846 1049.4 918.072 cv
1047.97 929.274 li
cp
2634.85 930.864 mo
2632.06 915.83 2629 900.852 2625.74 886.347 cv
2638.93 884.262 li
2642.21 898.883 2645.3 913.978 2648.11 929.129 cv
2634.85 930.864 li
cp
262.966 955.036 mo
249.615 953.911 li
251.438 938.676 253.659 923.449 256.22 908.652 cv
269.498 910.272 li
266.966 924.905 264.768 939.966 262.966 955.036 cv
cp
2648.4 1020.52 mo
2646.6 1005.39 2644.57 990.281 2642.36 975.607 cv
2655.68 974.194 li
2657.9 988.966 2659.94 1004.18 2661.75 1019.41 cv
2648.4 1020.52 li
cp
256.589 1045.1 mo
243.174 1044.87 li
243.548 1029.58 244.268 1014.26 245.316 999.348 cv
258.711 1000.01 li
257.673 1014.78 256.959 1029.95 256.589 1045.1 cv
cp
2656.42 1110.69 mo
2655.5 1095.56 2654.36 1080.37 2653.05 1065.56 cv
2666.43 1064.73 li
2667.75 1079.63 2668.89 1094.9 2669.82 1110.12 cv
2656.42 1110.69 li
cp
244.8 1135.94 mo
243.91 1120.69 243.32 1105.38 243.046 1090.43 cv
256.462 1090.26 li
256.734 1105.08 257.319 1120.27 258.202 1135.39 cv
244.8 1135.94 li
cp
2659.59 1201.11 mo
2659.44 1185.96 2659.09 1170.74 2658.57 1155.88 cv
2671.99 1155.55 li
2672.51 1170.49 2672.85 1185.78 2673.01 1201.01 cv
2659.59 1201.11 li
cp
253.494 1226.71 mo
251.493 1211.55 249.752 1196.3 248.319 1181.39 cv
261.693 1180.48 li
263.116 1195.28 264.844 1210.42 266.83 1225.47 cv
253.494 1226.71 li
cp
2671.88 1291.93 mo
2658.46 1291.6 li
2658.99 1276.46 2659.35 1261.24 2659.54 1246.36 cv
2672.96 1246.48 li
2672.77 1261.42 2672.4 1276.72 2671.88 1291.93 cv
cp
268.438 1316.88 mo
265.454 1301.87 262.691 1286.73 260.227 1271.89 cv
273.516 1270.33 li
275.964 1285.08 278.708 1300.11 281.672 1315.03 cv
268.438 1316.88 li
cp
2666.86 1382.73 mo
2653.47 1382.02 li
2654.6 1366.94 2655.6 1351.74 2656.43 1336.82 cv
2669.83 1337.35 li
2669 1352.32 2668 1367.59 2666.86 1382.73 cv
cp
289.013 1406.24 mo
285.137 1391.41 281.45 1376.42 278.053 1361.67 cv
291.227 1359.53 li
294.603 1374.19 298.267 1389.09 302.118 1403.83 cv
289.013 1406.24 li
cp
2658.32 1473.33 mo
2644.96 1472.27 li
2646.66 1457.19 2648.23 1442.01 2649.63 1427.17 cv
2663.01 1428.06 li
2661.6 1442.96 2660.02 1458.19 2658.32 1473.33 cv
cp
314.811 1494.64 mo
310.114 1480.08 305.56 1465.26 301.273 1450.57 cv
314.305 1447.89 li
318.567 1462.49 323.094 1477.22 327.762 1491.69 cv
314.811 1494.64 li
cp
2646.56 1563.66 mo
2633.24 1562.28 li
2635.45 1547.26 2637.55 1532.13 2639.48 1517.31 cv
2652.82 1518.53 li
2650.89 1533.4 2648.78 1548.59 2646.56 1563.66 cv
cp
345.756 1581.89 mo
340.27 1567.78 334.842 1553.15 329.624 1538.42 cv
342.485 1535.21 li
347.669 1549.84 353.061 1564.37 358.511 1578.39 cv
345.756 1581.89 li
cp
.776471 .862745 .968627 rgb
f
2731.59 1402.88 mo
2620.25 1388.41 2638.42 1519.19 2479.7 1519.19 cv
2334.59 1519.19 2288.17 1021.15 2182.59 1163.52 cv
1641.31 1893.38 1955.62 853.132 1525.15 839.913 cv
1330.51 833.936 1200.81 1015.98 1152.98 1338.28 cv
1083.65 1629.66 922.861 1116.04 757.391 1163.8 cv
652.228 1194.15 664.272 1519.19 519.16 1519.19 cv
360.445 1519.19 378.615 1388.41 267.27 1402.88 cv
147.389 1418.47 111.582 1649.95 111.582 1649.95 cv
2887.28 1649.95 li
2887.28 1649.95 2851.47 1418.47 2731.59 1402.88 cv
cp
f
2632.99 1544.45 mo
2530.56 1538.27 2547.27 1594.11 2401.26 1594.11 cv
2267.76 1594.11 2271.43 1468.96 2182.09 1442.36 cv
2017.57 1393.37 1881.94 1641.29 1818.16 1516.86 cv
1697.02 1186.72 1343.7 1021.15 1180.7 1516.86 cv
1116.92 1641.29 967.765 1419.27 816.773 1442.36 cv
723.831 1456.57 731.105 1594.11 597.605 1594.11 cv
451.592 1594.11 468.307 1538.27 365.873 1544.45 cv
255.585 1551.1 222.644 1649.95 222.644 1649.95 cv
2776.22 1649.95 li
2776.22 1649.95 2743.28 1551.1 2632.99 1544.45 cv
cp
.823529 .898039 .968627 rgb
f
111.582 1649.95 mo
111.582 1649.95 94.1726 1709.41 174.849 1724.3 cv
285.198 1744.67 932.932 1798.17 775.574 1838.83 cv
686.746 1861.78 820.92 1892.95 1253.58 1904.43 cv
1686.24 1915.9 2428.65 1870.94 2178.99 1804.4 cv
1929.33 1737.87 2873 1809 2887.28 1649.95 cv
111.582 1649.95 li
cp
.729412 .823529 .956863 rgb
f
2674.75 1708.14 mo
2357.99 1645.56 li
2321.48 1638.35 2297.73 1602.91 2304.94 1566.4 cv
2423.34 967.101 li
2430.55 930.593 2465.99 906.844 2502.5 914.056 cv
2819.26 976.633 li
2855.77 983.846 2879.52 1019.29 2872.31 1055.8 cv
2753.91 1655.09 li
2746.7 1691.6 2711.26 1715.35 2674.75 1708.14 cv
cp
.541176 .619608 .866667 rgb
f
2581.67 1066.63 mo
2458.51 1096.84 li
2457.36 1089.65 2457.44 1082.13 2458.93 1074.55 cv
2465.74 1040.07 2499.21 1017.66 2533.68 1024.46 cv
2556.89 1029.05 2574.61 1045.71 2581.67 1066.63 cv
cp
.956863 .831373 .745098 rgb
f
2509.02 1149.3 mo
2485.81 1144.71 2468.09 1128.05 2461.04 1107.13 cv
2584.19 1076.93 li
2585.34 1084.12 2585.26 1091.63 2583.76 1099.2 cv
2576.96 1133.67 2543.49 1156.1 2509.02 1149.3 cv
cp
f
2541.55 1269.64 mo
2418.42 1299.84 li
2417.26 1292.63 2417.34 1285.12 2418.84 1277.55 cv
2425.65 1243.08 2459.12 1220.66 2493.57 1227.48 cv
2516.8 1232.06 2534.52 1248.72 2541.55 1269.64 cv
cp
f
2468.92 1352.31 mo
2445.72 1347.72 2427.99 1331.06 2420.94 1310.14 cv
2544.1 1279.93 li
2545.25 1287.12 2545.17 1294.64 2543.67 1302.2 cv
2536.84 1336.68 2503.4 1359.11 2468.92 1352.31 cv
cp
f
2501.46 1472.65 mo
2378.3 1502.86 li
2377.15 1495.67 2377.23 1488.15 2378.73 1480.57 cv
2385.53 1446.09 2419 1423.68 2453.48 1430.48 cv
2476.68 1435.07 2494.4 1451.73 2501.46 1472.65 cv
cp
f
2428.81 1555.32 mo
2405.6 1550.73 2387.88 1534.07 2380.83 1513.15 cv
2503.98 1482.94 li
2505.13 1490.14 2505.05 1497.65 2503.55 1505.21 cv
2496.75 1539.69 2463.28 1562.12 2428.81 1555.32 cv
cp
f
2716.2 1515.08 mo
2593.07 1545.28 li
2591.92 1538.09 2592 1530.58 2593.49 1522.99 cv
2600.3 1488.52 2633.75 1466.11 2668.22 1472.91 cv
2691.43 1477.5 2709.15 1494.16 2716.2 1515.08 cv
cp
f
2643.57 1597.72 mo
2620.36 1593.13 2602.65 1576.49 2595.59 1555.57 cv
2718.73 1525.37 li
2719.88 1532.56 2719.8 1540.08 2718.3 1547.64 cv
2711.49 1582.12 2678.05 1604.55 2643.57 1597.72 cv
cp
f
2756.32 1312.07 mo
2633.16 1342.27 li
2632.01 1335.08 2632.09 1327.57 2633.59 1319.98 cv
2640.39 1285.51 2673.86 1263.09 2708.34 1269.9 cv
2731.54 1274.49 2749.27 1291.15 2756.32 1312.07 cv
cp
f
2683.66 1394.71 mo
2660.48 1390.12 2642.74 1373.47 2635.71 1352.56 cv
2758.84 1322.36 li
2759.99 1329.55 2759.92 1337.07 2758.41 1344.63 cv
2751.61 1379.11 2718.14 1401.54 2683.66 1394.71 cv
cp
f
2796.43 1109.06 mo
2673.28 1139.26 li
2672.13 1132.07 2672.2 1124.56 2673.7 1116.97 cv
2680.51 1082.5 2713.98 1060.08 2748.43 1066.89 cv
2771.64 1071.48 2789.38 1088.13 2796.43 1109.06 cv
cp
f
2723.78 1191.72 mo
2700.57 1187.11 2682.85 1170.48 2675.8 1149.56 cv
2798.96 1119.35 li
2800.09 1126.55 2800.01 1134.06 2798.51 1141.62 cv
2791.7 1176.1 2758.26 1198.53 2723.78 1191.72 cv
cp
f
1227.02 992.789 mo
1227.02 1692.86 li
1227.02 1728.02 1355.06 1756.51 1513.01 1756.51 cv
1670.96 1756.51 1799 1728.02 1799 1692.86 cv
1799 992.789 li
1227.02 992.789 li
cp
.576471 .345098 .878431 rgb
f
1799 992.789 mo
1799 1027.94 1670.96 1056.44 1513.01 1056.44 cv
1355.06 1056.44 1227.02 1027.94 1227.02 992.789 cv
1227.02 957.635 1355.06 929.138 1513.01 929.138 cv
1670.96 929.138 1799 957.635 1799 992.789 cv
cp
.462745 .25098 .8 rgb
f
1295.02 737.938 mo
1295.02 965.908 li
1295.02 992.704 1392.61 1014.43 1513.01 1014.43 cv
1633.4 1014.43 1731 992.704 1731 965.908 cv
1731 737.938 li
1295.02 737.938 li
cp
.576471 .345098 .878431 rgb
f
1731 737.938 mo
1731 764.733 1633.4 786.455 1513.01 786.455 cv
1392.61 786.455 1295.02 764.733 1295.02 737.938 cv
1295.02 711.143 1392.61 689.421 1513.01 689.421 cv
1633.4 689.421 1731 711.143 1731 737.938 cv
cp
.462745 .25098 .8 rgb
f
1718.71 1366.84 mo
1718.71 1480.44 1626.61 1572.54 1513.01 1572.54 cv
1399.4 1572.54 1307.31 1480.44 1307.31 1366.84 cv
1307.31 1253.23 1399.4 1161.13 1513.01 1161.13 cv
1626.61 1161.13 1718.71 1253.23 1718.71 1366.84 cv
cp
f
1647.4 1375.37 mo
1378.62 1375.37 li
1373.91 1375.37 1370.08 1371.55 1370.08 1366.84 cv
1370.08 1362.12 1373.91 1358.3 1378.62 1358.3 cv
1647.4 1358.3 li
1652.11 1358.3 1655.94 1362.12 1655.94 1366.84 cv
1655.94 1371.55 1652.11 1375.37 1647.4 1375.37 cv
cp
.831373 .909804 1 rgb
f
1647.4 1309.47 mo
1378.62 1309.47 li
1373.91 1309.47 1370.08 1305.65 1370.08 1300.93 cv
1370.08 1296.22 1373.91 1292.4 1378.62 1292.4 cv
1647.4 1292.4 li
1652.11 1292.4 1655.94 1296.22 1655.94 1300.93 cv
1655.94 1305.65 1652.11 1309.47 1647.4 1309.47 cv
cp
f
1647.4 1441.28 mo
1378.62 1441.28 li
1373.91 1441.28 1370.08 1437.45 1370.08 1432.74 cv
1370.08 1428.02 1373.91 1424.2 1378.62 1424.2 cv
1647.4 1424.2 li
1652.11 1424.2 1655.94 1428.02 1655.94 1432.74 cv
1655.94 1437.45 1652.11 1441.28 1647.4 1441.28 cv
cp
f
633.564 1632.65 mo
314.491 1682.11 li
277.717 1687.81 243.284 1662.62 237.583 1625.84 cv
144.004 1022.18 li
138.303 985.4 163.494 950.967 200.268 945.267 cv
519.341 895.805 li
556.116 890.104 590.548 915.295 596.249 952.069 cv
689.828 1555.74 li
695.529 1592.51 670.338 1626.95 633.564 1632.65 cv
cp
.541176 .619608 .866667 rgb
f
281.088 1085.51 mo
281.083 1085.51 240.04 1052.07 240.087 1052.04 cv
240.087 1052.04 275.444 1008.69 275.444 1008.69 cv
289.45 990.302 321.107 999.429 322.615 1022.38 cv
323.3 1029.12 321.413 1036.12 316.792 1041.78 cv
316.788 1041.78 281.117 1085.56 281.088 1085.51 cv
cp
.113725 .247059 .439216 rgb
f
208.009 1132.92 mo
196.817 1123.65 195.189 1107.07 204.387 1095.8 cv
240.057 1052.07 li
240.102 1052.03 281.105 1085.52 281.092 1085.55 cv
263.5 1102.43 238.968 1157.34 208.009 1132.92 cv
cp
1 1 1 rgb
f
518.86 1048.26 mo
518.854 1048.26 477.811 1014.82 477.858 1014.78 cv
477.858 1014.78 513.215 971.442 513.215 971.442 cv
527.221 953.051 558.879 962.178 560.387 985.124 cv
561.071 991.865 559.184 998.867 554.563 1004.53 cv
554.559 1004.53 518.889 1048.31 518.86 1048.26 cv
cp
.113725 .247059 .439216 rgb
f
445.78 1095.67 mo
434.588 1086.4 432.961 1069.82 442.158 1058.55 cv
477.828 1014.82 li
477.873 1014.77 518.877 1048.26 518.863 1048.3 cv
501.271 1065.18 476.74 1120.09 445.78 1095.67 cv
cp
1 1 1 rgb
f
355.903 1563.05 mo
355.897 1563.04 314.855 1529.6 314.902 1529.57 cv
314.902 1529.57 350.258 1486.23 350.258 1486.23 cv
364.264 1467.84 395.922 1476.97 397.43 1499.91 cv
398.114 1506.65 396.227 1513.66 391.606 1519.32 cv
391.602 1519.32 355.932 1563.1 355.903 1563.05 cv
cp
.113725 .247059 .439216 rgb
f
282.823 1610.46 mo
271.631 1601.19 270.004 1584.61 279.202 1573.34 cv
314.871 1529.61 li
314.916 1529.56 355.92 1563.05 355.906 1563.08 cv
338.314 1579.97 313.783 1634.88 282.823 1610.46 cv
cp
1 1 1 rgb
f
593.674 1525.8 mo
593.669 1525.79 552.626 1492.35 552.673 1492.32 cv
552.673 1492.32 588.03 1448.98 588.03 1448.98 cv
602.036 1430.59 633.693 1439.72 635.201 1462.66 cv
635.885 1469.4 633.999 1476.4 629.378 1482.07 cv
629.374 1482.07 593.703 1525.85 593.674 1525.8 cv
cp
.113725 .247059 .439216 rgb
f
520.595 1573.21 mo
509.403 1563.94 507.775 1547.36 516.973 1536.09 cv
552.643 1492.36 li
552.688 1492.31 593.691 1525.8 593.677 1525.83 cv
576.085 1542.71 551.554 1597.63 520.595 1573.21 cv
cp
1 1 1 rgb
f
330.965 1403.87 mo
330.959 1403.86 289.916 1370.42 289.964 1370.39 cv
289.963 1370.39 325.32 1327.05 325.32 1327.05 cv
339.326 1308.66 370.984 1317.79 372.491 1340.73 cv
373.176 1347.47 371.289 1354.48 366.668 1360.14 cv
366.664 1360.14 330.994 1403.92 330.965 1403.87 cv
cp
.113725 .247059 .439216 rgb
f
257.885 1451.28 mo
246.693 1442.01 245.066 1425.43 254.263 1414.16 cv
289.933 1370.43 li
289.978 1370.38 330.982 1403.87 330.968 1403.9 cv
313.376 1420.79 288.845 1475.7 257.885 1451.28 cv
cp
1 1 1 rgb
f
568.736 1366.62 mo
568.73 1366.61 527.688 1333.17 527.735 1333.14 cv
527.735 1333.14 563.092 1289.8 563.092 1289.8 cv
577.098 1271.41 608.755 1280.54 610.263 1303.48 cv
610.947 1310.22 609.061 1317.23 604.439 1322.89 cv
604.435 1322.89 568.765 1366.67 568.736 1366.62 cv
cp
.113725 .247059 .439216 rgb
f
495.656 1414.03 mo
484.465 1404.76 482.837 1388.18 492.035 1376.91 cv
527.704 1333.18 li
527.749 1333.13 568.753 1366.62 568.739 1366.65 cv
551.147 1383.54 526.616 1438.45 495.656 1414.03 cv
cp
1 1 1 rgb
f
306.026 1244.69 mo
306.021 1244.69 264.978 1211.25 265.025 1211.21 cv
265.025 1211.21 300.382 1167.87 300.382 1167.87 cv
314.388 1149.48 346.046 1158.61 347.553 1181.55 cv
348.238 1188.29 346.351 1195.3 341.73 1200.96 cv
341.726 1200.96 306.056 1244.74 306.026 1244.69 cv
cp
.113725 .247059 .439216 rgb
f
232.947 1292.1 mo
221.755 1282.83 220.128 1266.25 229.325 1254.98 cv
264.995 1211.25 li
265.04 1211.2 306.043 1244.69 306.03 1244.73 cv
288.438 1261.61 263.906 1316.52 232.947 1292.1 cv
cp
1 1 1 rgb
f
543.798 1207.44 mo
543.792 1207.43 502.749 1173.99 502.797 1173.96 cv
538.154 1130.62 li
552.159 1112.23 583.817 1121.36 585.325 1144.3 cv
586.009 1151.04 584.122 1158.05 579.501 1163.71 cv
579.497 1163.71 543.827 1207.49 543.798 1207.44 cv
cp
.113725 .247059 .439216 rgb
f
470.718 1254.85 mo
459.526 1245.58 457.899 1229 467.096 1217.73 cv
502.766 1174 li
502.811 1173.95 543.815 1207.44 543.801 1207.47 cv
526.209 1224.36 501.678 1279.27 470.718 1254.85 cv
cp
1 1 1 rgb
f
468.624 1619.01 mo
463.107 1619.87 457.934 1616.1 457.07 1610.58 cv
356.783 970.461 li
355.919 964.944 359.691 959.77 365.208 958.906 cv
370.725 958.042 375.898 961.814 376.762 967.331 cv
477.048 1607.45 li
477.913 1612.97 474.141 1618.14 468.624 1619.01 cv
cp
.462745 .537255 .839216 rgb
f
1937.81 800.292 mo
1926.79 715.039 li
1918.06 655.746 1829.71 667.149 1836.33 726.734 cv
1847.33 811.81 li
1808.87 833.02 1784.29 876.627 1790.54 923.467 cv
1790.54 923.467 1892.38 1711.14 1892.38 1711.14 cv
1912.96 1857.36 2140.27 1827.55 2122.96 1681.33 cv
2021.12 893.656 li
2015.3 846.245 1980.27 811.21 1937.81 800.292 cv
cp
.541176 .619608 .866667 rgb
f
2028.77 1671.27 mo
1980.91 1677.46 li
1857.63 723.978 li
1855.93 710.763 1865.25 698.665 1878.47 696.956 cv
1891.68 695.248 1903.78 704.576 1905.49 717.791 cv
2028.77 1671.27 li
cp
.933333 .968627 1 rgb
f
1984.3 885.442 mo
1928.1 892.707 li
1927.09 884.897 li
1983.29 877.632 li
1984.3 885.442 li
cp
.113725 .247059 .439216 rgb
f
1960.17 919.78 mo
1932.07 923.412 li
1931.06 915.602 li
1959.16 911.97 li
1960.17 919.78 li
cp
f
1968.11 981.191 mo
1940.01 984.823 li
1939 977.013 li
1967.1 973.381 li
1968.11 981.191 li
cp
f
1976.05 1042.6 mo
1947.95 1046.23 li
1946.94 1038.42 li
1975.04 1034.79 li
1976.05 1042.6 li
cp
f
1983.99 1104.01 mo
1955.89 1107.64 li
1954.88 1099.83 li
1982.98 1096.2 li
1983.99 1104.01 li
cp
f
1991.93 1165.42 mo
1963.83 1169.06 li
1962.82 1161.25 li
1990.92 1157.61 li
1991.93 1165.42 li
cp
f
1999.87 1226.83 mo
1971.77 1230.47 li
1970.76 1222.66 li
1998.86 1219.02 li
1999.87 1226.83 li
cp
f
2007.81 1288.24 mo
1979.71 1291.88 li
1978.7 1284.07 li
2006.8 1280.43 li
2007.81 1288.24 li
cp
f
2015.75 1349.65 mo
1987.65 1353.29 li
1986.64 1345.48 li
2014.74 1341.84 li
2015.75 1349.65 li
cp
f
1992.24 946.853 mo
1936.04 954.118 li
1935.03 946.308 li
1991.23 939.043 li
1992.24 946.853 li
cp
f
2000.18 1008.26 mo
1943.98 1015.53 li
1942.97 1007.72 li
1999.17 1000.45 li
2000.18 1008.26 li
cp
f
2008.12 1069.67 mo
1951.92 1076.94 li
1950.91 1069.13 li
2007.11 1061.86 li
2008.12 1069.67 li
cp
f
2016.06 1131.08 mo
1959.86 1138.35 li
1958.85 1130.54 li
2015.05 1123.27 li
2016.06 1131.08 li
cp
f
2024 1192.5 mo
1967.8 1199.76 li
1966.79 1191.95 li
2022.99 1184.69 li
2024 1192.5 li
cp
f
2039.88 1315.32 mo
1983.68 1322.58 li
1982.67 1314.77 li
2038.87 1307.51 li
2039.88 1315.32 li
cp
f
2047.82 1376.73 mo
1991.62 1383.99 li
1990.61 1376.18 li
2046.81 1368.92 li
2047.82 1376.73 li
cp
f
2023.69 1411.06 mo
1995.59 1414.7 li
1994.58 1406.89 li
2022.68 1403.26 li
2023.69 1411.06 li
cp
f
2031.63 1472.48 mo
2003.53 1476.11 li
2002.52 1468.3 li
2030.62 1464.67 li
2031.63 1472.48 li
cp
f
2055.76 1438.14 mo
1999.56 1445.4 li
1998.55 1437.59 li
2054.75 1430.33 li
2055.76 1438.14 li
cp
f
2063.7 1499.55 mo
2007.5 1506.81 li
2006.49 1499 li
2062.69 1491.74 li
2063.7 1499.55 li
cp
f
2039.57 1533.89 mo
2011.47 1537.52 li
2010.46 1529.71 li
2038.56 1526.08 li
2039.57 1533.89 li
cp
f
2071.64 1560.96 mo
2015.44 1568.22 li
2014.43 1560.41 li
2070.63 1553.15 li
2071.64 1560.96 li
cp
f
2031.94 1253.91 mo
1975.74 1261.17 li
1974.73 1253.36 li
2030.93 1246.1 li
2031.94 1253.91 li
cp
f
2023.38 1622.82 mo
2004.87 1481.1 1990.18 1357.54 1990.18 1357.54 cv
1988.49 1343.81 1973.53 1335.53 1959.92 1338.58 cv
1947.14 1340.23 1938.08 1351.6 1939.69 1363.98 cv
1973.98 1629.19 li
1949.79 1640.69 1932.04 1664.67 1935.88 1699.21 cv
1949.17 1789.54 2088.1 1771.59 2077.99 1680.84 cv
2072.84 1645.85 2050.26 1627.38 2023.38 1622.82 cv
cp
f
1378.45 1832.33 mo
1378.45 1832.32 1389.28 1739.06 1389.38 1739.1 cv
1389.38 1739.1 1487.9 1750.6 1487.9 1750.6 cv
1528.75 1753.99 1545.31 1810.03 1512.45 1834.17 cv
1503.03 1841.63 1490.76 1845.49 1477.88 1843.98 cv
1477.88 1843.98 1378.4 1832.42 1378.45 1832.33 cv
cp
.921569 .337255 .282353 rgb
f
1237.85 1768.33 mo
1241.04 1742.75 1264.26 1724.5 1289.89 1727.49 cv
1389.29 1739.09 li
1389.4 1739.12 1378.46 1832.36 1378.4 1832.37 cv
1336.38 1822.18 1230.89 1837.9 1237.85 1768.33 cv
cp
1 1 1 rgb
f
1831.17 1738.85 mo
1831.17 1781.44 li
1831.17 1815.8 1771.83 1843.66 1698.64 1843.66 cv
1661.73 1843.66 1628.33 1836.57 1604.3 1825.13 cv
1580.69 1813.9 1566.11 1798.47 1566.11 1781.44 cv
1566.11 1738.85 li
1831.17 1738.85 li
cp
.952941 .572549 0 rgb
f
1831.17 1738.85 mo
1829.93 1813.31 1582.04 1829.11 1566.63 1744.41 cv
1566.07 1741.3 1565.91 1738.29 1566.13 1735.38 cv
1569.8 1686.07 1681.64 1665.65 1758.98 1683.39 cv
1797.25 1692.16 1827.08 1710.28 1831.17 1738.85 cv
cp
.976471 .698039 .2 rgb
f
1759.37 1683.54 mo
1643.09 1799.93 li
1640.08 1799.32 1637.79 1797.57 1634.9 1796.87 cv
1748.74 1681.19 li
1751.76 1681.8 1756.47 1682.84 1759.37 1683.54 cv
cp
.952941 .572549 0 rgb
f
478.912 1721.12 mo
478.912 1763.7 li
478.912 1798.07 419.579 1825.92 346.386 1825.92 cv
309.47 1825.92 276.078 1818.83 252.047 1807.4 cv
228.434 1796.17 213.858 1780.73 213.858 1763.7 cv
213.858 1721.12 li
478.912 1721.12 li
cp
f
478.913 1721.12 mo
477.671 1795.58 229.781 1811.38 214.379 1726.67 cv
213.813 1723.57 213.654 1720.56 213.873 1717.65 cv
217.549 1668.34 329.39 1647.92 406.73 1665.65 cv
444.999 1674.43 474.82 1692.54 478.913 1721.12 cv
cp
.976471 .698039 .2 rgb
f
407.112 1665.81 mo
290.836 1782.19 li
287.82 1781.59 285.538 1779.84 282.642 1779.14 cv
396.487 1663.46 li
399.503 1664.06 404.218 1665.11 407.112 1665.81 cv
cp
.952941 .572549 0 rgb
f
2516.93 1496.55 mo
2523.08 1589.68 2534.66 1682.61 2547.4 1775.06 cv
2550.36 1796.96 2576.47 1801.14 2578.89 1777.24 cv
2581.07 1753.49 2580.4 1731.22 2582.29 1707.36 cv
2586.64 1637.77 2592.82 1568.06 2600.53 1498.76 cv
2605.83 1438.63 2514.83 1436.1 2516.93 1496.55 cv
cp
.976471 .576471 .439216 rgb
f
2584.09 1504.89 mo
2660.32 1781.05 li
2662.77 1790.28 2668.88 1793.61 2678.09 1791.15 cv
2686.3 1788.95 2691.52 1791.64 2690.81 1783.43 cv
2666.46 1490.42 li
2659.58 1430.69 2570.35 1446.3 2584.09 1504.89 cv
cp
f
2547.4 1775.06 mo
2511.88 1776.76 2501.54 1788.88 2498.63 1797 cv
2498.61 1797.05 2498.6 1797.09 2498.58 1797.13 cv
2497.33 1800.68 2500.03 1804.4 2503.79 1804.41 cv
2581.07 1804.66 li
2582.37 1802.39 2583.1 1799.87 2583.42 1797.28 cv
2584.73 1786.76 2579.44 1775.16 2579.44 1775.16 cv
2579.44 1775.16 2563.42 1779.3 2547.4 1775.06 cv
cp
.113725 .247059 .439216 rgb
f
2498.63 1797 mo
2583.42 1797.28 li
2583.1 1799.87 2582.37 1802.39 2581.07 1804.66 cv
2503.79 1804.41 li
2500.03 1804.4 2497.33 1800.68 2498.58 1797.13 cv
2498.63 1797 li
cp
.223529 .356863 .588235 rgb
f
2652.96 1796.46 mo
2652.96 1803.4 li
2697.83 1803.4 li
2697.83 1796.46 li
2697.83 1784.03 2687.79 1773.95 2675.4 1773.95 cv
2663.01 1773.95 2652.96 1784.03 2652.96 1796.46 cv
cp
.113725 .247059 .439216 rgb
f
2652.96 1796.46 mo
2652.96 1803.4 li
2697.83 1803.4 li
2697.83 1796.46 li
2652.96 1796.46 li
cp
.223529 .356863 .588235 rgb
f
2671.85 1100.97 mo
2680.4 1115.79 2676.93 1133.81 2664.1 1141.22 cv
2651.26 1148.63 2633.92 1142.62 2625.37 1127.8 cv
2616.81 1112.98 2620.28 1094.96 2633.11 1087.55 cv
2645.95 1080.14 2663.29 1086.15 2671.85 1100.97 cv
cp
.0862745 .196078 .376471 rgb
f
2636.15 1116.47 mo
2636.15 1116.47 2666.39 1104.56 2669.27 1061.31 cv
2672.29 1015.92 2627.86 1006.79 2609.97 1019.7 cv
2636.15 1116.47 li
cp
f
2579 1150 mo
2579 1150 2507.3 1166.34 2478.74 1269.91 cv
2551.12 1286.39 li
2579 1150 li
cp
1 1 1 rgb
f
2550.04 1177.77 mo
2550.04 1177.77 2528.06 1198.25 2523.41 1211.05 cv
2518.75 1223.85 2536.07 1224.63 2536.07 1224.63 cv
2550.04 1177.77 li
cp
.819608 .878431 .94902 rgb
f
2618.44 1015.83 mo
2574.67 1003.5 2545.56 1067.11 2566.56 1100.24 cv
2618.44 1015.83 li
cp
.0862745 .196078 .376471 rgb
f
2666.39 1378.48 mo
2529.77 1378.48 li
2529.06 1324.46 2535.3 1269.84 2547.99 1217.38 cv
2555.56 1186.76 2559.91 1162.28 2589.09 1145.91 cv
2587.01 1127.78 2589.85 1101.63 2592.38 1090.86 cv
2593.71 1085.05 2597.87 1080.65 2602.55 1079.19 cv
2614.52 1075.03 2628.69 1085.23 2625 1098.72 cv
2623.92 1098.03 2620.45 1136.5 2622.84 1147.18 cv
2682.15 1166.1 2651.92 1233.48 2655.97 1278.68 cv
2656.28 1311.89 2659.48 1346.02 2666.39 1378.48 cv
cp
.976471 .576471 .439216 rgb
f
2625.33 1096.97 mo
2625.24 1097.55 2625.14 1098.14 2625 1098.72 cv
2624.22 1098.2 2622.03 1119.42 2622.01 1134.82 cv
2607.54 1141.41 2591.45 1138.44 2588.49 1137.83 cv
2587.66 1116.77 2586.81 1084.93 2602.55 1079.19 cv
2613.85 1074.35 2627.32 1084.65 2625.33 1096.97 cv
cp
.898039 .490196 .380392 rgb
f
2648.07 1082.78 mo
2645.64 1097.86 2640.55 1114.86 2628.64 1124.83 cv
2628.62 1124.83 li
2623.81 1128.83 2617.94 1131.38 2611.73 1132.6 cv
2576.54 1142.44 2535.27 1101.53 2562.77 1071.74 cv
2572.76 1062.5 2574.88 1046.14 2582.85 1036.96 cv
2594.43 1020.15 2619.85 1021.02 2633.58 1034.73 cv
2645.98 1047.13 2650.22 1064.21 2648.07 1082.78 cv
cp
.976471 .576471 .439216 rgb
f
2590.52 1073.48 mo
2589.14 1070.86 2593.29 1068.75 2594.59 1071.41 cv
2595.97 1074.03 2591.82 1076.14 2590.52 1073.48 cv
cp
.756863 .384314 .337255 rgb
f
2571.33 1070.25 mo
2569.95 1067.63 2574.09 1065.52 2575.4 1068.19 cv
2576.78 1070.81 2572.63 1072.91 2571.33 1070.25 cv
cp
f
2578.58 1090.11 mo
2574.4 1090.06 2567.91 1087.24 2573.19 1083.53 cv
2577.5 1081.19 2580.67 1072.25 2580.7 1072.16 cv
2585.16 1068.79 2578.82 1082.72 2574.01 1085.04 cv
2570.63 1087.12 2577.68 1089.12 2580.59 1088.1 cv
2581.05 1087.95 2581.53 1088.2 2581.68 1088.66 cv
2581.92 1090.21 2579.66 1089.99 2578.58 1090.11 cv
cp
f
2492.59 1664.34 mo
2492.59 1664.34 2594.45 1720.53 2710.17 1664.82 cv
2710.17 1664.82 2709.39 1653.76 2708.02 1635.57 cv
2702 1554.92 2684.68 1334 2674.54 1313.9 cv
2658.87 1317.98 2642.78 1320.75 2626.74 1322.58 cv
2591.56 1326.68 2549.32 1326.44 2516.13 1322.71 cv
2511.65 1345.94 2494.39 1562.72 2492.72 1651.72 cv
2492.63 1656.28 2492.59 1660.5 2492.59 1664.34 cv
cp
.921569 .337255 .282353 rgb
f
2673.08 1308.8 mo
2673.08 1308.8 2606.05 1368.21 2516.12 1322.7 cv
2516.24 1322.54 2528.81 1181.06 2589.09 1145.91 cv
2589.09 1145.91 2581.83 1173.42 2622.84 1147.18 cv
2673.45 1163.79 2654.38 1245.32 2673.08 1308.8 cv
cp
.227451 .447059 .666667 rgb
f
2516.12 1322.7 mo
2516.12 1322.7 2596.87 1355.47 2673.08 1308.8 cv
2681.39 1329.36 li
2681.39 1329.36 2619.15 1382.42 2513.55 1347.11 cv
2516.12 1322.7 li
cp
.807843 .223529 .196078 rgb
f
2626.75 1322.58 mo
2626.77 1322.7 2626.78 1322.83 2626.79 1322.96 cv
2629.99 1348.04 2633.87 1482.92 2633.87 1603.33 cv
2633.87 1603.33 2638.27 1603.84 2645.28 1604.13 cv
2664.13 1604.93 2701.86 1604.14 2723.49 1587.54 cv
2723.49 1587.54 2710.7 1354.45 2706.87 1334 cv
2696.45 1272.18 2664.58 1210 2635.33 1158.22 cv
2633.8 1155.53 2632.29 1152.87 2630.79 1150.23 cv
2593.99 1201.05 2614.81 1262.44 2626.75 1322.58 cv
cp
1 1 1 rgb
f
2648.07 1082.78 mo
2645.64 1097.86 2640.55 1114.86 2628.64 1124.83 cv
2628.62 1124.83 li
2635.22 1116.64 2639.34 1098.3 2639.34 1098.3 cv
2636.22 1090.14 li
2583.86 1073.24 2588.31 1031.05 2588.31 1031.05 cv
2596.12 1024.23 2606.7 1022.98 2616.74 1025.48 cv
2641.32 1031.84 2651.16 1058.38 2648.07 1082.78 cv
cp
.898039 .490196 .380392 rgb
f
2593.63 1027.22 mo
2593.63 1027.22 2589.7 1068.92 2636.56 1085.94 cv
2653.37 1076.66 li
2669.78 1044.48 2639.8 996.984 2593.63 1027.22 cv
cp
.0862745 .196078 .376471 rgb
f
2486.31 1597.51 mo
2490.42 1600.97 2497.35 1602.67 2503.2 1603.51 cv
2503.2 1603.52 li
2508.89 1604.34 2513.55 1604.34 2513.55 1604.34 cv
2522.28 1544.49 2538.41 1281.19 2550.11 1221.89 cv
2550.16 1221.66 2550.2 1221.43 2550.25 1221.21 cv
2556.52 1193.79 2575.23 1169.19 2589.09 1145.91 cv
2588.63 1146.06 2588.17 1146.21 2587.71 1146.36 cv
2529.54 1165.62 2519.02 1261.15 2508.94 1385.59 cv
2501.67 1475.32 2486.31 1597.51 2486.31 1597.51 cv
cp
1 1 1 rgb
f
2632.14 1366.81 mo
2632.14 1366.81 2677.57 1375.55 2708.96 1354.03 cv
2708.96 1354.03 2708.91 1342.54 2706.87 1334.02 cv
2704.83 1325.49 2631.4 1360.32 2631.4 1360.32 cv
2632.14 1366.81 li
cp
.819608 .878431 .94902 rgb
f
2626.75 1322.58 mo
2626.77 1322.7 2626.78 1322.83 2626.79 1322.96 cv
2629.99 1348.04 2633.87 1482.92 2633.87 1603.33 cv
2633.87 1603.33 2638.27 1603.84 2645.28 1604.13 cv
2636.47 1329.89 li
2620.64 1264.18 2598.77 1199.83 2630.79 1150.23 cv
2630.79 1150.23 2628.9 1149.12 2626.85 1148.33 cv
2624.96 1147.6 2622.9 1147.18 2622.84 1147.18 cv
2586.04 1198 2614.81 1262.44 2626.75 1322.58 cv
cp
f
2503.2 1603.51 mo
2503.2 1603.52 li
2508.89 1604.34 2513.55 1604.34 2513.55 1604.34 cv
2522.28 1544.49 2538.41 1281.19 2550.11 1221.89 cv
2550.16 1221.66 2550.2 1221.43 2550.25 1221.21 cv
2556.52 1193.79 2575.23 1169.19 2589.09 1145.91 cv
2588.63 1146.06 2588.17 1146.21 2587.71 1146.36 cv
2584.8 1147.35 2581.79 1148.52 2579.04 1149.96 cv
2576.29 1152.95 2573.14 1157.06 2570.21 1161.05 cv
2554.98 1181.55 2541.96 1208.4 2538.62 1236.09 cv
2532.5 1285.34 2509.34 1553.24 2503.2 1603.51 cv
cp
f
2621.2 1222.98 mo
2621.2 1222.98 2625.63 1240.21 2639.69 1259.96 cv
2653.75 1279.71 2676.59 1320.25 2626.56 1321.24 cv
2628.52 1336.32 li
2684.4 1329.64 li
2673.08 1252.56 li
2621.2 1222.98 li
cp
f
2647.1 1159.92 mo
2684.29 1187.43 2719.69 1238.63 2723.36 1284.07 cv
2727.2 1370.28 2646.96 1377.16 2585.81 1343.93 cv
2572.92 1337.38 2583.64 1317.57 2597.47 1321.24 cv
2607.54 1323.83 2614.67 1326.09 2624.6 1326.37 cv
2712.76 1328.84 2659.71 1257.81 2625.52 1225.86 cv
2625.52 1225.86 2622.24 1142.48 2647.1 1159.92 cv
cp
.976471 .576471 .439216 rgb
f
2709.35 1348.15 mo
2700.81 1353.18 2690.26 1356.99 2677.46 1359.23 cv
2677.46 1359.23 2677.3 1331.05 2658.04 1321.83 cv
2658.04 1321.83 2675.98 1296.99 2651.36 1263.52 cv
2637.99 1245.36 2620.56 1233.05 2617.68 1209.04 cv
2615.95 1194.55 2630.79 1150.23 2630.79 1150.23 cv
2645.79 1154.16 2685.97 1168.72 2712.59 1210.22 cv
2743.4 1258.24 2755.37 1321.05 2709.35 1348.15 cv
cp
1 1 1 rgb
f
2578.17 1376.68 mo
2479.31 1369.09 li
2448.93 1199.86 li
2547.78 1207.46 li
2578.17 1376.68 li
cp
.113725 .247059 .439216 rgb
f
2472 1309.91 mo
2467.67 1310.75 2459.05 1305.95 2465.64 1302.07 cv
2468.14 1300.72 2470.49 1301.92 2472.52 1302.74 cv
2472.31 1302.75 li
2479 1302.45 2477.91 1309.59 2472 1309.91 cv
cp
.976471 .576471 .439216 rgb
f
2469.61 1303.36 mo
2466.66 1303.02 2463.36 1301.93 2461.95 1299.09 cv
2460.07 1294.54 2469.46 1291.96 2471.12 1295.98 cv
2471.09 1295.9 2471.01 1295.89 2471.2 1295.99 cv
2471.39 1296.08 2471.75 1296.18 2471.99 1296.22 cv
2472 1296.22 2472.12 1296.23 2471.96 1296.22 cv
2478.7 1297.18 2474.88 1304.09 2469.61 1303.36 cv
cp
f
2466.85 1296.59 mo
2462.75 1295.07 li
2456.87 1292.32 2463.79 1286.59 2467.91 1288.55 cv
2467.91 1288.55 2472 1290.06 2472 1290.06 cv
2477.89 1292.82 2470.96 1298.54 2466.85 1296.59 cv
cp
f
2465.53 1290.32 mo
2461.44 1288.81 li
2455.55 1286.05 2462.48 1280.33 2466.59 1282.28 cv
2466.59 1282.28 2470.69 1283.8 2470.69 1283.8 cv
2476.57 1286.55 2469.65 1292.28 2465.53 1290.32 cv
cp
f
2598.67 1332.18 mo
2598.65 1331.21 2598.36 1330.32 2597.87 1329.56 cv
2599.21 1327.93 2600.26 1323.41 2598.81 1321.59 cv
2591.7 1312.67 2573.73 1307.46 2563.43 1306 cv
2559.34 1305.41 2555.19 1305.27 2551.1 1305.51 cv
2547.11 1305.66 2547.04 1311.92 2551.09 1312.09 cv
2555.47 1312.36 2559.77 1313.13 2563.93 1314.44 cv
2558.68 1313.88 2553.26 1313.64 2547.98 1313.81 cv
2544.08 1313.77 2543.61 1319.84 2547.52 1320.36 cv
2554.94 1321.42 2562.29 1323.33 2569.36 1325.79 cv
2562.39 1324.96 2555.47 1323.74 2548.61 1322.19 cv
2544.63 1321.25 2543 1327.45 2546.97 1328.57 cv
2554.45 1330.86 2562.06 1332.77 2569.76 1334.23 cv
2565.86 1334 2561.85 1333.57 2557.98 1333.09 cv
2554.06 1332.53 2552.84 1338.6 2556.74 1339.55 cv
2558.17 1339.93 2559.59 1340.32 2561.02 1340.69 cv
2571.16 1343.19 2581.52 1345.11 2592 1345.26 cv
2597 1345.81 2600.5 1339.74 2597.23 1335.82 cv
2598.15 1334.89 2598.7 1333.6 2598.67 1332.18 cv
cp
f
2617.16 1088.93 mo
2616.77 1088.93 2616.45 1088.64 2616.4 1088.26 cv
2616.35 1087.84 2616.65 1087.46 2617.07 1087.42 cv
2636.47 1085.19 li
2636.88 1085.14 2637.26 1085.44 2637.31 1085.85 cv
2637.36 1086.27 2637.06 1086.65 2636.64 1086.7 cv
2617.24 1088.92 li
2617.21 1088.93 2617.18 1088.93 2617.16 1088.93 cv
cp
.756863 .384314 .337255 rgb
f
2624.01 1113.4 mo
2623.75 1113.4 2623.5 1113.27 2623.36 1113.03 cv
2623.14 1112.67 2623.26 1112.21 2623.62 1111.99 cv
2643.34 1100.22 li
2643.7 1100.01 2644.17 1100.12 2644.38 1100.48 cv
2644.6 1100.84 2644.48 1101.31 2644.12 1101.53 cv
2624.4 1113.3 li
2624.28 1113.37 2624.14 1113.4 2624.01 1113.4 cv
cp
f
2657.65 1090.4 mo
2653.94 1107.54 2633.01 1103.11 2636.56 1085.94 cv
2640.27 1068.8 2661.19 1073.23 2657.65 1090.4 cv
cp
.976471 .576471 .439216 rgb
f
2652.21 1093.94 mo
2651.64 1093.95 2651.21 1093.37 2651.38 1092.82 cv
2654.65 1083.71 2650.61 1079.88 2644.46 1082.41 cv
2643.43 1082.83 2642.78 1081.19 2643.83 1080.8 cv
2651.03 1077.86 2656.94 1082.41 2653.03 1093.33 cv
2652.92 1093.7 2652.58 1093.94 2652.21 1093.94 cv
cp
.756863 .384314 .337255 rgb
f
2644.15 1092.73 mo
2641.46 1092.52 2646.58 1084.24 2653.13 1083.8 cv
2653.59 1083.77 2654.02 1084.13 2654.05 1084.6 cv
2654.08 1085.08 2653.72 1085.49 2653.24 1085.52 cv
2646.54 1086.22 2645.73 1092.51 2644.15 1092.73 cv
cp
f
2648.21 1098.31 mo
2648.24 1100.82 2644.29 1100.82 2644.33 1098.31 cv
2644.29 1095.79 2648.24 1095.79 2648.21 1098.31 cv
cp
.956863 .831373 .745098 rgb
f
2558.08 1077.97 mo
2558.08 1077.97 2572.51 1090.29 2618.44 1085.94 cv
2618.44 1085.94 2617.11 1103.48 2625.52 1112.9 cv
2625.52 1112.9 2602.16 1131.13 2575.67 1126.88 cv
2575.67 1126.88 2557.29 1118.66 2553.69 1102.19 cv
2550.08 1085.71 2558.08 1077.97 2558.08 1077.97 cv
cp
.929412 .921569 1 rgb
f
2602.87 1069.24 mo
2602.61 1069.24 2602.36 1069.11 2602.22 1068.88 cv
2597.26 1060.72 2590.26 1060.13 2590.19 1060.12 cv
2589.77 1060.09 2589.46 1059.73 2589.48 1059.31 cv
2589.51 1058.9 2589.87 1058.58 2590.29 1058.61 cv
2590.61 1058.63 2598.13 1059.22 2603.51 1068.09 cv
2603.73 1068.45 2603.62 1068.91 2603.26 1069.13 cv
2603.14 1069.21 2603 1069.24 2602.87 1069.24 cv
cp
.756863 .384314 .337255 rgb
f
2572.12 1061.58 mo
2571.87 1061.58 2571.62 1061.45 2571.48 1061.22 cv
2571.25 1060.87 2571.36 1060.4 2571.72 1060.18 cv
2571.94 1060.04 2577.19 1056.83 2583.05 1058.14 cv
2583.46 1058.23 2583.72 1058.64 2583.63 1059.05 cv
2583.54 1059.46 2583.13 1059.72 2582.72 1059.62 cv
2577.46 1058.44 2572.57 1061.44 2572.52 1061.47 cv
2572.4 1061.54 2572.26 1061.58 2572.12 1061.58 cv
cp
f
2601.44 1322.28 mo
2601.44 1322.28 2603.88 1336.37 2593.39 1347.8 cv
2593.39 1347.8 2594.28 1350.57 2599.24 1350.46 cv
2599.24 1350.46 2608.04 1338.56 2607.07 1323.73 cv
2607.07 1323.73 2604.82 1320.96 2601.44 1322.28 cv
cp
.113725 .247059 .439216 rgb
f
2492.59 1664.34 mo
2492.59 1664.34 2594.45 1720.53 2710.17 1664.82 cv
2710.17 1664.82 2709.39 1653.76 2708.02 1635.57 cv
2697.82 1637.34 2685.34 1642.47 2670.78 1653.87 cv
2626.85 1688.29 2599.83 1659.18 2571.21 1653.87 cv
2545.15 1649.03 2536.5 1672.38 2492.72 1651.72 cv
2492.63 1656.28 2492.59 1660.5 2492.59 1664.34 cv
cp
.807843 .223529 .196078 rgb
f
1518.4 300.28 mo
1518.4 300.28 1531.97 274.888 1573.32 282.384 cv
1614.66 289.881 1624.42 340.722 1638.46 363.864 cv
1668.18 412.884 1677.09 464.972 1661.65 489.995 cv
1644.49 517.786 1606.62 506.919 1551.3 501.936 cv
1492.28 496.618 1467.55 446.976 1504.27 378.717 cv
1518.4 300.28 li
cp
.4 .160784 .282353 rgb
f
1535.54 418.325 mo
1535.54 418.34 1535.52 418.34 1535.5 418.37 cv
1535.41 418.521 1535.16 418.914 1534.76 419.534 cv
1528.64 429.03 1489.44 491.798 1487 543.134 cv
1486.74 548.925 1485.8 554.641 1484.29 560.251 cv
1481.01 560.009 1477.63 559.767 1474.19 559.525 cv
1469.67 559.208 1465.06 558.875 1460.51 558.542 cv
1446.45 557.544 1432.99 556.577 1424.52 555.972 cv
1419.01 514.964 1475.13 430.875 1526.3 420.91 cv
1526.3 420.895 1526.3 420.895 1526.3 420.895 cv
1526.31 420.895 1526.33 420.88 1526.34 420.88 cv
1531.81 419.096 1535.22 418.37 1535.54 418.325 cv
cp
1 1 1 rgb
f
1295.77 1035.85 mo
1377.99 1034.97 li
1377.78 1022.24 1374.28 996.531 1376.89 982.001 cv
1376.89 982.001 1341.4 986.437 1341.4 986.437 cv
1342.38 993.418 1344.57 1008.55 1332.61 1012.18 cv
1317.12 1016.87 1300.26 1015.43 1290.59 1026.98 cv
1288.08 1030.86 1291.05 1035.9 1295.77 1035.85 cv
cp
.976471 .576471 .439216 rgb
f
1380.4 1027.28 mo
1380.1 1029.97 1379.36 1032.6 1377.99 1034.97 cv
1294.97 1035.86 li
1290.94 1035.9 1287.97 1032.08 1289.27 1028.38 cv
1292.32 1019.72 1303.13 1007.09 1341.37 1004.74 cv
1341.37 1004.74 1354.75 1007.79 1376.11 1003.8 cv
1376.11 1003.8 1381.66 1016.34 1380.4 1027.28 cv
cp
.113725 .247059 .439216 rgb
f
1313.68 1025.28 mo
1313.02 1025.28 1312.39 1024.9 1312.12 1024.28 cv
1309 1017.04 1303.49 1014.87 1303.25 1014.78 cv
1298.85 1008.29 1311.41 1012.81 1315.23 1023.02 cv
1315.71 1024.06 1314.84 1025.3 1313.68 1025.28 cv
cp
.909804 .752941 .65098 rgb
f
1326.73 1023.61 mo
1326.02 1023.61 1325.36 1023.17 1325.13 1022.48 cv
1322.34 1014.08 1314.73 1010.27 1314.65 1010.23 cv
1310.63 1002.68 1325.25 1010.66 1328.33 1021.48 cv
1328.69 1022.51 1327.84 1023.62 1326.73 1023.61 cv
cp
f
1341.58 1021.68 mo
1340.89 1021.68 1340.25 1021.26 1340 1020.6 cv
1336.76 1011.89 1329.45 1007.2 1329.38 1007.16 cv
1326.26 999.224 1339.56 1008.74 1343.16 1019.5 cv
1343.57 1020.53 1342.72 1021.7 1341.58 1021.68 cv
cp
f
1289.32 1028.24 mo
1380.4 1027.28 li
1380.1 1029.97 1379.36 1032.6 1377.99 1034.97 cv
1294.97 1035.86 li
1290.88 1035.91 1287.9 1031.97 1289.32 1028.24 cv
cp
.223529 .356863 .588235 rgb
f
1556.24 731.693 mo
1515.77 730.045 1445.28 708.45 1414.87 758.334 cv
1381.58 812.817 1389.73 928.398 1393.1 984.254 cv
1348.67 998.115 1324.79 984.254 1324.79 984.254 cv
1305.87 869.914 1243.54 609.471 1451.96 645.608 cv
1451.95 645.6 1591.73 645.6 1591.73 645.6 cv
1615.11 691.777 1594.2 730.921 1556.24 731.693 cv
cp
.988235 .705882 .705882 rgb
f
1394.37 1035.84 mo
1476.58 1034.97 li
1476.37 1022.23 1472.87 996.526 1475.48 981.996 cv
1475.48 981.996 1439.99 986.437 1439.99 986.437 cv
1440.97 993.418 1443.44 1008.55 1431.2 1012.17 cv
1415.68 1016.76 1398.85 1015.42 1389.18 1026.97 cv
1386.67 1030.85 1389.64 1035.89 1394.37 1035.84 cv
cp
.976471 .576471 .439216 rgb
f
1479 1027.27 mo
1478.69 1029.97 1477.95 1032.59 1476.58 1034.97 cv
1393.57 1035.85 li
1389.53 1035.9 1386.56 1032.08 1387.86 1028.37 cv
1390.92 1019.72 1401.72 1007.08 1439.96 1004.74 cv
1439.96 1004.74 1453.36 1008.2 1474.72 1004.22 cv
1474.72 1004.22 1480.25 1016.34 1479 1027.27 cv
cp
.113725 .247059 .439216 rgb
f
1412.27 1025.27 mo
1411.61 1025.27 1410.99 1024.9 1410.72 1024.27 cv
1407.59 1017.03 1402.08 1014.86 1401.85 1014.77 cv
1397.44 1008.29 1410 1012.8 1413.82 1023.01 cv
1414.3 1024.06 1413.44 1025.29 1412.27 1025.27 cv
cp
.909804 .752941 .65098 rgb
f
1425.32 1023.6 mo
1424.61 1023.6 1423.95 1023.16 1423.72 1022.47 cv
1420.93 1014.08 1413.32 1010.27 1413.24 1010.23 cv
1409.23 1002.67 1423.85 1010.65 1426.92 1021.47 cv
1427.28 1022.5 1426.44 1023.62 1425.32 1023.6 cv
cp
f
1494.29 463.443 mo
1494.29 463.443 1463.33 489.288 1453.19 522.97 cv
1445 550.163 1473.24 542.015 1478.29 527.087 cv
1483.34 512.159 1494.29 463.443 1494.29 463.443 cv
cp
.819608 .878431 .94902 rgb
f
1440.17 1021.67 mo
1439.48 1021.67 1438.84 1021.26 1438.59 1020.6 cv
1435.35 1011.88 1428.04 1007.2 1427.97 1007.15 cv
1424.85 999.22 1438.16 1008.74 1441.75 1019.49 cv
1442.16 1020.53 1441.31 1021.69 1440.17 1021.67 cv
cp
.909804 .752941 .65098 rgb
f
1387.91 1028.24 mo
1479 1027.27 li
1478.69 1029.97 1477.95 1032.59 1476.58 1034.97 cv
1393.57 1035.85 li
1389.47 1035.9 1386.5 1031.96 1387.91 1028.24 cv
cp
.223529 .356863 .588235 rgb
f
1463.34 645.6 mo
1451.38 730.04 li
1399.12 749.985 1395.35 803.317 1390.59 863.299 cv
1366.38 770.628 1368.49 676.905 1463.34 645.6 cv
cp
.956863 .623529 .623529 rgb
f
1608.91 735.608 mo
1566.56 760.869 1524.26 733.306 1494.48 791.568 cv
1470.44 842.58 1483.92 940.061 1490.52 984.254 cv
1446.1 998.115 1422.21 984.254 1422.21 984.254 cv
1395.87 885.621 1335.63 656.401 1505.86 645.604 cv
1552.48 644.166 1613.73 644.561 1654.93 642.156 cv
1654.93 642.156 1666.37 701.333 1608.91 735.608 cv
cp
.988235 .705882 .705882 rgb
f
1655.75 618.826 mo
1659.36 643.807 1654.13 672.851 1654.13 672.851 cv
1599.1 655.9 1549.07 654.332 1465.48 643.018 cv
1518.27 489.792 1395.99 597.005 1535.56 418.309 cv
1535.89 418.336 1570.23 417.707 1570.23 417.707 cv
1609.47 446.304 1634.63 487.845 1655.75 618.826 cv
cp
.921569 .337255 .282353 rgb
f
1535.5 418.37 mo
1535.41 418.521 1535.16 418.914 1534.76 419.534 cv
1528.64 429.03 1489.44 491.798 1487 543.134 cv
1486.74 548.925 1485.8 554.641 1484.29 560.251 cv
1471.37 608.714 1416.27 650.494 1377.78 675.852 cv
1334.85 704.159 1320.51 763.267 1326.35 820.5 cv
1326.35 820.5 1322.93 821.015 1317.95 821.302 cv
1310.67 821.74 1300.04 821.71 1291.83 818.958 cv
1291.83 818.958 1281.45 750.49 1301.26 708.287 cv
1321.04 666.069 1364.6 642.389 1418.26 626.436 cv
1420.28 625.847 1422.18 625.196 1424.01 624.516 cv
1445.03 616.668 1454.39 603.331 1458.26 588.679 cv
1458.26 588.664 li
1460.87 578.805 1460.97 568.341 1460.51 558.542 cv
1460.12 550.332 1459.29 542.575 1459.16 536.042 cv
1458.71 512.892 1477.86 479.52 1515.42 438.98 cv
1521.62 432.297 1528.31 425.431 1535.5 418.37 cv
cp
1 1 1 rgb
f
1664.86 637.021 mo
1663.89 656.936 1661.39 676.291 1656.34 692.833 cv
1643.12 736.079 1599.41 748.947 1555.14 763.101 cv
1510.86 777.254 1509.63 820.5 1509.63 820.5 cv
1490.62 825.097 1465.34 823.373 1451.41 821.846 cv
1445.09 821.151 1441.11 820.5 1441.11 820.5 cv
1450.13 710.782 1512.81 688.206 1546.29 658.175 cv
1579.76 628.145 1552.12 566.723 1552.62 522.963 cv
1553.09 480.578 1569.18 421.53 1570.2 417.886 cv
1570.21 417.826 1570.23 417.765 1570.24 417.705 cv
1572.69 418.642 1575.08 419.61 1577.4 420.638 cv
1641.57 448.506 1659.02 505.377 1662.09 545.584 cv
1664.08 571.305 1666.45 604.904 1664.86 637.021 cv
cp
f
1568.67 463.022 mo
1564.58 484.993 1560.79 509.49 1561.25 522.963 cv
1562.22 551.284 1580.76 612.253 1569.63 645.595 cv
1558.51 678.937 1514.94 685.121 1484.66 727.324 cv
1454.39 769.542 1451.41 821.846 1451.41 821.846 cv
1445.09 821.151 1441.11 820.5 1441.11 820.5 cv
1450.13 710.782 1512.81 688.206 1546.29 658.175 cv
1579.76 628.145 1552.12 566.723 1552.62 522.963 cv
1553.09 480.578 1569.18 421.53 1570.2 417.886 cv
1570.21 417.826 1570.23 417.765 1570.24 417.705 cv
1572.82 417.75 1575.39 417.886 1577.97 418.128 cv
1577.86 418.597 1577.65 419.459 1577.4 420.638 cv
1575.91 427.246 1572.18 444.212 1568.67 463.022 cv
cp
.819608 .878431 .94902 rgb
f
1535.54 418.325 mo
1535.54 418.34 1535.52 418.34 1535.5 418.37 cv
1535.41 418.521 1535.16 418.914 1534.76 419.534 cv
1528.64 429.03 1489.44 491.798 1487 543.134 cv
1486.74 548.925 1485.8 554.641 1484.29 560.251 cv
1471.37 608.714 1416.27 650.494 1377.78 675.852 cv
1334.85 704.159 1320.51 763.267 1326.35 820.5 cv
1326.35 820.5 1322.93 821.015 1317.95 821.302 cv
1307.42 749.008 1336.98 691.291 1361.41 675.338 cv
1375.38 666.22 1402.03 644.476 1424.01 624.516 cv
1440.47 609.561 1454.31 595.604 1458.26 588.679 cv
1458.26 588.664 li
1463.67 579.137 1469.82 569.067 1474.19 559.525 cv
1477.22 552.902 1479.39 546.536 1479.86 540.79 cv
1480.96 526.788 1480.42 505.467 1494.29 477.675 cv
1501.2 463.809 1509.16 449.686 1515.42 438.98 cv
1521.73 428.199 1526.3 420.91 1526.3 420.91 cv
1526.34 420.88 li
1531.81 419.096 1535.22 418.37 1535.54 418.325 cv
cp
f
1317.95 654.364 mo
1502.94 654.364 li
1466.11 522.97 li
1282.24 522.97 li
1317.95 654.364 li
cp
.0862745 .196078 .376471 rgb
f
1502.94 653.714 mo
1502.94 662.636 li
1317.95 662.636 li
1317.95 653.714 li
1502.94 653.714 li
cp
.137255 .258824 .439216 rgb
f
1463.33 522.97 mo
1469.95 522.97 li
1506.03 653.714 li
1593.82 653.714 li
1593.82 662.636 li
1499.86 662.636 li
1499.86 654.655 li
1463.33 522.97 li
cp
.0431373 .152941 .309804 rgb
f
1536.39 406.405 mo
1535.56 418.309 li
1535.56 418.309 1534.92 425.164 1535.76 430.633 cv
1537.31 440.719 1547.91 443.958 1555.14 437.969 cv
1561.89 432.371 1570.23 417.707 1570.23 417.707 cv
1570.23 417.707 1570.18 410.819 1570.82 406.02 cv
1536.39 406.405 li
cp
.976471 .576471 .439216 rgb
f
1577.55 372.331 mo
1577.41 372.897 1577.24 373.469 1577.05 374.017 cv
1576.31 373.434 1572.09 393.242 1570.56 408.343 cv
1555.79 416.73 1538.69 415.615 1535.76 414.739 cv
1536.55 392.396 1538.49 358.963 1556.24 352.734 cv
1568.15 349.07 1580.77 360.446 1577.55 372.331 cv
cp
.898039 .490196 .380392 rgb
f
1532.78 298.727 mo
1488.16 293.54 1481.08 361.784 1511.41 386.894 cv
1532.78 298.727 li
cp
.4 .160784 .282353 rgb
f
1585.38 346.814 mo
1587.53 361.716 1587.67 379.195 1579.08 392.04 cv
1579.06 392.046 li
1555.59 429.247 1477.91 405.264 1499.2 361.152 cv
1502.32 355.522 1504.08 348.677 1504.32 342.872 cv
1505.02 281.954 1579.16 294.738 1585.38 346.814 cv
cp
.976471 .576471 .439216 rgb
f
1526.68 354.748 mo
1524.55 352.681 1527.95 349.494 1530.01 351.621 cv
1532.14 353.688 1528.74 356.875 1526.68 354.748 cv
cp
.756863 .384314 .337255 rgb
f
1507.06 357.276 mo
1504.94 355.209 1508.34 352.022 1510.4 354.149 cv
1512.53 356.216 1509.13 359.403 1507.06 357.276 cv
cp
f
1518.75 374.17 mo
1514.82 374.776 1509.14 373.789 1512.85 369.23 cv
1516.34 365.782 1516.74 356.445 1516.75 356.352 cv
1516.77 355.258 1518.56 355.306 1518.5 356.415 cv
1518.49 356.826 1518.07 366.505 1514.1 370.421 cv
1513.65 370.866 1513.19 371.476 1513.52 371.855 cv
1514.45 372.924 1518.87 373.102 1521.41 371.39 cv
1521.8 371.122 1522.35 371.215 1522.63 371.602 cv
1523.29 373.38 1520.11 373.763 1518.75 374.17 cv
cp
f
1585.38 346.814 mo
1587.53 361.716 1587.67 379.195 1579.08 392.04 cv
1579.06 392.046 li
1583.02 382.416 1581.54 363.958 1581.54 363.958 cv
1576.06 357.184 li
1520.13 356.459 1511.91 315.566 1511.91 315.566 cv
1536.49 283.57 1582.46 312.465 1585.38 346.814 cv
cp
.898039 .490196 .380392 rgb
f
1516.2 310.431 mo
1516.2 310.431 1524.51 350.693 1575.13 353.129 cv
1588.7 339.512 li
1595 304.464 1552.01 268.58 1516.2 310.431 cv
cp
.4 .160784 .282353 rgb
f
1596.96 351.209 mo
1598.76 368.255 1576.53 370.21 1575.13 353.128 cv
1573.34 336.083 1595.56 334.128 1596.96 351.209 cv
cp
.976471 .576471 .439216 rgb
f
1591.73 346.798 mo
1591.73 346.797 1591.73 346.797 1591.73 346.797 cv
1589.46 340.041 1576.04 347.256 1581.75 347.511 cv
1581.78 347.213 1587.72 343.761 1589.58 346.756 cv
1583.72 349.435 1581.76 360.02 1585.16 356.598 cv
1585.16 356.534 1585.87 350.507 1590.48 348.229 cv
1592.77 363.624 1594.85 352.944 1591.73 346.798 cv
cp
.756863 .384314 .337255 rgb
f
1590.15 361.391 mo
1590.94 363.748 1587.1 364.895 1586.39 362.515 cv
1585.6 360.157 1589.44 359.011 1590.15 361.391 cv
cp
.956863 .831373 .745098 rgb
f
1391.71 965.068 mo
1392.44 977.032 1393.1 984.254 1393.1 984.254 cv
1348.67 998.115 1324.79 984.254 1324.79 984.254 cv
1324.79 984.254 1323.89 978.143 1321.97 967.792 cv
1322.5 968.049 1350.1 981.463 1391.71 965.068 cv
cp
.956863 .623529 .623529 rgb
f
1490.52 984.254 mo
1446.1 998.115 1422.21 984.254 1422.21 984.254 cv
1422.21 984.254 1420.72 978.712 1418.2 969.146 cv
1418.2 969.146 1442.7 981.49 1488.2 969.146 cv
1489.54 978.604 1490.52 984.254 1490.52 984.254 cv
cp
f
1533.96 347.842 mo
1533.75 347.842 1533.53 347.775 1533.35 347.637 cv
1527.77 343.403 1522.69 344.78 1522.48 344.841 cv
1521.95 344.992 1521.4 344.701 1521.24 344.191 cv
1521.08 343.682 1521.38 343.148 1521.9 342.994 cv
1522.15 342.919 1528.15 341.241 1534.58 346.118 cv
1535.01 346.447 1535.08 347.053 1534.75 347.471 cv
1534.55 347.715 1534.26 347.842 1533.96 347.842 cv
cp
.756863 .384314 .337255 rgb
f
1504.75 350.168 mo
1504.55 350.168 1504.36 350.114 1504.19 350.003 cv
1503.73 349.705 1503.61 349.105 1503.92 348.664 cv
1504.05 348.477 1507.15 344.095 1512.32 344.288 cv
1512.87 344.309 1513.3 344.757 1513.28 345.29 cv
1513.26 345.822 1512.8 346.246 1512.24 346.215 cv
1508.18 346.089 1505.6 349.707 1505.57 349.743 cv
1505.38 350.019 1505.07 350.168 1504.75 350.168 cv
cp
f
1530.05 374.902 mo
1529.06 374.902 1527.8 375.299 1526.61 376.193 cv
1524.55 377.739 1523.92 379.831 1524.65 380.741 cv
1525.37 381.651 1527.62 381.589 1529.68 380.044 cv
1531.75 378.498 1532.37 376.407 1531.65 375.496 cv
1531.65 375.496 li
1531.34 375.113 1530.76 374.902 1530.05 374.902 cv
cp
1526.24 383.276 mo
1524.94 383.276 1523.79 382.828 1523.07 381.92 cv
1521.53 379.985 1522.55 376.799 1525.39 374.668 cv
1528.24 372.538 1531.68 372.382 1533.22 374.317 cv
1533.22 374.317 1533.22 374.317 1533.22 374.317 cv
1534.77 376.253 1533.75 379.438 1530.9 381.569 cv
1529.39 382.701 1527.71 383.276 1526.24 383.276 cv
cp
f
1630.94 446.777 mo
1673.58 477.748 1696.36 533.485 1685.1 584.168 cv
1680.78 612.64 1662.24 639.717 1633.24 647.776 cv
1618.92 653.325 1552.13 662.249 1555.24 639.275 cv
1556.3 633.764 1561.35 631.734 1566.23 630.262 cv
1574.29 627.511 1582.59 624.471 1590.26 621.089 cv
1604.01 614.174 1621.69 607.695 1624.68 592.736 cv
1631.06 557.808 1616.29 523.66 1589.35 500.859 cv
1589.4 500.886 1589.23 500.754 1589.62 501.035 cv
1553.12 474.688 1594.22 420.762 1630.94 446.777 cv
cp
.976471 .576471 .439216 rgb
f
1664.86 637.021 mo
1662.2 638.578 1659.41 640.091 1656.51 641.542 cv
1635.39 652.142 1614.22 653.805 1598.41 654.365 cv
1598.41 654.365 1602.06 631.502 1585.02 622.096 cv
1665.42 562.882 1579.92 528.4 1573.38 470.463 cv
1570.82 447.814 1577.97 418.128 1577.97 418.128 cv
1676.2 427.125 1775.61 572.303 1664.86 637.021 cv
cp
1 1 1 rgb
f
1514.5 653.714 mo
1514.5 653.714 1522.74 625.8 1571.92 629.016 cv
1582.22 653.714 li
1514.5 653.714 li
cp
.976471 .576471 .439216 rgb
f
1609.82 653.594 mo
1602.79 654.354 1598.41 654.367 1598.41 654.367 cv
1598.41 654.367 1602.06 631.509 1585.02 622.092 cv
1585.02 622.092 1589.21 619.45 1594.69 614.762 cv
1594.69 614.762 1613.38 628.054 1609.82 653.594 cv
cp
.819608 .878431 .94902 rgb
f
1517.18 653.432 mo
1508.44 653.693 1540.26 632.541 1549.75 637.714 cv
1549.83 638.46 1549.27 639.126 1548.5 639.201 cv
1530.6 641.013 1518.69 653.379 1517.18 653.432 cv
cp
.898039 .490196 .380392 rgb
f
1530.66 653.911 mo
1524.03 651.167 1544.63 646.466 1554.83 643.791 cv
1555.58 643.637 1556.33 644.11 1556.49 644.843 cv
1556.64 645.576 1556.15 646.293 1555.4 646.444 cv
1544.53 648.613 1531.76 653.796 1530.66 653.911 cv
cp
f
1592.84 621.513 mo
1592.15 621.513 1591.47 621.219 1591 620.655 cv
1590.2 619.674 1590.37 618.248 1591.38 617.469 cv
1622.74 593.353 1619.99 562.864 1610.48 548.253 cv
1600.13 532.337 1582.22 503.224 1582.04 502.932 cv
1581.38 501.856 1581.74 500.464 1582.86 499.823 cv
1583.97 499.181 1585.4 499.534 1586.06 500.609 cv
1586.24 500.902 1604.12 529.966 1614.44 545.835 cv
1624.85 561.828 1628.06 595.05 1594.29 621.021 cv
1593.86 621.352 1593.35 621.513 1592.84 621.513 cv
cp
.819608 .878431 .94902 rgb
f
1605.65 654.055 mo
1604.44 654.055 1603.41 653.149 1603.32 651.958 cv
1603.22 650.708 1604.19 649.619 1605.48 649.526 cv
1605.86 649.497 1643.92 646.611 1661.44 636.398 cv
1662.55 635.754 1663.99 636.098 1664.65 637.173 cv
1665.32 638.247 1664.96 639.64 1663.86 640.286 cv
1645.38 651.054 1607.44 653.932 1605.83 654.049 cv
1605.77 654.053 1605.71 654.055 1605.65 654.055 cv
cp
f
887 1115 mo
887 1729 li
887 1748.33 953.71 1764 1036 1764 cv
1118.29 1764 1185 1748.33 1185 1729 cv
1185 1115 li
887 1115 li
cp
.541176 .619608 .866667 rgb
f
1149.36 1091 mo
1120.14 1083.58 1080.14 1079 1036 1079 cv
991.864 1079 951.858 1083.58 922.64 1091 cv
874 1091 li
874 1121 li
874 1144.2 946.53 1163 1036 1163 cv
1125.47 1163 1198 1144.2 1198 1121 cv
1198 1091 li
1149.36 1091 li
cp
.137255 .396078 .607843 rgb
f
1198 1091 mo
1198 1114.2 1125.47 1133 1036 1133 cv
946.53 1133 874 1114.2 874 1091 cv
874 1067.8 946.53 1049 1036 1049 cv
1125.47 1049 1198 1067.8 1198 1091 cv
cp
.227451 .447059 .666667 rgb
f
1017.6 1683.37 mo
1017.6 1683.37 970.919 1679.89 970.919 1679.89 cv
970.911 1679.89 970.889 1679.89 970.879 1679.89 cv
923.783 1676.38 li
911.639 1675.48 901.047 1684.54 900.049 1696.66 cv
898.137 1729.61 947.571 1720.11 967.586 1724.09 cv
967.592 1724.09 967.607 1724.07 967.607 1724.07 cv
967.587 1724.11 1014.72 1727.6 1014.72 1727.6 cv
1020.82 1728.06 1026.53 1725.99 1030.83 1722.29 cv
1045.85 1710.26 1036.93 1684.17 1017.6 1683.37 cv
cp
.462745 .537255 .839216 rgb
f
1132.89 1674.92 mo
1132.89 1674.92 1087.76 1687.36 1087.76 1687.36 cv
1087.75 1687.36 1087.73 1687.37 1087.72 1687.37 cv
1042.19 1699.92 li
1030.45 1703.16 1023.53 1715.26 1026.68 1727.01 cv
1035.97 1758.68 1079.32 1733.09 1099.5 1730.1 cv
1099.51 1730.09 1099.52 1730.07 1099.52 1730.07 cv
1099.51 1730.12 1145.07 1717.53 1145.07 1717.53 cv
1150.97 1715.91 1155.65 1712.04 1158.45 1707.11 cv
1168.54 1690.72 1151.36 1669.15 1132.89 1674.92 cv
cp
f
1118.45 1626.49 mo
1102.78 1597.44 1065.69 1631.47 1046.57 1638.6 cv
1046.57 1638.6 1046.56 1638.63 1046.56 1638.62 cv
1046.56 1638.58 1004.61 1660.35 1004.61 1660.35 cv
999.178 1663.17 995.402 1667.92 993.688 1673.33 cv
987.223 1691.45 1008.51 1708.98 1025.38 1699.51 cv
1025.38 1699.51 1066.94 1677.96 1066.94 1677.96 cv
1066.94 1677.96 1066.96 1677.95 1066.97 1677.94 cv
1108.9 1656.21 li
1119.71 1650.6 1123.97 1637.33 1118.45 1626.49 cv
cp
f
989.656 1617.28 mo
989.65 1617.28 989.63 1617.29 989.631 1617.29 cv
989.661 1617.25 944.887 1602.13 944.884 1602.12 cv
939.089 1600.16 933.047 1600.74 927.964 1603.25 cv
910.419 1611.16 912.545 1638.65 931.068 1644.24 cv
975.409 1659.25 li
975.416 1659.25 975.438 1659.25 975.447 1659.26 cv
1020.18 1674.4 li
1031.72 1678.3 1044.23 1672.17 1048.22 1660.68 cv
1058.29 1629.25 1008.05 1626.12 989.656 1617.28 cv
cp
f
1107.09 1604.78 mo
1107.09 1604.78 1107.07 1604.79 1107.07 1604.78 cv
1107.1 1604.75 1065.57 1582.2 1065.57 1582.2 cv
1060.19 1579.28 1054.14 1578.81 1048.7 1580.42 cv
1030.06 1585.22 1027.47 1612.67 1044.76 1621.34 cv
1085.89 1643.7 li
1085.9 1643.7 1085.92 1643.71 1085.93 1643.71 cv
1127.42 1666.27 li
1138.12 1672.09 1151.5 1668.18 1157.39 1657.54 cv
1172.67 1628.29 1123.7 1616.63 1107.09 1604.78 cv
cp
f
1056.23 1549.08 mo
1056.23 1549.08 1012.16 1564.86 1012.16 1564.86 cv
1012.15 1564.86 1012.13 1564.87 1012.12 1564.88 cv
967.659 1580.8 li
956.194 1584.91 950.197 1597.49 954.211 1608.97 cv
965.847 1639.86 1007.16 1611.1 1027.06 1606.6 cv
1027.07 1606.6 1027.08 1606.57 1027.08 1606.57 cv
1027.08 1606.62 1071.56 1590.66 1071.56 1590.66 cv
1077.32 1588.6 1081.7 1584.39 1084.12 1579.27 cv
1092.96 1562.17 1074.21 1541.95 1056.23 1549.08 cv
cp
f
1133.36 1544.76 mo
1133.35 1544.76 1133.33 1544.76 1133.33 1544.76 cv
1133.37 1544.74 1100.45 1510.83 1100.45 1510.83 cv
1096.19 1506.44 1090.56 1504.19 1084.89 1504.1 cv
1065.67 1503.12 1055 1528.54 1068.92 1541.98 cv
1068.92 1541.98 1101.51 1575.59 1101.51 1575.59 cv
1101.51 1575.59 1101.53 1575.61 1101.54 1575.61 cv
1134.41 1609.52 li
1142.89 1618.26 1156.83 1618.52 1165.62 1610.12 cv
1188.94 1586.77 1145.68 1561.03 1133.36 1544.76 cv
cp
f
1111.06 1470.96 mo
1111.06 1470.96 1067.5 1488.11 1067.5 1488.11 cv
1067.5 1488.11 1067.48 1488.12 1067.47 1488.12 cv
1023.52 1505.42 li
1012.19 1509.88 1006.59 1522.64 1010.96 1534 cv
1023.55 1564.5 1063.95 1534.47 1083.7 1529.36 cv
1083.71 1529.36 1083.71 1529.33 1083.71 1529.33 cv
1083.71 1529.38 1127.68 1512.05 1127.68 1512.05 cv
1133.38 1509.81 1137.62 1505.47 1139.88 1500.27 cv
1148.18 1482.9 1128.82 1463.27 1111.06 1470.96 cv
cp
f
1039 1468.94 mo
1039 1468.94 994.154 1455.53 994.154 1455.53 cv
994.147 1455.52 994.125 1455.52 994.116 1455.52 cv
948.868 1441.99 li
937.201 1438.5 924.911 1445.08 921.337 1456.71 cv
912.403 1488.48 962.724 1489.8 981.42 1497.98 cv
981.426 1497.98 981.445 1497.96 981.445 1497.97 cv
981.416 1498 1026.7 1511.52 1026.71 1511.52 cv
1032.57 1513.27 1038.59 1512.48 1043.58 1509.79 cv
1060.83 1501.26 1057.72 1473.86 1039 1468.94 cv
cp
f
993.129 1496.7 mo
993.129 1496.7 954.82 1523.61 954.82 1523.61 cv
954.811 1523.61 954.795 1523.63 954.787 1523.63 cv
916.138 1550.77 li
906.173 1557.77 903.727 1571.5 910.641 1581.51 cv
930.048 1608.2 962.259 1569.51 980.258 1559.9 cv
980.262 1559.9 980.262 1559.87 980.263 1559.87 cv
980.275 1559.92 1018.94 1532.74 1018.94 1532.74 cv
1023.95 1529.22 1027.05 1524.01 1028.03 1518.42 cv
1032.02 1499.59 1008.58 1485.06 993.129 1496.7 cv
cp
f
1163.56 1476.19 mo
1163.56 1476.19 1132.5 1441.17 1132.5 1441.17 cv
1132.49 1441.16 1132.48 1441.15 1132.47 1441.14 cv
1101.13 1405.8 li
1093.05 1396.69 1079.14 1395.81 1069.98 1403.81 cv
1045.65 1426.11 1087.73 1453.75 1099.31 1470.55 cv
1099.32 1470.55 1099.34 1470.55 1099.34 1470.55 cv
1099.29 1470.56 1130.67 1505.91 1130.67 1505.91 cv
1134.73 1510.49 1140.26 1512.99 1145.92 1513.32 cv
1165.08 1515.16 1176.87 1490.23 1163.56 1476.19 cv
cp
f
1030.21 1375.31 mo
1018.7 1344.39 977.271 1372.97 957.348 1377.39 cv
957.343 1377.39 957.337 1377.42 957.336 1377.42 cv
957.337 1377.37 912.788 1393.15 912.785 1393.15 cv
907.016 1395.19 902.621 1399.37 900.178 1404.49 cv
891.272 1421.55 909.935 1441.85 927.949 1434.79 cv
927.949 1434.79 972.085 1419.19 972.085 1419.19 cv
972.093 1419.19 972.113 1419.18 972.123 1419.18 cv
1016.65 1403.43 li
1028.13 1399.37 1034.18 1386.81 1030.21 1375.31 cv
cp
f
1105.45 1369.67 mo
1119.26 1339.7 1069.77 1330.49 1052.59 1319.48 cv
1052.59 1319.48 1052.56 1319.49 1052.57 1319.49 cv
1052.6 1319.46 1009.99 1299.01 1009.99 1299 cv
1004.48 1296.35 998.41 1296.19 993.06 1298.06 cv
974.684 1303.78 973.455 1331.33 991.162 1339.13 cv
991.162 1339.13 1033.35 1359.41 1033.35 1359.41 cv
1033.36 1359.42 1033.38 1359.42 1033.39 1359.43 cv
1075.95 1379.89 li
1086.93 1385.17 1100.1 1380.6 1105.45 1369.67 cv
cp
f
1167.21 1381.94 mo
1142.37 1360.21 1119.53 1405.07 1104.1 1418.43 cv
1104.1 1418.43 1104.11 1418.46 1104.1 1418.46 cv
1104.08 1418.41 1072.4 1453.49 1072.4 1453.49 cv
1068.3 1458.03 1066.42 1463.8 1066.71 1469.46 cv
1066.99 1488.7 1093.06 1497.68 1105.55 1482.91 cv
1105.55 1482.91 1136.95 1448.19 1136.95 1448.18 cv
1136.96 1448.18 1136.97 1448.16 1136.98 1448.16 cv
1168.65 1413.13 li
1176.82 1404.09 1176.17 1390.17 1167.21 1381.94 cv
cp
f
1103.94 1436.23 mo
1097.11 1403.94 1051.92 1426.11 1031.57 1427.55 cv
1031.56 1427.55 1031.55 1427.57 1031.55 1427.57 cv
1031.56 1427.52 985.17 1436.56 985.166 1436.56 cv
979.16 1437.73 974.195 1441.22 971.025 1445.92 cv
959.702 1461.48 975.169 1484.31 994.027 1479.99 cv
994.027 1479.99 1039.98 1471.06 1039.98 1471.06 cv
1039.99 1471.06 1040.01 1471.05 1040.02 1471.05 cv
1086.38 1462.04 li
1098.33 1459.72 1106.17 1448.19 1103.94 1436.23 cv
cp
f
1049.63 1586.29 mo
1063.26 1556.24 1013.72 1547.33 996.469 1536.42 cv
996.462 1536.42 996.441 1536.43 996.442 1536.43 cv
996.477 1536.4 953.748 1516.2 953.745 1516.2 cv
948.215 1513.58 942.147 1513.46 936.808 1515.37 cv
918.467 1521.2 917.406 1548.75 935.159 1556.44 cv
935.159 1556.44 977.472 1576.47 977.472 1576.47 cv
977.478 1576.47 977.5 1576.48 977.508 1576.48 cv
1020.2 1596.69 li
1031.2 1601.9 1044.34 1597.25 1049.63 1586.29 cv
cp
f
1122.52 1345.79 mo
1099.04 1322.6 1073.54 1365.99 1057.33 1378.4 cv
1057.33 1378.41 1057.34 1378.43 1057.33 1378.43 cv
1057.31 1378.38 1023.58 1411.48 1023.57 1411.48 cv
1019.2 1415.76 1016.98 1421.41 1016.93 1427.08 cv
1016.05 1446.31 1041.53 1456.84 1054.89 1442.85 cv
1054.89 1442.85 1088.32 1410.08 1088.32 1410.08 cv
1088.33 1410.08 1088.35 1410.06 1088.35 1410.06 cv
1122.09 1377 li
1130.78 1368.48 1130.97 1354.54 1122.52 1345.79 cv
cp
f
640.309 1767.54 mo
650.833 1753.65 638.033 1690.14 638.479 1673.91 cv
686.274 1673.91 li
686.815 1690.1 674.813 1753.75 684.847 1767.51 cv
687.69 1772.48 637.453 1772.43 640.309 1767.54 cv
cp
.976471 .576471 .439216 rgb
f
874.307 1786.66 mo
790.649 1786.66 li
785.692 1786.66 781.808 1782.41 782.261 1777.47 cv
783.056 1768.82 784.918 1756.94 784.321 1751.44 cv
784.653 1746.37 777.358 1680.71 776.814 1673.91 cv
829.514 1673.91 li
821.01 1741.71 li
820.008 1749.7 824.78 1757.32 832.432 1759.84 cv
842.769 1763.25 854.542 1764.73 862.318 1766.74 cv
869.826 1768.63 876.577 1771.25 879.949 1777.02 cv
882.445 1781.29 879.254 1786.66 874.307 1786.66 cv
cp
f
779.469 1777.84 mo
779.48 1777.93 li
780.09 1782.91 784.323 1786.66 789.346 1786.66 cv
873.633 1786.66 li
878.467 1786.66 882.004 1781.97 880.53 1777.37 cv
876.088 1763.49 862.166 1754.89 822.695 1751.43 cv
822.694 1751.44 808.18 1755.76 784.32 1751.44 cv
784.32 1751.44 777.934 1765.27 779.469 1777.84 cv
cp
.223529 .356863 .588235 rgb
f
644.19 1786.66 mo
680.945 1786.66 li
686.094 1786.66 690.296 1782.4 690.06 1777.25 cv
688.473 1742.65 636.424 1742.37 635.072 1777.29 cv
634.874 1782.42 639.055 1786.66 644.19 1786.66 cv
cp
f
853.802 1774.72 mo
854.543 1774.72 855.245 1774.28 855.54 1773.55 cv
858.932 1765.18 865.048 1762.62 865.306 1762.52 cv
867.561 1761.65 866.165 1758.11 863.922 1759.03 cv
863.605 1759.16 856.089 1762.21 852.065 1772.14 cv
851.549 1773.34 852.506 1774.74 853.802 1774.72 cv
cp
.909804 .752941 .65098 rgb
f
839.233 1772.96 mo
840.033 1772.96 840.774 1772.44 841.023 1771.64 cv
844.005 1762.01 852.463 1757.47 852.548 1757.43 cv
854.711 1756.33 852.956 1752.95 850.815 1754.1 cv
850.412 1754.31 840.898 1759.36 837.441 1770.53 cv
837.053 1771.71 837.996 1772.98 839.233 1772.96 cv
cp
f
822.651 1770.92 mo
823.427 1770.92 824.153 1770.44 824.422 1769.66 cv
827.942 1759.55 836.007 1754.12 836.088 1754.07 cv
838.133 1752.76 836.031 1749.57 834.02 1750.94 cv
833.645 1751.19 824.811 1757.13 820.88 1768.43 cv
820.442 1769.62 821.391 1770.94 822.651 1770.92 cv
cp
f
649.059 1762.65 mo
663.367 1754.56 676.09 1765.16 678.149 1761.55 cv
679.83 1757.75 661.091 1752.06 648.111 1759.16 cv
646.465 1760.05 647.221 1762.72 649.059 1762.65 cv
cp
f
880.675 1777.84 mo
779.469 1777.84 li
779.48 1777.93 li
780.09 1782.91 784.323 1786.66 789.346 1786.66 cv
874.522 1786.66 li
879.018 1786.66 882.225 1782.23 880.729 1777.99 cv
880.711 1777.94 880.693 1777.89 880.675 1777.84 cv
cp
.282353 .403922 .666667 rgb
f
643.44 1786.66 mo
681.703 1786.66 li
686.452 1786.66 690.303 1782.73 690.104 1777.99 cv
690.102 1777.94 690.1 1777.89 690.097 1777.84 cv
635.046 1777.84 li
635.043 1777.9 635.04 1777.96 635.038 1778.02 cv
634.862 1782.75 638.705 1786.66 643.44 1786.66 cv
cp
f
768.653 922.802 mo
768.653 922.802 773.47 895.651 749.64 886.862 cv
734.589 898.171 li
768.653 922.802 li
cp
.54902 .258824 .145098 rgb
f
809.891 1125.62 mo
876.783 1176 981.456 1160.92 1020.17 1087.64 cv
1010.37 1067.27 li
898.145 1115.51 853.97 1021 762.917 1015.56 cv
781.258 1038.96 li
781.258 1038.96 808.316 1124.02 809.891 1125.62 cv
cp
1 1 1 rgb
f
632.705 1738.54 mo
632.705 1738.54 672.929 1748.31 693.651 1737.81 cv
704.437 1670.17 734.378 1481.84 744.806 1352.78 cv
745.205 1360.3 767.114 1663.8 771.284 1737.81 cv
785.592 1742.59 814.359 1748.37 830.459 1736.77 cv
837.69 1658.87 860.912 1402.37 825.932 1192.88 cv
825.932 1192.88 730.075 1203.54 655.217 1180.92 cv
634.611 1247.37 629.153 1658.79 632.705 1738.54 cv
cp
.807843 .290196 .74902 rgb
f
752.512 1013.78 mo
753.175 993.12 755.743 952.141 738.975 946.647 cv
726.932 942.466 712.676 952.725 716.381 966.297 cv
717.473 965.61 720.969 1004.31 718.556 1015.05 cv
686.775 1024.59 782.359 1055.94 752.512 1013.78 cv
cp
.976471 .576471 .439216 rgb
f
716.057 964.536 mo
716.14 965.124 716.244 965.721 716.381 966.297 cv
717.169 965.776 719.373 987.127 719.392 1002.62 cv
733.955 1009.25 749.809 1006.65 752.78 1006.04 cv
753.592 984.651 754.899 952.622 738.973 946.648 cv
727.606 941.786 714.056 952.147 716.057 964.536 cv
cp
.898039 .490196 .380392 rgb
f
693.174 950.263 mo
695.619 965.435 700.741 982.536 712.725 992.573 cv
712.744 992.573 li
730.213 1005.8 755.804 1004.39 773.572 989.808 cv
773.582 989.808 li
787.295 976.996 791.632 959.745 784.415 946.455 cv
779.693 938.621 770.999 931.728 768.653 922.8 cv
748.305 863.406 684.537 896.623 693.174 950.263 cv
cp
.976471 .576471 .439216 rgb
f
751.078 940.908 mo
752.466 938.271 748.293 936.15 746.982 938.827 cv
745.594 941.464 749.767 943.584 751.078 940.908 cv
cp
.756863 .384314 .337255 rgb
f
770.386 937.661 mo
771.774 935.025 767.601 932.905 766.291 935.581 cv
764.902 938.218 769.076 940.338 770.386 937.661 cv
cp
f
693.178 950.265 mo
695.624 965.438 700.746 982.539 712.73 992.575 cv
712.749 992.575 li
713.743 993.402 714.424 993.801 715.506 994.5 cv
706.385 985.447 701.463 966.402 701.463 966.402 cv
703.608 949.96 li
718.328 935.044 711.992 918.268 711.992 918.268 cv
736.61 925.175 744.904 909.983 744.904 909.983 cv
752.687 910.986 760.872 906.972 760.872 906.972 cv
732.868 866.457 684.51 909.553 693.178 950.265 cv
cp
.898039 .490196 .380392 rgb
f
700.727 910.724 mo
711.191 914.861 714.865 939.167 690.136 955.783 cv
690.136 955.783 678.156 915.74 700.727 910.724 cv
cp
.54902 .258824 .145098 rgb
f
1000.98 1071.13 mo
996.799 1091.7 1015 1096.49 1015 1096.49 cv
1018.47 1091.28 1020.17 1087.63 1020.17 1087.64 cv
1010.37 1067.27 li
1010.37 1067.27 1006.05 1068.73 1000.98 1071.13 cv
cp
.819608 .878431 .94902 rgb
f
763.084 957.636 mo
767.288 957.586 773.826 954.751 768.51 951.015 cv
764.174 948.666 760.982 939.671 760.951 939.58 cv
760.597 938.517 758.92 939.091 759.31 940.154 cv
759.448 940.55 762.756 949.874 767.681 952.543 cv
771.085 954.628 763.994 956.649 761.065 955.616 cv
760.604 955.469 760.118 955.722 759.971 956.178 cv
759.724 957.739 761.995 957.519 763.084 957.636 cv
cp
.756863 .384314 .337255 rgb
f
645.609 1274.85 mo
697.659 1296.49 827.303 1298.25 839.878 1282.93 cv
864.464 1222.23 819.093 1060.42 762.923 1015.56 cv
762.43 1015.43 756.09 1013.81 752.529 1013.8 cv
752.774 1014.8 759.064 1040.96 718.555 1015.05 cv
718.324 1015.33 708.672 1015.5 706.101 1017.27 cv
709.01 1059.59 626.688 1228.51 645.609 1274.85 cv
cp
.909804 .752941 .65098 rgb
f
812.548 1051.88 mo
837.707 1141.95 li
876.946 1163.57 944.01 1159.14 975.154 1134.8 cv
863.656 1177.99 854.558 1092.64 814.053 1051.88 cv
812.548 1051.88 li
cp
.819608 .878431 .94902 rgb
f
704.805 887.368 mo
713 877.647 727.92 872.894 731.337 863 cv
731.337 863 736.399 872.479 735.811 883.07 cv
739.781 878.622 743.421 873.752 746.271 868.527 cv
750.294 872.587 752.444 877.238 753.091 882.013 cv
765.862 879.232 777.059 884.354 777.059 884.354 cv
770.496 902.9 755.185 906.984 743.177 907.052 cv
733.213 916.589 717.3 920.915 701.911 911.47 cv
687.085 930.633 li
666.019 894.119 704.805 887.368 704.805 887.368 cv
cp
.54902 .258824 .145098 rgb
f
771.284 1737.81 mo
771.618 1731.3 744.806 1352.78 744.806 1352.78 cv
744.806 1352.78 757.469 1359.54 760.48 1399.73 cv
763.098 1434.68 778.717 1666.91 782.751 1726.95 cv
810.256 1733.1 831.706 1723.2 831.706 1723.2 cv
830.87 1732 830.459 1736.77 830.459 1736.77 cv
817.288 1746.26 795.645 1744.12 780.37 1740.41 cv
776.662 1739.55 773.779 1738.63 772.327 1738.15 cv
771.974 1738.03 771.621 1737.92 771.284 1737.81 cv
cp
.647059 .137255 .635294 rgb
f
632.705 1738.54 mo
632.705 1738.54 672.929 1748.31 693.651 1737.81 cv
693.651 1737.81 694.507 1732.57 696.003 1723.2 cv
696.003 1723.2 667.663 1730.86 632.211 1722.92 cv
632.054 1732.05 632.833 1737.78 632.705 1738.54 cv
cp
f
607.163 1546.96 mo
645.474 1557.79 678.212 1557.21 694.694 1555.82 cv
701.99 1555.22 706.096 1554.46 706.096 1554.46 cv
706.096 1554.46 718.965 1288.5 722.874 1232.29 cv
729.182 1174.29 733.796 1040.25 706.096 1017.27 cv
696 1019 li
628.718 1102.5 613.372 1506.07 607.163 1546.96 cv
cp
1 1 1 rgb
f
829.511 1556.57 mo
829.511 1556.57 833.18 1557.12 838.642 1557.32 cv
849.493 1557.73 867.442 1556.69 877.475 1546.96 cv
878.759 1525.5 896.173 1043.28 775.184 1016.68 cv
775.17 1016.67 li
771.233 1015.81 767.154 1015.43 762.921 1015.55 cv
841.915 1089.89 837.315 1494.12 829.511 1556.57 cv
cp
f
713.928 980.166 mo
713.928 980.172 755.992 1005.25 773.582 989.808 cv
789.1 976.183 791.582 959.774 784.415 946.455 cv
784.415 946.455 764.624 953.349 719.904 951.459 cv
719.904 951.459 723.03 971.626 713.928 980.166 cv
cp
f
719.905 952.328 mo
720.879 952.357 721.099 950.854 720.131 950.62 cv
701.615 945.614 li
695.597 947.546 720.11 951.786 719.905 952.328 cv
cp
.756863 .384314 .337255 rgb
f
713.927 981.036 mo
714.75 981.065 715.13 979.885 714.409 979.442 cv
713.884 979.605 696.341 966.217 696.213 968.394 cv
694.896 969.734 713.317 980.548 713.927 981.036 cv
cp
f
683.539 957.93 mo
687.271 975.174 708.326 970.722 704.759 953.444 cv
701.027 936.201 679.973 940.653 683.539 957.93 cv
cp
.976471 .576471 .439216 rgb
f
689.011 961.494 mo
689.583 961.501 690.019 960.918 689.842 960.371 cv
686.556 951.198 690.622 947.343 696.808 949.889 cv
702.893 947.813 681.357 942.202 688.181 960.879 cv
688.294 961.253 688.639 961.494 689.011 961.494 cv
cp
.756863 .384314 .337255 rgb
f
697.125 960.279 mo
699.76 959.907 694.761 951.834 688.087 951.289 cv
686.959 951.191 686.847 952.967 687.972 953.024 cv
694.69 953.718 695.534 960.056 697.125 960.279 cv
cp
f
704.414 1068.12 mo
708.759 1101.99 676.902 1156.61 726.75 1171.91 cv
689.205 1180.92 li
678.731 1140.32 li
704.414 1068.12 li
cp
.819608 .878431 .94902 rgb
f
829.511 1556.57 mo
829.511 1556.57 833.18 1557.12 838.642 1557.32 cv
846.036 1487.13 843.962 1397.06 842.296 1352.78 cv
840.56 1307.06 835.001 1212.6 819.648 1129.37 cv
804.281 1046.15 775.184 1016.68 775.184 1016.68 cv
775.17 1016.67 li
771.233 1015.81 767.154 1015.43 762.921 1015.55 cv
841.915 1089.89 837.315 1494.12 829.511 1556.57 cv
cp
f
638.682 1218.97 mo
638.033 1225.38 li
667.66 1240.01 722.88 1232.29 722.88 1232.29 cv
723.441 1223.74 723.992 1215.53 724.514 1207.63 cv
646.447 1184.72 li
643.943 1198.41 640.621 1204.77 638.682 1218.97 cv
cp
f
694.694 1555.82 mo
701.99 1555.22 706.096 1554.46 706.096 1554.46 cv
706.096 1554.46 718.965 1288.5 722.874 1232.29 cv
729.182 1174.29 733.801 1040.24 706.101 1017.27 cv
696 1019 li
705.318 1024.5 718.147 1065.03 717.794 1121.46 cv
717.314 1197.11 709.624 1288.93 705.785 1352.78 cv
702.498 1407.53 696.373 1523.81 694.694 1555.82 cv
cp
f
740.121 937.327 mo
740.388 937.327 740.644 937.174 740.763 936.915 cv
743.821 930.217 751.013 930.379 751.063 930.388 cv
751.437 930.381 751.78 930.095 751.794 929.707 cv
751.806 929.317 751.502 928.99 751.113 928.976 cv
751.026 928.97 742.922 928.788 739.478 936.328 cv
739.317 936.684 739.473 937.101 739.827 937.264 cv
739.922 937.307 740.023 937.327 740.121 937.327 cv
cp
.756863 .384314 .337255 rgb
f
769.051 929.216 mo
769.265 929.216 769.477 929.12 769.615 928.935 cv
769.849 928.624 769.788 928.184 769.478 927.95 cv
769.316 927.827 765.423 924.95 759.016 927.215 cv
758.649 927.346 758.457 927.749 758.586 928.117 cv
758.717 928.484 759.118 928.676 759.487 928.547 cv
765.141 926.55 768.489 928.972 768.628 929.076 cv
768.755 929.171 768.904 929.216 769.051 929.216 cv
cp
f
706.121 1017.27 mo
714.79 1025.41 767.649 1060.66 762.924 1015.56 cv
762.43 1015.43 756.09 1013.81 752.529 1013.8 cv
752.774 1014.8 756.865 1039.27 718.555 1015.05 cv
718.391 1014.95 708.628 1015.63 706.121 1017.27 cv
cp
.819608 .65098 .560784 rgb
f
1029.99 1033.95 mo
1034.32 1035.8 1025.82 1046.05 1025.7 1050.42 cv
1033.61 1047.88 1040.84 1043.03 1040.89 1043.05 cv
1048.25 1035.86 1055.21 1028.3 1061.83 1020.41 cv
1063.89 1017.83 1068.08 1020.87 1066.2 1023.64 cv
1060.75 1032.07 1054.9 1040.29 1048.67 1048.18 cv
1048.72 1048.25 1048.71 1048.23 1048.77 1048.3 cv
1057.4 1042.85 1065.76 1036.94 1073.62 1030.42 cv
1074.59 1029.61 1075.81 1029.12 1077.07 1029.14 cv
1088 1029.34 1055.44 1053.78 1052.84 1056 cv
1052.86 1056.03 1052.86 1056.03 1052.88 1056.06 cv
1061.8 1052.34 1070.3 1047.58 1078.22 1042.03 cv
1079.39 1041.21 1080.84 1040.81 1082.24 1041.08 cv
1091.92 1042.95 1057.93 1064.29 1054.55 1065.61 cv
1054.55 1065.66 1054.56 1065.7 1054.56 1065.74 cv
1061.93 1063.85 1069.08 1061.08 1076.04 1057.96 cv
1077.17 1057.45 1078.44 1057.3 1079.63 1057.63 cv
1089.42 1060.36 1057.66 1074.54 1054.4 1075.56 cv
1050.99 1077.62 1038.51 1086.21 1019.41 1089.14 cv
1013.45 1090.06 1005.1 1075.48 1007.89 1068.18 cv
1009.48 1064.04 1015.26 1054.75 1016.8 1052.5 cv
1018.67 1048.18 1024.52 1032.29 1029.99 1033.95 cv
cp
.976471 .576471 .439216 rgb
f
878.632 1052.52 mo
878.649 1052.54 1006.13 1156.48 1005.98 1156.57 cv
1005.98 1156.58 896.081 1291.19 896.081 1291.19 cv
852.545 1348.32 754.2 1319.92 749.542 1248.63 cv
747.423 1227.69 753.292 1205.94 767.656 1188.34 cv
767.669 1188.33 878.542 1052.36 878.632 1052.52 cv
cp
.921569 .337255 .282353 rgb
f
1105.73 905.3 mo
1140.5 934.127 1145.53 985.631 1116.94 1020.65 cv
1006.07 1156.46 li
1005.93 1156.6 878.579 1052.51 878.622 1052.41 cv
933.297 999.985 1009.58 829.394 1105.73 905.3 cv
cp
1 1 1 rgb
f
815.985 1161.22 mo
818.95 1164.88 806.643 1169.97 804.485 1173.78 cv
812.662 1175.23 821.321 1174.32 821.36 1174.36 cv
831.227 1171.46 840.919 1168.03 850.459 1164.16 cv
853.486 1162.84 855.766 1167.49 852.814 1169.06 cv
844.045 1173.96 835.032 1178.49 825.829 1182.54 cv
825.85 1182.63 825.845 1182.6 825.866 1182.69 cv
836.045 1181.91 846.2 1180.61 856.193 1178.52 cv
857.432 1178.26 858.737 1178.4 859.844 1179.01 cv
869.41 1184.3 829.199 1190.66 825.857 1191.4 cv
825.862 1191.44 825.861 1191.43 825.866 1191.48 cv
835.494 1192.36 845.229 1192.14 854.831 1190.93 cv
856.247 1190.76 857.707 1191.08 858.819 1191.98 cv
866.501 1198.16 826.483 1201.11 822.873 1200.7 cv
822.856 1200.74 822.839 1200.77 822.822 1200.81 cv
830.224 1202.59 837.836 1203.49 845.444 1203.99 cv
846.68 1204.07 847.876 1204.54 848.774 1205.39 cv
856.146 1212.37 821.444 1210.05 818.086 1209.42 cv
814.105 1209.65 801.952 1214.13 783.702 1207.77 cv
778.013 1205.79 775.475 1179.44 781.24 1178.12 cv
785.566 1177.12 793.23 1172.72 795.651 1171.45 cv
799.323 1168.5 811.923 1157.2 815.985 1161.22 cv
cp
.976471 .576471 .439216 rgb
f
771.167 1212.16 mo
775.269 1210.8 779.44 1209.34 783.699 1207.77 cv
784.397 1204.1 788.695 1186.79 781.24 1178.12 cv
603.109 1170.34 739.027 1109 696 1019 cv
568.253 1027.42 504.199 1287.09 771.167 1212.16 cv
cp
1 1 1 rgb
f
771.163 1212.16 mo
775.266 1210.8 779.438 1209.34 783.698 1207.77 cv
784.397 1204.1 788.697 1186.79 781.238 1178.12 cv
781.238 1178.12 776.359 1177.6 771.163 1177.6 cv
771.163 1177.6 779.949 1193.07 771.163 1212.16 cv
cp
.819608 .878431 .94902 rgb
f
2348.37 1705.49 mo
2156.01 1705.49 li
2156.01 1422.35 li
2156.01 1381.42 2189.19 1348.24 2230.12 1348.24 cv
2274.27 1348.24 li
2315.2 1348.24 2348.37 1381.42 2348.37 1422.35 cv
2348.37 1705.49 li
cp
.137255 .396078 .607843 rgb
f
2348.37 1705.49 mo
2348.37 1722.32 2305.31 1735.96 2252.19 1735.96 cv
2199.07 1735.96 2156.01 1722.32 2156.01 1705.49 cv
2156.01 1688.66 2199.07 1675.01 2252.19 1675.01 cv
2305.31 1675.01 2348.37 1688.66 2348.37 1705.49 cv
cp
f
2307.2 1355.95 mo
2197.19 1355.95 li
2197.19 1318.89 li
2307.2 1318.89 li
2307.2 1355.95 li
cp
f
2169.82 1517.92 mo
2169.82 1684.34 li
2169.82 1701.17 2206.7 1714.81 2252.19 1714.81 cv
2297.69 1714.81 2334.57 1701.17 2334.57 1684.34 cv
2334.57 1517.92 li
2169.82 1517.92 li
cp
.976471 .698039 .2 rgb
f
2334.57 1517.92 mo
2334.57 1534.75 2297.69 1548.4 2252.19 1548.4 cv
2206.7 1548.4 2169.82 1534.75 2169.82 1517.92 cv
2169.82 1501.09 2206.7 1487.45 2252.19 1487.45 cv
2297.69 1487.45 2334.57 1501.09 2334.57 1517.92 cv
cp
.952941 .572549 0 rgb
f
2233.3 1511.1 mo
2233.3 1524.51 2241.76 1535.38 2252.19 1535.38 cv
2262.62 1535.38 2271.08 1524.51 2271.08 1511.1 cv
2271.08 1346.55 li
2271.08 1343.32 2233.3 1343.32 2233.3 1346.55 cv
2233.3 1511.1 li
cp
.976471 .698039 .2 rgb
f
2176.48 1270.28 mo
2176.48 1337.42 li
2176.48 1345.95 2210.38 1352.87 2252.19 1352.87 cv
2294 1352.87 2327.9 1345.95 2327.9 1337.42 cv
2327.9 1270.28 li
2176.48 1270.28 li
cp
.227451 .447059 .666667 rgb
f
2327.9 1270.28 mo
2327.9 1278.82 2294 1285.73 2252.19 1285.73 cv
2210.38 1285.73 2176.48 1278.82 2176.48 1270.28 cv
2176.48 1261.75 2210.38 1254.83 2252.19 1254.83 cv
2294 1254.83 2327.9 1261.75 2327.9 1270.28 cv
cp
.137255 .396078 .607843 rgb
f
2276.48 1171 mo
2276.48 1157.59 2265.6 1146.72 2252.19 1146.72 cv
2238.78 1146.72 2227.91 1157.59 2227.91 1171 cv
2227.91 1270.28 li
2227.91 1270.28 li
2227.91 1270.28 li
2227.91 1273.5 2238.78 1276.11 2252.19 1276.11 cv
2265.6 1276.11 2276.48 1273.5 2276.48 1270.28 cv
2276.48 1270.28 li
2276.48 1270.28 li
2276.48 1171 li
cp
.380392 .478431 .788235 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (VSI644.eps)
%%CreationDate: 1/26/2022 2:11 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQD`BOX9dn!<5DoJ-JWP>M9")BGUb]7RUuJBXJ2If!Gci"+k!eeXYTn^g`Quqs2kZ0lt,(7RWE]LX\I"GuZ';nim"\DKa7j
%ptu&+c)VpnIeW3j+)YE`n"9'_%*nDCgb(GZ5POZ`hu2A\IJ0/.5J6m#_lG.L^3KMFbu_)U4aHnA&,TGS?bQHtkI^\b*l$M/lL>tW
%2ii1?4FR5,eK8uocQ>CI?ZOEa0CtsnB@!4,^3]b;nXEgpEYQM`]_Js#aAm6_r1!9Rka*qjo_$ZlDraXRhL+a0IW;]CUe#cYnLreN
%i4lD)Hs9O2^Q\Sd^TH&Ph\lGSr;2!A%(EeHA^SPIrUg!-Y91N)p?JJ:kiY#\`u"<ih;RV555t*J)h"@7EgHXpc-LRC`W*@Cp%ORG
%^oN@*K]h=\d%>]TJoQ2&n\=1mo7,`V@2F,ZTC^T7#<X6p$,u:0Q<sm/^n3aiOtZTnB\e/aqVqD8O5E'2?i'!A<L2f0rk88M>TeI5
%P?[EU/n_h7kk1sog3117GL\3seV1'fCU;3M&b5LkB2AR&oA+nEqY7\#YH?ig?bcF5g&EE?*''&?s6LQ:q=4:0f=ub0m#AA^Tr`%U
%r9DgV:S5fL0/pChrg;_Rp"B7m46)qS^])."2_o\d4oZ*7,9JV3nrH#LpkQn>HAWm2m307DroqUUHM-1kWmUl->h.L*/qn<lc'!6F
%5-CfJG!>f-CV>\@CiSW*?M3i5#k!NGN@._JhcDRfJ,T5s+.g1D\IW_U0>2SO#5BiX5Po=9hc68Bs2V=SC9.C2ps38QRc;S]V_?*B
%q!_tsX49m`=24SM%mRf+DZAu*HK>D0Gk4m@6`/3$=+@I3/jJiLEf2$S\$)L`d6G@.$_G&MN?:@Z8,Z_?o[WOTjd3`,rT_GlJ,/YB
%?Tif+`V"GYIfFNahk*)XoBNaUo67fRs8IMj%mSfsnSJ]ngK<7?1!+pal[RTe9I=S?#ods$ms"Vd<:(KN\M3"*/Fon*e113acb"N$
%m/*Egj5m)]?9d91Drk1%3<$Y<oqE'eF"K?G2S,RMKD2B`GrM-3npebF6N/T7r[n0#[*s@B?iK]iq5`uSI(eoq?Jm=O<Stt95Po/B
%`f;Fg:#:04l<!_+'Sb6*Qb2:%c_Q-\GhQBJq>-/5h`U_DIsC\a+7Ag7kDrt6IQ]@`R&9gXEj:Rm)Ju^\#%+Jo*F/@?(NH\(dJ'9[
%:@]T)hu)n+n%=/Jr;!Z`]RKeW^HHqL]6XA8&-'*8VcU'nJ,JX0Y^44WQ>nd;P0KW!&)_gBX&$YEfe))g'0^:3^3j5!mFsj)](k1^
%p";u8j1DLEI.l^%:1pc65OP+4,A(e8=e1k&jEoXnf;RS_AtCs\qAi</_j_b*4T5-MX5EmXKBi?S:LkY6H]D-m<T<g1gu6B@B>8qg
%;>ogIGl/rVZ4IhS<CYTMV1%4K/[DVF$f/-brou[Y?M/"[Of]]_fX_[e9mOY&T5j%,I/S^ClguG"(_J9`b+IuTnb%Ndrdl5((\*E#
%Ts(p"k:i0P4n>fH20D#DJ,8`J+$RMC)#E+BhrB.<h>\Tj]0>IcmJ!Lp^OPqSfafaCg$D_ic,M\5MpXEE5FYVZ=`6/9E47UR`Y&m'
%Eo;/"h8d-fp5cZ5EP:;QnG:D9-dSE6rMLao4FMufUupS&QS3(,^]o)_C:F65LGuDC?oh$bnZ?I%nuG8F\`Or=s"^B?s1>'s_7SY%
%mb9D50&,df6%7Pdn_$Q<d=-82[HaC!d^AA4T7&)8s7Ml%0>8MmSZYrfOdP'B'Dos+hemi=[(CUo533Ta++O#Ybkn%$^A.*=Q]GL0
%iV`upmDPufa'=pgK9:@:h`ZAV0+T0&^CMEB4!n9j/$?Lt]Ck#NEI+(gpA"Iq;Q-:ERrAYRk[]7c165VONr+'[\&g!8JZ5H:Y1$,!
%Vdm;dp`PJ^Q"Ab3P+*FMH(PWC=QC(5QVbUa./;7`0@t72bH]i'=2hkS1?NATV:OA]kk2ODeG[8iocV;[hDTYa(7Mm$9=T,.S)D69
%>&W#5h!it*K,hpTgMXX`iOaJ*O)i=BG4Ba&Q:"uOb<pUAqWF<f:#F-6i,RgtMrWO5iNIkSdKJ0Y8!ZNT=8<PUh<SYXDRKDQZ"),?
%0TVtK[lA9\l1+8ZNTUmu6lp&`A37rU;=/&gkW%X`I</YsNqK%CjuAkNa5rCE*oHS!IG;#nYMQm<+9"HZh!n_6mDF>_\`:BLrEHkn
%_[$3Qd4!CR=(UZ&91L#$=+X5^a9:odW;$8sh+IWD6DK:gLEgr#(G1h]$%ec5cnl7T:tltR'7CN^j(-Os2)S.DRrj`ZoM3!B?M"^a
%:D1oN76P%A?W6ti",RN1\(!]!-:A@rR]'+#WA_Trg6[HU,gf669?qXCC+&3mBIMD.<$0IbU8.F&W1H%J=38<GI0GTFW3m8G<`s.=
%7a8?l?-ln;%M'XXLJ`u31mr*bXZk2YDfj\mg2`##>O/hnm;>VX/R!'QNb]*65,\p%[[L5:7p$f%c6Jl"GrarGe>MbTe@-N?a*4&Y
%3neul\`:BK]C,DVjGrsupM];VB,[UDT,bNXD#ueqY-a#r;7&nQHNi-aQJ*UA2T_gjY_X?pXBT/G$uM/$T*uYCg-kRi=>?E$"SsD$
%>GI!cDE?l2>/g-V>,r(FU44)SFgHY1%F1HB@CA4/BUQ9*M.S!3Q"5'$BU$*V4,`73^8-8@ELb):kok75eP3'7Q6Y#o:QBO?Y]7oC
%>E3aE;=DqRVha'49agDgr4/+TIc@?rq2Ts(40CE_rVh%'JfUR``*3l9+RTXb0d`Pq3HE/URdI>&NahH:>!,YuSg8W^Lo,dcF%pLo
%OQ1M\Z.&idVUdd:]d5]h:idAXK;c=SDk1[G^$2WWGnk'EBW<;bP^$N/UZ<'`<M^!'X`TXlFV47B'Fgkl8+d<Jbq6=3ZjO/H/l^'r
%9qaHPk!*JSR+45^1$?pCYUZLZ@9*GGJ@o(K=)5"@$2R.T-29u#o8(9''8k99);`[.C6h*V=2[VFhi!Q#[e\tKaIArr*.9ic'#rh\
%(QOtHNjo%Nok8ifmr<=@3?CAohg#HVha?gVmrSMpmPm&GmHs:,L0']JPAfK`5MdFlip_+oW3\H:rc!3Da?]*tU_[rQ_SPVXpBMQT
%?'a4h'0,EnN6e7-QQ$g]Z<E16OCXmY)^huM+AVd@b`F<\-HZ2Uf1or-5mH>VX@Z.;^asO[aujc$,EK-^hoKp)10:NXs%09mRK$_>
%318/a):1;tjgr\..Q0d4lQ_8knC<A4EYP(KVo<[.'=it..&&Mj3MKV8^:5^9-p$IO`A?Ng]G=3D1S]iY_4O,r.>[r`Z\)m;\d;]s
%T!/AlrXNL+ZNiFT$UgVDZ:jbK@Zs)lMNWtIN:?^4n);&-`PdQ.:a6$2%b2?=Y/lAfhBqN[J4&t-k<[W=DL!4I*:+LPlqfFSKc.m'
%Rg0D2LCa0(R7CR(Bm%A=EVd^/LYNJk]CWqthJjOmHAL.!O$S4JGXUtE59T(M^5(M6hWOn*h!t+3ZUXbl;*Jc[cPknDh=7g@q5dFW
%CR!-`jjW&51eQL#h4pIk%j/=3s8;ZLa8b^;7!r!UpFYae<Pe#f*ir%QRI<\,%6hsBhW;a5:B(oLfcf@7gE@m:dAOP0bn'B28-"[^
%m&urC[J>=dnMmlM.kcBq0jPNde)p;Ohi2EOg`qT[$goL!?8pK+rbbu)OdE^EOTPFr0ZZdG(jQ5XcR&()j:Z^u'#[d&_7n&A62Y8p
%37kWE(ZZEr"\9Mo_d7f:E79mc@OB./-"G<[/b4@^,u;6\5C#H!+6L?"*r2r<h@@UFAIZGrWE#5br56.F6V,deJF%:-SaY[W5;!De
%:NA[AZJ;K@=f64sQ:pC*I#,G#X8rLbh)484>kj)5n9@r#CUiKkofgnXm0u;VCHl[jI=g_Be)fg;nrr<X+k<H'Wf94U$jI8j9b@)#
%MuaB>G;1NHq?B:#eO&,GHH!5lfIKRRiM]sRYXo6fFf*_0b0e#\Cr#HJK1NH[)[-U?,:%pBd,'B"[g_%[L0lc#7akfX&AGP/(^4mo
%^291sZ=ceQXhhD==HUVJ9M&ql377A]K-l2o[#54f>#\!8e;F%M!*BJNH6E!.CXAs4"L*elFhqr_1_+1W0Pa(YTMAJT!<&2+&,PI&
%a/pCQLZ@=qq1!l&RtFbt0s-I`/=XPOE6#CILipl](%o:IjhBN$kH9j4TA0#^`k/j%ghD+@35YBN4,/eWioqV14Hk3KnbJ46HfZ_b
%mMVs<Q@u#AF%9FuET'=8##k"N_rm0HIas$ILF"*6*0_b*5!i+;aDhuQdU:StL%+n!G^_f=!OI_t9*WTr!N0(nr':!oU]`"KaGU5!
%3h=.$L;5D5XT<?CW\(KQR5V[^5kYI[CQN:aRR`HS,fK%<_i9ls95kL7+j@<Z-#r#lAAu(<%:.l_,er).HCq[B^=,p0>mYrPY#N+]
%I8B;+p&r+=V!hSaaL`Z#mr!(/?)_<h.Q;pe[iaiuLYVE+kLi_hIE3GtERt",J),=EVGYD$dfN1o>@<9t`-qe>adeS5HBbsd6XZn9
%9[5E""+d;Db]j+\$7gt`$<X:LbVNAc5[`jDY`aT1$`mm3&n*)<8of`OHkB<b"I0rmV7RkH"],8r'F('QT#MOB3e`b%QrGE"ZiuW<
%5bs/G<Zog+6Fm:A<BErAUD7#ZG<?+g(7=;<=Qfna=W`<JmK_-Ehf51I*6B3s,ei+3W0[uTK-,9$bD4mCNo,6Jn^i0/'*rq<95;'j
%WbZLCfZJPURjM0]K"a6+0rL^bY!qAMnI:XT-SJZd-sC7:bHpK)b`sHpE-%b#%L-]-=`95"_GR0:JF,c-Fm>W/n9-L9qacP?Aq8YI
%+&F&UWKD')Frq.\^0YM#"21D#W1AZl;Wq?$Dp_Jo+#)Y51JKQDML*`R[rb%K.ldHqq)>=e.T6rNKZ577[:d(F1OXGi"<fg&Wn.Y3
%^SZ0Qr<<^4WTB"O3p8Uf'[qdi)@TC8WrG`thAWo,a2*dIEF.oJQAf2iBqc%o1U+!A\iS!UO\_"D5B=ehi<XWKrZ)5$p3i#!RIEaA
%I?3F`mR-DeO0d^+phRV(7ao0CL:2Y9I*K=u-Bkf5o3bZj0!ZOi35+r/^%aau&Mhs!FV7poRA:?8@%qWZ6m<%A$Cti[+;%-/WrnIk
%2:Sf='Q)?-Q0:]r1t=$#k/"q?(*17Ib&f8@Wc/rWk76!apnP!B3[T`t>*c?<\#E(lfTu$oR%.oR&&VgYSBWFK5/ZAS/:N=:<%PTY
%`]%$:*Nb6^g?,?'@oM5PgG#6>l,"#c*o[$Y3sP!H[iK)b>*k9.mh,>DTB#^L6gj`pF5D3_:(Ms:TCho+a7hUN-]#d`6dJ?/m94RI
%<QT3_>UuKLQOcZ(s%4uXaZhGt)F!d'X,pE*VpR,Zr0[X`iJqAJOcqA26.f8X"db)Ten##_`<DNUjLV]`D7S-TJTX$Lbq,JbFF:hP
%RbF!$Bu/<,o][BM;JB&NPrAkAk@IEKG:]/.c]n-MrqR(D7o.%%ZB4RqmCd#W&(9YP6nHdqm5:c-<2Q&Dg&D)_+78O9qJIj8;<o10
%\"i&E,o/BtmHlB?C:<hf$c'2OX#e^iL@qWM^l@$hY_g=#2JX-&Co(,MPG_]a*dssL*i!A*`smIc/Ddb/Q[D.21s+*.@QBQ(0.u,3
%Rf?s70@R"/+*ZaR(K\e&6(Zm%`#(^!g=]?LNfA$2GJ%I\T,[%`2U9SBSn=E8$l0DZE66L$Z%E3_DTj4B-J:5ujB.?rRUos*^!/6`
%k$H9;[7Q,PSYk&^$kj;q9X*hsHIWl^=#3LoX'nmHVZCpMB$rAieF6UqrM$IG;"df'IQXT7?^-Jcf/W`_+R9,h$jE^1#iAeSD@,4f
%8,1@P@1D)TI@5YuCPM0c)QpDS?!s$P1I0P/R_*!!mV"mGc[_L>fIDMef*n#i,^.?b(W&m<bjKKmOjC=:+k/"M=73IQV,3'Unff@7
%;g'0LC.RB@T[1e]IN-`_Pl)+PdE"3qCE14M1,_92=l(:^e/]a_Fek5nP%7Ht>+InM%NiI"h@[R6B+aL\1`DQk9Vh>,MSm&o;eVRg
%lU`?crq(*:e&Wla15RuEL'P'Y>OqDbi[e#X]8s8m.3h<fohF$:82VrE*9SB`g99.R$6-VV0Pc@&!OKl3R[@"1'FeDSj6]sUnkr.U
%)hO3PYQ71,Dj^3kQH3c[p\s7+\7;7<DXK'NHeY/c7@7%OElYbsZJK`bG9<;`d;p7F/&0[j/]^_2kT,Gq2J#&dH(=Zh@27fNL+^%T
%jli!k)edJ9(u:i"oC.=b0XP4EWWCa*eNg_M<XTfZ3++:.Mo@N*]i$F_iFLB:6-s.f<fART(H)2BaFhJP:kk?HYfO]/iWpG_!2u98
%rl[?]Bra4A,B><#N49&mO_7fo0d/8&)p9U;g\JU?*VoMks+fM%cfjD6N^XKe**BY-JXflGMdkLH`j1[FJMQ'(.,"9N>Tf,7TWgs'
%GnDt\/%Ht6J<C:>(?s[02e&I0M3\m-]SM[bYosf0SlgCn1<3%U1aUaC-_QRWRS:L7R=H?83>3WQU.m*<*obua>(N/GiHh`gFrWt(
%i+A:op)')[_ZQWgeoXTPO+h\KT26"+dX`/+!&N$R'Ei(0""1GXCSI_bPQMkHi"@AU^LOZ@R/t#bhEj[#m__0?:O)(D=2#l2S/N)A
%90oZq7<UO6X$PI%2<J]^i#$s<,mu$/i2gA5S03,k&:'5!d3!,&%*Wjeb+l[ZjP=Os>4]q-*SugQ:gs9)*5t%$164F7A5Z0#N7E_d
%PL:ufnN%WNYW>Os$_'E*-Id)T-JJ="k5hLnS6Go^qoSXbgf9_^Fm6,u.<doKe)+d9S.Y@_*cf<EfYQ\0*go$/a*4.u$/N,_\-!39
%L]_j+_Eu7*[:6dq=/t#4pMNQG)bOB'IY%N:YY0sth1MuGXP*&3Wa"*)>q4-pZEfiA<+S!JU"W3$*N?]l40X9FWGR'Zonn*i$#R_N
%biWO>>FI!V""3:g+`/Kt*=X_?QpIs@0^[dlr89^5GFe_[(b*7h"Dl9c@3u""(cE"XZN\P;9F#Ito-j0Y1R!D\>4CK&Bu,+3dt6U0
%.<liqM8Aj:Bu0+Fl^PU?623!*=RLE(_XR9/QoocdR#'HD4*\e+Il:`P;[<6_/2VSm&3OsOR:(IbnlrtX(IE@j"Q%]1SMdOi3bEYc
%ijt32Z3tSg4P:n(h>+0G^NJjDcMd$qm_+;dVPCmicIpnu"L($IE.DV]]7>Go+G,g;h/#4Jqt'gL;>ouoJeID0IK7>-a$lcmU[NF?
%/49Y?>\UgHlsUSjW('][2UKubHE*E''$W5uUt1*q]Lm/2QI]jXZ'BO'ikq4PI(`5]-#c\JU_oMi35C.K_1QNT#F0"XM<T]MdKYb+
%#eXST?Q3p.Q@cYHoi=^Y>,>SDOtTmnQfDrf:*'k-]I'AV0P"'$T?uW7?q5nj#M>s]A%1A\rHKmi'F"K_4"(HlK9I&O=q!clNsKZ"
%*]o`oKpjdb;Y;Yde9l\_:%U$5>AI^k3Mta55dKJb*,Z<">t/[3)g,U;F^6)4rQ!pU+^B]:7=5_ZVMh5Q?GS#pgT"jp5mC@8VFKG(
%=6*Y>^2"l<44*C4jC*UGcRF:pNTJ1Jm4GuaKbB4OP_/>S]^NA*2qgYOS89-BZMj\NrN=45REVqb4/s6Do*Nb\Irb%`F)k<>-YOLY
%mYMioN8UfOFl$3kZ8<r0]]C"IeA3II@8E?de]b5qao1harD12fj9ajNcIIeoSEm8X']m>T9UDgD<R-Ld"%.kZiU9l9cKE[AA+$')
%4*2P`&kK\!gW7.K%H/mEdp(B8Y*tR(`?$X4@t0BJII*bjQZGeDH.(/Vd]^Mc1Ylq+-q:f(boDK(3:E#*2qF#Dadmja`8bpNG?DDn
%Z9:u]gB<sWMO<,&>J##n^\2B@Nb%9cp8(suN*m;o$c/6YPO*+bcI.oBj?+8B$Bpr:Z2$A3'32\L9ra;a[8Mo05&nI)/h?f):<7B^
%,/o+K2mNR6E_N)j5_>[89:r_+!!94>/_M5K;7.uJ:;[N3TL^\_"?cVFKV&3,n*#bO;E;=l(Zn=oJ@PA^f7=ZY\>_\q=.a;D:F:A/
%W&`O3RuBBAl1'N>Ap)3n;<"JkGWT\0QAUc$m4g(J!0h9A3L3^YE9,/u56rkr-\M_;.g!T3X19Q^biBieZn.?DN^R`3"C;*f=:]rj
%!7'P`bmP<NAe!NHYRNmfLCXT&1BEte8'SG#J0l3p1X\/k)h\($g3T<kYt`b.8^t7#8OF3L;unAgkNU8:^Z?le+a5K,UY^9$K)]I#
%?od;.-TpL7*cKki?od;.q_Qi>_$6ZG/.d?;Umr0*qVm`X?)*[U(ldTV/B'WpniTrTn$G!5'@7Ush4sObrJndYfd880PbiZ7#tUj,
%i36`&*4PCMZ$[e<q\S"2+6H*K!-CQ#.hIq!kT!Hg73AY+HmWln,d)2]#h.TEF\$8.I\b(B7`\uGXSegLY/G''lPuB)\U6@o\Q4kf
%"IYh>bUMemBAOd:nW`YU-&=SCj2SM&n@R>"Lq`PXXq=eVGOSVf$-t[I=1N5p<O:Mt?\qCTlhC11]@_J'.nL!jDP0Y_%N]4,mU2>b
%c_<$Fq04!%q8ZZcjeB"]@-ap84KaX^f#EEmGq_8iLJ/_don:Da'1/TW\XZ_7h2:Fjdk,YW-X%M--,Ql=W1T%@1<$PQO7-JPk<p6s
%ed*:#b[KpViTJ'(G?dQX#4MK,3IeDtn-B3$GI&,JnFTH.r=SDc-i<?`+kLj1i]M#H1brLEM7LgT2LBF0VkDYZ.ONPT/E3m:"@oQP
%R^nhrq8;2n7:#><S-<X#H>I6fT-k"kRU`/`'2QZjG,-s`/;jT`C/bt"[B#iMEb_cS*'J's+^1[?,F`P1UDo1lc<UmFI1<W[l.U;S
%frt*C=mpBm=P0M`/<27@c5S!D)-^VFPVdSGBQHD9Z.Hg#[=cWWks.^@>jZ[<hVhk!F</[sg?D@.A!a*gmQn&qATNp1Bh2ZcD5h:d
%qAMKkb`i_T'/sOQSgK\^*K6N1;e<bi_18(adG.$CZ*aCC*a>[,,*cjU26>6_bBt@PH3BVT'"Z!oob[nt@[>k%`i0dg[q;A/(D]@q
%9lkGK&(+]#B'YT@W(TogDb,4&qK@/4D6.s>>3g^.`OrU#%Ahuba!N$pmY8iq2LYJP#t$MIpGoU5TD]YK2&R`eNHE5Rc-.,#4-'9N
%80tKN6'p+S?0h.+)2U'tO<qne(/=VCIc?%#jGll-IC/qXP3kPsS_!<`3t_,LceZt(3=J`H?6*E=c\/rBB7`Q>/_]Hn1@tdl3RXNp
%G:F0KAFqS1[I#[B=P<+B5g?W,K$k77Hc50[V+FI8`!YO+WF.u#eO]b9j=cXj&9KQNHJuq;9Z"=eSVoO(TPW#H"`A.BH`dr_+0OiP
%@<P0$rU8_]*@BCPQg(V);.j-&@k*;4aD*Q<ebdEgVbsUbl8!K?V5.9cH9I0WZPARJR_&nLDW/Jp!DkN>07f>ULfR3>Bh:TbUW@j=
%ot<khqcT?a;WKH21j>E<Zc([<kVqA;lagYM2>Rd0N_A_OM>W=BcP#nR@QmtGUEgeM-.k_^82hgDOEWgH:q\ACFW-ep"9J!8&p/Z!
%FA&iH:RIgh?ml-n+sDXH-@GGf3.]!3Q@>RUTOWOU+)`51mkGk7?25.o#E/j)';'A70N[Uh8&Qbo'@qg%5$[jA\f]Ne\aIX`D^JXC
%UIWr-HekU#?JWirFhc4nQ*o>LH?\2[D)L5&4hU4CFY?r`Ma]U]/4O!MHi#Ssc<[\^;GTE&0RJ6(mn;!1qgRAuI20"npV5/?N%qOX
%"a<D<f-=]e(-Ea3)%/2Hp7(TV*YHS_f[g(K\K:pWYe5c8pmr_DjI4MqkIk!mqnADsMsl%*e/8N\BJ!jrr":7md23Q+?Z>Gjo>6Q3
%lRs&.Q#u0@YG(D?\ab\9o/iO'pNK&P(WTifZ[<\W?(!n>gWQ]s"ug.h?b)L*So6+qF)a#1MchuiM%MD\2Og+.44Q<MqFpK<^gct:
%MZ^O-H!gX=-O-^9d#@$=eZ_?/f'mX,&*+T"1O_LDW6A;EA7rL1(n:<h(=QobRi2US(=c1OXXon85=e?-/:P9#YWnPlB+)@'%3K<P
%S\3YHDTgcdn$fsgnr=N]g.7C>@#uqEo<[*CXQ5iYg',3UmCTLXDYnn''=O17IRc-=j&m\fnt,/+h7fp3jh'\*3/RfC'-l&%iA>'c
%4=Q)WX-&(QPoqPJ((<m%.4ff6P$\,EpS5#P%ISM3.ca7;r)fe"0C%>=&!_Jt<UPI;DYD-*i*n'Y.]NU50#?^7kOFS'4]ff#1h0a+
%84C1o='4)Agol+Igg3<sMQ\"$kgnB*R&Cepmd0UErq<tu00e:+SCf9K=&-$L20-:)/j6E3?KZACm:)CIEM4^:gbd8\mZGUSJr%HI
%+Rr@[2sT1Z1QVm7\LEh:J,('W*=H/]ASrND5+JE7XcoD9.&nUFEGp^<7pVl(CD:n?fNKuYIY,PnplTj:*CH`,hF-sO/-SC;b=(HY
%&/`G%4dFbX"Ecl1mbWM@]Dlu@U[3)]h2Rr5%<B$E)e%.:?aDHoN,!q:kdoT3IkS22QNGSrU..DZc%*0[,`\RL_Y6.3`%]J3GLTlY
%L3b"gD&<hZ0'PJ>F0sYq"]HLHj9/8fZ/A)+T2k*F@d9<"_\Q1#^G2u7(%4(6A7WcK=A&S\6IsccP-9"*?&b&IM_=EbmOqu8lZg^J
%agnpnpaXbjFJ&(f&!f6c2O8\r0\\3hWrlG*<X$$AX"/;BOu@7)OuCqEC-TO8[itC-0l"f2a#dA5\*X7/h#l5OJCRLtFDHDCZ+q<R
%f\UKTE3S/)'2_crnuAX'S>[o\F1l/X6(BG5G&'5ZjaZDfX>_Y'[E_a8"])6o02XP@g$+@SGcSLLcWKIF/G201eB_Xao9f;8-9dKI
%[uH5o?S(k'n"*nC[B'-u@f,p?h)u,&UIfY(+T@[6[%aFfFHmqoU#m]=.GVFdjqMW:JkIGa)$LtC^cHfurU2'0n0)eC=nk:L>LD%!
%>^Du>pd(6raHOr5#X@PDOZf'U'+A[MU2tQnm>ML1FqafS#V:dlknj>=+dqi[n+N=dmTVE;^TGV+>>((XUAUANk??q2s)$$On*G8h
%ImO(;Lc!3k3SP:Y1<M7J[9pl6KGnhZ-LbC%0l)q2G9s70+?aE%=p0b:f2.P[)i_V1f?Dp.MP7uGU(VFI*'V25QC$9agG"AX2qa1;
%m)CW#G)(uEPok&d*O$W5Mu6.Q,_,H5I$3+VJ8#XZNR>$?5)`25SAH+r?`F+D'n[I#1YGT2:=9I=.;u^6qF()dX<c>UYorA(@LZR_
%]X$[aj-BKIDH8Zj1`3&o0_r)+/(dTT#Q@>>ZI*K8h'*^@So0W0=\8j]Y2MOb;X;;\6cSE!0tcV-q6o2I=Yn8\c[r1Oa\WAO/`F[.
%Tls4QXcW2b[aa^"De9<0Dg.Y<gD'hLR%"d3#Zr(jJD9KBe'+10Rl[0EjeG\f<L&VFpb5%5'gC:Z4fdiKbd+50d7U",Jg]7J^>Y?H
%2TEUF^ZMn1BNL5t\cI$4(b*G4+KnNYeiK5_(J`&J9[??&!/++1M7o$DN$:AlCmp*g)@:$I*&o-[#c&oIEA9)`8D)0]?K:'f!;;*4
%Pi6k+*#E,I8h@s1I7Ck(*fng0"2VgC\`64.E*05EY7OaaA.@:=jP^1fP%rFb@?/*l\K1G/mN[Fie(B)eFs'q2+8L,>jp(77GN4_E
%HlK`H8E7/r5O3C5M!B&j%r_>aG2%d.&G5FW^khX%+t[cOi"2P=!,DfoFHNX1M"Q(GC5LFM<VlKf*so#=9iX"mrDk*6<?h<2<=B)5
%<NG1i_P2ck\0o3ma0eb#J.gjb[Eg-)+j)(53T%gH>5qfls%VkT?+BG(,_kD>q>UOI<c[lIiZpQr-!EeW0(BS1S?`cIHbHY@A?FOC
%7jYs"`j=6T7+!2^K8I[D>,!hX$^!1U%K<'+rTLQ_BXP.V4r\mTE*1#ALP'%"ANS:#fn$;crF[h^N"W>!eRl,X\PWj7`GMpuhfup4
%N(Vl!m]7]i0k(e@3hcBK,<dh+'T>o16Esm1rguSH8+usD;K3VU32ltPip`//E5jG01kf.;_AT[^74jh1QV=rlj'1ij`I:N%\;FH@
%\`\#Z/p/T'XLU?n7CcZ_ZAF'jC6Wj($5p6'ZgUY\OUo?lN:gkJYPE/t'&u*DCsA$[O]]]7ak$Al*/Ps;X'Eo1`KAG2JDDmZGJjDY
%DM4.\<osnDGO=Sl_07StkQA!5*h.5KO*l_&(YbiLafp;N+I7.'UIm:acn?N@:H&QIFd(uMF+;R0n*aJJ;d7J_cUH(Wj;1U9j#>cb
%jNe,`T+b<j-a7tn@/6>.ni;9_ErsPJ"I@@?/>!$nT9C!RO,;1miq&Q4SA=]p&m.QmkT=0Fr9Es]QZ&J/r54k.Y+>L`D]V+;a7&i9
%W5&5pnXDI5?b`E:n#OIH;m[qp4SYZ=rZ/c.q2he[=<9P<Kr\0Xg83T.\r<Rn/H2XpQs'3]C]3RCJ&L5/l4:m']DLEVo]Q6$s8JW7
%rM)4!mT7#Mq&aMKh*YNA)t&8<Si,rKHNEZi"*adL&^NE5LWrQ]&8uLX'*%_#f<='OSiqAjm+';"YQ)!,\aIN7pG]9^4l:[-rC^qC
%8&t(i]m9;IdEU]!s%=:,d6Bd@rq+TVSj%GkZebY@/,gXghu*9Lr1i-1TO7\6"+#Q?X_FW0R%&57.U,2G'pbkrh`]Pk[ge^6]8EbW
%SWE:jMofSu'C-BL4V>lqP_m&:a`o+T@?o^8=$C1-pa[GuT&R_&h`]@;SMX2]'W2fG:8Y8Nfk$;eQ!uoE@W,=U:YPVDY%j#C\&Y<V
%HRH:ggL#e]Pi]i0-.=u4,[JN)"HeqL(/#H8]Ft)skbY"(Y!SG`n**I:8(`[l\4TMFh;_KJqg%q"SsHQJD>@HJ=&CNs*<[t6>mHX7
%$iF//oj-lbo'Gm<,0Wb.Co^XQlZi"J\oH>ZHq2%b;+<m5]7r+W)V9\D/Ga,5dT$Te_^%sB@Y"NV]sM4_.\_\@#d'?=KFP]iOG\q4
%C%BYHIP&&'5#i39CF@.=#kA2[3dD2`c/_"q:6RW"f9+INJ3B4,qaR&88CM)a#;Pr64F&U3&ppS8NMA=\$m=rD.,O.N+_`;Wh^<&D
%;,KV'VSCp1aZIWPUCBpP)T96=&&TDL\Ab8#V2)7EGU7`l'*TtN+Kst1[3Jj84,?'!+jWD0#L#f&,T5Sca]EFu<0G,21l6*e?,_,h
%oT[69V*t.[P3VE-WJ!)\oePT=RQt->*I"d^X4/S\cADHZf8'eb`k,M(;JGI<(9+TEnGt\.d<+r1f'5snZ<E/ubSr[Mb8Nc?pI4qP
%Jc$>K+OW&;4F(`8CjJRj^6>C5(UM=60B5>fH`1M_H&aYi/&jL@Xcg"QDBa-g^;rU%q@q"#5JB6O<u/k<1g<X/jT6J=Y!U1H0LpcY
%I9W"7Bidm@G0fta*SONU7)>O]GNt/Paoon4B=>EX-#Fl$0%7CiMoi;9G00[J3mr"PTE86gYT;o:9EkL&oe99c!7V3b@VI7dPTVGE
%gK:9@LIE2c`&'b-i^otDP/Z^[,cB?F&ImEqND$sB@^Sa>i)8f90i"mAkTK>je_0.mL&m%9(F?A%LaJ*1YND\SZO@4h6DT>KM:ah%
%$i*d09lD=naLK[Y5.FQu]<[(%WWTLuA44qk#'+0)La7krXkL%R\"kaTZUKG&4XAaI$G21e`q68dC;^g]2@Xn"rD4)mjAh]])1Wto
%[Lna2</KfA4f8O1Na<X89s5ZH7]aX9$k83H..IRWkX^r1F:ALE1aY&nr1c`1RAbrbD%U@Lll]E+Ul!7F0*@KQSg`J>p5tl$/p>\2
%o!$og>_5@EU!=s](AX5$MLEr`dk5I(MB]$/e8fQX09]%?3C#N%K@Fn?>Tp:"6gtFEamJR90fmYCPV0th6uRUB)j2NuiOH1\QG>i0
%9<3.PdO`(*\(YE/f[uDuPd>RCn;7]m3)N^1kgGFSLd&a+"bT$LB_Lt:&2t"[RG]j3X$.`eTd%UPgI&565pG2F7^[USZAs*;LW`)L
%4%?:`%BiVGNuGSS6L3UX"g-$]Qd0I\QR9ATZp<]d!:l)#F\mD_agb;>\_OI41MYqpOOt]XoL$W``?&3VdR=JrQ.!Wd<$=N3_p;3"
%"=4M8%OA'>73[A0bT&04)up^pdW<2bZ0:<@0b35[o5'%.2pp(?*-ma"+\YOi''W./%K(75j]U/T11JU'6*u&.q7!jP1*j.2AD)!t
%`+Hp/A/C`i,FPa@Q,J.X,*7!4(ccVoK+Sbb+c*+`Q?M:<+(-0JH$MrLpgt_lT`)g*&^T_d_<O&i'""n80i!t"0:5HhSE40J,Z'%\
%Rnb$U.1m55$mljh\N*Hj'-D+I`fu5nhFrkQ-t.mdANhuq`DuPABK=`B2I.J?L%lib%^`XGFAD7Vh@Z=>HjI<dECgs<FPV$*;o;?U
%\]P_UE_;^9(au\5b3C07Ubk>&2dg7W]9'u_/hB*(bn3gG$02QB4#1V6Y='ED>?u-%H\if^`YnOOhr;;UEUKULF]tM0?/gPnb4(r&
%2Gdd'bGm=^Y_\2FR:>>6c=%,LfX:9qU=E\%6sVo0MtlE2@AjkW)%c*:L?0808mmCkkXj=hQ1F[ROl\^>SN)S&>sbtM1#6A?/blE>
%`eh*[DNqk*$lH\)T^_(?Sb,S#JTbD''p>55\:0eri?a+t<lD;.<*J*`4F2:-FLfU98d]6CI"u=;6Q,Njeq8`$%V>muIFWIh7n@2"
%&p\R1)k$jo(4=n7k8+9#Khgqk3j^53k$9b^<0ll$+OKK?!&#K!9KDe`At"Zm2>0J<Mp=hB91O-P<sae`kVDI-=\ZjTP4@W_TY[R]
%1mY9!.@&#7djiqIW`*$>Th%SH1sQ[f8_VPAE/J0d:-)@IX!)1Z9/0cGFl>!q,=FkFI6P%&lAAUYb=^ojFKq8j`N)#oc"Q-p[!ATh
%G[g0*ROkdEF#d`VM'o,%1!@+MjWqr)7@VJGV0':1dV,27QHS86eKO<Vkt);f+QH*@U/EGFJM!&K_Jjdr:P)MboePhGbU2+;'NgZe
%`m6O.Hk<u,Qbh7IKo`BkRD[L$kk=D^#`u.7]mb,4IU(#N!nHgG1rV,YU.lg50qBGc0U!/OLF.X]EU.@qKjqG!ATUk/@S'>#FH$K[
%(jZ\Lic;:;@F<3GA]6D2]n6`KW6b:dD-CRm9F%.;j$M"C;O^:Qa5W@FGFfo:]\jekI:"U5nF*<ke=Z=H9Rf>ZT/HnIHtH>RUVJU>
%RgH0Up'kiqF0D2Prp*k2`>;lR,<'miqUt<*^OGeNfulVH^::_aIe)R?(Vb7gjtTUpKe/bR'H"cZ#*Lg7XG^3^"q4sX"rX*i=>K'S
%fM@e2/&ifuVt<XU9pb!+m6'p7`,X8"OeLE8jB%:/l,ZJ<!$)tk7tK[Re?tYJe@G'fW;[^d3S59+0uV$!e>6V-7QLbXG/TT<X;n6%
%+:_ksF)%^`"Uhk&Q#+5,dl6N@rp;)HgBLCc241ZHakRLD6Fn*R>4PH6%PtgQB/gMbTh,Wk@g.AB`E<"Y+bYK%!"/tD>b*sfRS"O.
%Ng1hVo8gjiQFl9>;8ab3:`LN\E>:8AE%;?@)&G"(TKK)TP;*IS8,OZcB1.90Rmg66Ud>@mm&#t\=*SP]ZQDrDn'E(a@OL?s]YR>7
%Ma5llR9l"/2p[Zo'EXdTH'M3pfso^A6`d":FPpe2XE/V&Bj-tGJXR$uJcgB[,lf+*oFEC*(F;O=cgY7c1T8(n,_26@WIQ(Hq=Lsp
%H2;h]^:3^O^i]c5W]N(Zoi$X=Xo*M3*,f:o>LI]&@!5,^'lc]C.ADre]WFt)KrnZRn9h*89<,26^r7O+mDZZPI'QLT'o(i7("AH9
%QGkZt-M,\_*=d]N"EY_>,kH&.3+Et`$Z#rLQ2qJ/02q7-*DL"V8uok;mJnD=XO1=qqG8Q7;^=,'Uh:JO7eB0G3+B.C,bP/\&L/]$
%!i-!O>\Bg!Z\(%uTMsbi-X#@`=Ss<S?V8mu0`ho;iMDGsT>Zu1Ws*B*5^gnZ&Ra%0fL"<QaWk_"XYAHh5T%Ibc>&\'H!*Cr!G+YQ
%qd`%>`<8+$hk+#["iprp1.gT,'ooEKO$AV(-XpD?DO1*%m6k,=%A7aWb`kO;c:EHuLdT_/%#a+hMca.Ij#[<I+>H68fXnFqb3P`K
%Td:kU+^p_[W(Z>g(phXd[(%;r)FuP.;X!0/M;)%4$ndq0%E#Gt%bH;qWZ[L^1R%)(2G)ifpCh*ATUd2`=:KETRpAuUf*uM<0djmL
%V,TQ)ZuN",TR`uG/FGoH+R.=B_qp!q-js/`cqoCbV0<!r'Nt*$F;mfh^4$`9L0.DW.+#;4`*cA+RFO&#@3?0/=p/FHTi^b2j"sn4
%Bt3^tI3mhCL>B#\D"!'rbQKp^hn@Bo'#cEX?hoi7%rbF4Lb$'KBJY29&.m<c`'Y&kUcI$TaY=_I-&/7`-g[03@uq2#0JgZ^'W452
%]T1+rm%^4iZ2?q?[M#->-6E*,_"!E7AH:^dS3U1ff#Ym(@jOuQoVs%-i?g>rhJDA*-VUP,G+&o/UI1PlREPY8iB><s`"n\G(\L1h
%(N1g)oQVbm!E$h+C**/B9#N(dYd-?lB3Yct*8T-("RrDJj<J%P@kg_4IYZf,mZKS+U*A.Boh_KuU/umZ2UrX*J]-=9>`WQ4c*n@+
%,/saKL[??1WJD89UMOULGq#XdS=H+)l^=HBi+N=H7FK(Vr%2A]e<Lm/m'#aV]:^rh<hLiG"1H0FBD746<VRF*Ein!Kj^=Ybe9T%-
%63@&eGat^9q)KjR-SnqcG.TG1?Ndm.o%Baei(%F_1>)2PP(4's7%@5GC8*!8pI&s#CWYX3FG=0U,;)mRD"V\#M`B-A^Lc1ME%9%N
%OnOC"<%d53k*r%_)0S/O?!/&=2eDe>L_t^]S]ZKUM.-p6cGQTr3Y!5SA(o@FBs_ks\;Hg]XKcc-mR>hn_hp(N8"konp8]Ifaq1&Y
%B"gm4V`>qbB\4p2Or5FHRI$W'>nBr[IQS<_LHq$H9AfPgisTBi7%$+0WUOAOjN23N9J7,*UkQg!9X#[X(l+L[:m&7G?E[d4<2ZbD
%=*V>Z)PgjW2oV4#Vd1^W8^Y<<CqLslaln>(&64"Q,Lk7d:-biHotp4e`%mGm\B>.C_F/qqbCr%,B`K]RWp39i'Wr[B=J5Z_GV_Te
%>&@BV@;(J-/FNU<8Y.0LG`7*QAISYp6o2AqFj;g4fP'b^Ca)-$-C=J4&I,5SS=kb4V,F:K]1%=UMHCQpj;?Ft.J.>\3[iX9G=h]d
%QP?]4'FJ7b*M'?mG]-TCN=psYJ8mD&n@TJ)80":Ok'Dnt"9oY2@5'KFI8WCs-n=,lgukM^!",*F?7Z<cU1$>Z9-b>j5bSJdf];Z?
%9U*j3JBJMIc^mr9Zreqce"fnW;PRRPO6&f"ERbVlW%kG%@]9N#01FF3Yn"VIX,KBelB?L"6l]=91ZSL;^lXJ2!*>`t"Vr3<28I5m
%>NDk0dp&&#'J>]VKF!O\=pW(1RFab%aOH>lm&Q(Tp)l$nR*3.FAFo+-J;F;#@PO74bNLX?EjB,6FTQf_2B#t`#":0t(:sso:8YWM
%P(mo[,NQs!Ku#[`#q*n?gObk(;1>oU`UFR!4$YcU`J>!(#f/Gei4@^I2[*r[LCl,0$.cCE^VPO^655)0M.f5d5N9j?"@Wm;e1.4t
%O_e`Il).r\A#+sE6RmX(]Q+csh"$gBQ&8rhqC5uHPrG&7Q58N:Th^Bj?@!ArDi2r]^c%'CGUqi#C%-Ip;]%BNpNY3>@%<'O&RX<Y
%YWD]Y2BZ@24W#li+;=FeE#%F4S51>#!'DX!PNcd]Gj,\D@RVq>9%7*uNkm>WN/59NgQ0qSfWCDe92eC/f:n(`667t!1b&q^gKF[o
%6I=c>R*[5Mg,24:p]7,@VZ=NEn;`#!X7,Kf+i3Wp5WR%T9_fLB]G@7p;A4kq-UT=-^5A=@-))0n;sVW'2FGWC.q&lQ"&]2::"E;^
%("Fp*(k\^D#l*^Ai"!pA@ka8<dHFb0$!nHa_"LZJ;W=uHSj<[[d<q"]DuK=QqDK2T"7EUOOch[jR_U7C6EKn,@XFskEACR61;>6)
%PS'td8=r1]<Eet4Y\=a"2#nj3]**FbPAXe'aIlI1<bs"K&]5s#L`+&>Z934$L#:tUZmM03deF\YJA4\<NT<nI^Jg(JZjtP@_3A\n
%'f1FCX0j:u16E-ld7^`$0uSWs+c?;_)(NUgO5Ppu@((_42Fpj3&6?]0$302p]YQq0O'=KhA#9iL=V(],.N%WjM\]M4*-RP.HWDj-
%HX*Cii*?X)+@.6g&q`Ii4]A/<+\AH!VV,S3ajNooIO3d(0$Ob#R&OI1h:O:t!f#Uo41JPLFT>jNY!k+0oK5h`U=!n*&EhFJLK(?K
%q&jYn(skRLMTV3-Aq1Ag.NF9/JA@hQ_[)OO*$#k*Kgp\Ge6M6e)U9:M3q!%Z_6X8r97m_Z0*GJm7L^!KctQ-Z$QR)'/CgP(,UZu:
%<55rM@$O7SY/BZr.asRK7?@Udh\e`]#pX=m<"^3QUr>/rB#Lnj.UEO?#*V^s)qYEM5pDc5411R:bbg7#4N*oJn9k"1Xp#lU0!rcI
%[^75&Y29ZZbqVI,RQl#'1*YH]h]hG58V^ob/,`)u9$8]InX7U7&M8\[^uu3%GLDu!!\A<?/[rYC?J$h$_TYRSQS%/+7PSf2lL_NQ
%49R#7Y*no!E=k]V'n0IsX=E3]2*!"M&Rg7C_(nK7N#90`-[OVX'1;BaQn):+CQ\n_b_HD89>Jn+ShDI7@FQ8eUpK"X1Fcu[OXWKO
%(G8V9$l#,%iq^AfKY*(kJ=)mI[!FX*4,J9'Cu]?lNY+*]'oZF:NeC*I1sAi7%qn!L9u.33#aK/-#rJ4]1kn^JM<7p%\;\LB:bcG?
%=L9mjMlrqZ!DGsm+'G_,-NhU*q\:I[S:MmchiE%9%,Ah?Ki'X7(q#ip'r(ZJ7"q!^)nmHgW8Y)`[h55N1a)ricpRIm8r\dC>*3/j
%;Ci@qU:%0oX@.ZOW.?*lNUam$+g_AVg?#>34n0g'L/\o$JWpIn8_2Ke_ur@l7OBXUZ*)ql*2kLF9hfp`fWd?8V[>uJCZDIGL^uTW
%h^>:UADtPhS"_o'M&?CiD*ZKu1;;[,Et#o8SGjm"U&\VV-!4OYi'TBi%hsVm%1k';'Gap+Sd]Olep7F=co@r"a75^'QTH.R'oND_
%hB<)ST,$t=0Ofp;*mseL/IMDdk`Jo-a,**:S1<G`l?m'WL?B$QJnGW/G`('RJ7%inNqF$k$]l<+lB%1o#C]'b.,uO5NQt4Y8[UkQ
%C),^n3BMa?1-]D$;P+7Z,$1eF%Mn62:dU6F$D!J5/mX!WBRZ$70d,Z'4!e!b5U.P3D.7Y7X<=U8,IE97`%c.g`+B-%1U7'[8/rm[
%Df"qWXd4QN4YV_K=BR.(Og-&:68YOU"blb\_oUasi:X2m'g4=4Yb:%";OKuY113.L3pS8Ko.on[i'M]3'&K[\%TjEkT1aZ1<#+3o
%OA=Yu\OTC.B^i1s>9Vs?4'-lCG<q`C^7\uXnsYMi5n-bf&FY:1h&"R9N*YX6j@0hcBu'72a4;.=@2Pnm?dkJjFlTBFj#jpg8gs0@
%3hM>l(On4^&SUDrH%MoS&#EFLp'jG48opaqNPA2G:e$NjBK@FVo88fi;,kZ!&5e%TcYR&fPNm&gNat0dTVkg_?n=r.)UP,hoU8o`
%^mPms%S.Fu:<eTj1.A#f8tM0TM0qQ6UP(hU7-&B!c$%2K>#G8r&UqWn!!a[_<8X7,9'5(aVJi=Z)Di<>2R7Nq:K0+gCErma#2S6k
%mO-^WU]cNL=<.C42(E?O.KSW,BtU!H%YZG@%+GgiV!WnJ!olDlW[JY>S1$Qd77DTSA7F1W;?=*('I72uQr3H9)<DAr=WnR,-E)I.
%d0.P%F-\>o'VK@KoVQoNa9@+q_Ud23%iGS24ma7),Zg]p8-%(OC1B$\LDVb$%0?\;K4JTM@OYil8bsur!d!;=`+c01aN16"E*fdr
%p^'AI\G.`e)10@C6"$`sIO/bK+L/O'?BE4Z1H_"H[=O@Y3!bs^L@SSp,hupVclC%-9P-UF(3j;*1.:[&RLG(4$7&;n1PWI69Le<F
%6`WM)9YX!B/*Wl[6,:;GfTGJ?ed*O)9!?C\3(k:0/.86/U]]j(,74nA"Gp_#7\kUN=K#^ra09`Vd#:e^YgLDD`"PrUi((42TPbSI
%F;.'i8e/HIQ@Mo';J/1bW[E*E0Za<c3?^))b6Zh^]@>tob!Y5Q,8+)-O@?=$L63%sN*R(:1:#bMgHe&[VVN[>>Vt2*>fF.1<!A*i
%d79c/]h4YDa_<]Oq4q;W0QJ3m[X+E7`UX1`m\Zr$U1Rl1NsNrd.*PUt_sI[KNi3.cK:W0DoOQp6j,0?i#W`.kZ3'Xg9sS)5&VLNq
%i5$W?e&,Or*@(R5m=,r%;:+;TQ1mb0TY32%KtJH8_AAt!olJ+CFpOCL>@u-T/gpgPEn$\YjZ)E=!`#"_1:4O>ePT%hjJ('Vnh?<Y
%2J">VP@8`NX!@'PjaSt`;Q";r\Ir9nf#[sc3ful_[$iBY/^kB6TFH<Bnid$$:Z&*h_iI">DVM0L`$Pi\>T(JYe&]\%1lBu)LMDkH
%FX;#VMZHAQ"uW!Pej;*E&B^<):I*>^@^]+-BRH>k8hJ]V>euM#;X04),'P&&AAFXjBGj1=9U5i+*Z3Ms\sst1c;i`VjecbY!V$@\
%gfRP6HNtmrPt$P11/B`.%?f%1W<Ehn9`]c,,ZpEF3L.XG'MU]BjodH/0IlT$l7>>&);Kb\"b`)=1?o4^oZ5es1=i4t04ZqI+d%&+
%>Y?#;Pa#16VQ;/9;NIgkiW(fbU)R5:hO6Q1WMEhb'THR^b=J@@:m?nZ"+GhiVI&2Yk%PFP"AcBrK;FX<,<!EY6XoLCj7QO+"u0dZ
%pbLD6^p&E&C*\71L*<"@YDpIMGT6`!H?nRTZ@b".CD7=("XkQH!dH_V)LP@5'G+)R7LFN`8nMNIZ[NqO,naUDb\1ufcN=mjF,K-:
%)-!m%R&666?R;E5+G&cF$$8BW-s3@"3D+I/d<KIu(@6Q>'K\d(1*ciYldEfS8\WHoVoma;pa=Y!RXi1?e>u0N/!(OiO!ti/LH:2S
%K1,T,Q3H%F!p1[lYgco$lUc/_cuX/6O<.DZ$9Tdb[F*q@2!2l<$lieQe+H"O)<O/X6*.s3*#oXULXR&=$HG70Tk.9;R#m$$Ye^(m
%Pm5l`A\.gM*s6F8>KX$'9MoFRL'V$Xa"*9I4^ocM'D;hC5\_':/^3<r>$<8J'V:)XK^!2oAL5,$Bk<)N))<+fjV1mVB*GH"4eb\h
%Z2c)tI[H*b$!O:#NiJ/1)`T/rl\V^=6[DgbWK1]]>nGbkYV.G.VQctL>:@e$.hhL=!<hF#b_(P$WTg*Y8Y]Q0=<f1#9oVKp9*Im;
%&b$Rq5'H):oVMF]UlsYSUK.^>TD/E+Bp`0>K/QW&@n[l<NP$Nm92MnUY\-lo^f6[?Q-;FCK[$Q!ZF[/O/eO4D9H)7i0H#\Cc;n>'
%1*)=sM?2&6"P9a=M6'cfAfICXU_g-7:gCO+^!01-O_<5711KaZ>Yj3M<'R[^L^qa9H(^VI7UuK/l4?NC#hC.(NfeCq08lWg.lUDu
%iP@gH6c^NR:2rTF5c(G^T^J4UaV;HE"'8f%T3='/8lumu$A]JiV%(YKq(LqaSX/7>kgW&9Ec`Iq%PC!DV<K[$b3ZR*/8#CJ+l"-9
%-PBu`?->MVBsgae*Am@:FCp(/<PZBt6gn23pX;sS89*KT^cmTp>*ec)Ol1#[@)0t$cZuq``M>Lr&S_S7`G.;AX?/7dcuaSIo&qVB
%fIjO1*Je"CQ?EcYRL`(gPmF;1:QuQhA(d[qb)hWEFeG<0foHm4%4*Z#*kq^7!Z.IZ[mq&\OpoilaL52M"6IeWM!AkH`kf8>q?8A`
%hM(b75E->MPOTBV@[\1ki90ibfaRbonJ&XT9\mdU3=qn9U5!:udtaSNkm(T@U@+,I^45.o*eiqp,Hh.DM(HB#`%@Aci=l]]X:2-3
%!$'p=,kB4lE);;r+2HJN,c=ANTNJ]8.k*pmD/5S9^^`>j;&j(?DY:n`EipiZ9XC`"/ZXHML0,9-KBo;S;'qVap06"11o?M2hCSe=
%UJ=.7T:*s\.<[bWA0rfsW)@8o/;kaIO'2ZZcknIf4Qjh:aQ_cDlX5@*fI:#F3%]_j4JupYpn$5\.5;BWChIKf;3+:*Pks+t#?S.b
%naZ3Lh9Z:-lY"VZA8&dN"UU.-&\9HD2Jn$abZ"dA'[XLX>-1U&!h0?=An4+KJWkrU6r]hD\uhuholsRAj\ej7"XKssD]"S)n)L_8
%.I.%8/J8FCb;dS+b/;a7RJK23&G=D8(I`p33?Gm9JO89!bf3%iN[$kf!!ikrE2?fOAbV'$,?L;o!=3\n9#S1]S(&XP8bE;+l=1rK
%N4oWmP_3$%<E#g"`\8(N19.@>MPARf*<aWT`Yt,0N!3IrBPo[*&A,:MrR#cB:98'\Tk"r^*o;kGJ\X=hBi"E#;.PLIC81rg.3U4m
%_4Im.bK<7>;hd;(`>1T67e<:WJ0>.3#d0Z_2C^%fTWmd<JQaHCVDW^[2?,LpITA9.\h=Hr2d6T^B9PpNCI8a*13C**JHWJ9S4l1(
%19L._'n;3WA;LMu:UAjr_WHR?,HIOri.+dC@(q3P;#7Dja-%#rbRe]j=cB"eK\jZ<N(JWm,$Y?i"8G\("5pSQYVK+8![2&#'F--L
%/l&GdAjWbt;M1PMRQ&\?Z=dUP!_.].c!!ecd<CN&,W^p\;8c?TnFXu:eaXci**%rZn7><](c)9JNA/"WIl$o0CKqGa9r1>Drt:L4
%F:G>>-jl"XkS5)\5b_glT-4:)_EfXQEAF!>5<T=LjE0,'MWi(sUJ98^a&GRm(V54N1Zl@!X<Rj"ZH`e3rhcGRg'5P-9No$?S1Fqa
%,(U8rCsgpq:fEnCE$,Q`c!GYj)Sq.c7/J%m%#5`9??fh3o;?f9l1g4kiDN'?K/tbYle.hYl)/IL[t.3@J%%LXG(GS9QTmV/e`19q
%+73E`s//Ajrfu84^Nf_Ba7&DmQS80Ze*inmIe33D8+MbjVt]!`5MQ/)TCL58"A\DgEJOC4.[j>e_geB.8=qUm?%f'A%;Lg[n?.-=
%[3=>R<f-nqnC!<ESIpU`$p;ba\e@f^]-)A9d?N?B^r.)uKj7JSL9aCS[0n&<%-fR0AjJ(-.W:H=AKFBZA+iHi7b(<D]I*OO-Tqb^
%'[%q3UZ.(HUI5k@DJ]-"8$c6Q?U5_?e9s6@qJ4e,_cA$X6Hjc`asnE7V=NFr_iWoY2\N7?SVG5QGo`D6/C2r6`bQ_@f6PWg$Xh6C
%8X&T8gQ6jk6&Xd7VWFS;-?Z_a3"OIA+OW4&^2QS2#N2:0)UQ8nM.c3Z<&Yap)6$apJK$kDZHIosDBe^#0cm.&OO8VrN1()c_P*>;
%-5k=2oPS)X$b^=H1_2$=geW\5fNUHo[Kps6:1DFoXX>`OgebZ/lsJhXL(T'3-J.aHKnCLVJ=_-;?p0'/_c\0d![7aS!PgC#KeQ0$
%]'Mf$UjR\uL%.iIgkGi8!US5O$j];[L-eBgP_h-JX,l6ARPE>sSlh_rR2$/tIMUE"BG7Xq",T+<O3got20qVZ%?,`]`'QdK'13SC
%bu#"te<U;E>O=7&[5?&Y-eQsP*b#n<IRT8tRh'iI?8jPg#(BDY_@UWn(6?p*cdkS!1&rbL$co\_fTYWI6duNiOZIj,\:)uA(;7(#
%/'Iu&(Y3NA4b/Y,Q/uiC`$a^_-b>q:d_?3li*b=H:kgiSd@s9NG(_@X!Fm%?=!Lq-4<VId8#1_#\B%goUF)QYLoc[D9jL_A%r'!j
%La9Hl6oD@Dm3qC+2o+3,^)d$9WhgE'eke08LI<da.;[4:FWr#5*4*9qWpgcq,`RUc$/^\5$"d90?HpQM!oK`4'ZQl[?1t*>9'"3q
%KFaiC1p/5h:9UNBj^)G1MO23+"$\0@&]=E`#ROY60!:t`Q=Lb6CMR#[#"aAOO"R7&'nQ2bN,u@l)]j;.+,rbcUEX1*>1/9<'\sr3
%!"PiYrTc02b7&':pdpbuYLUpkL8nGSM'oNL.l,^Ahfc!N"P8kT1g*30J5]EF[4IdW0-m!V>qHB5/qp#MWn5pE4_a8IWLBb!d"0lV
%1(QVl&023&5(V*LjtY.,\42;hG[?qRlfk8MC(O>*-j<+?-8SU'6de7M!=9>Gm4QuG,ZU]F[HV5r$5aE&RM1JXdo_H%"22o+M^3X)
%hEH+Co]?n@fJR`Y%n=BkA-[mu6Zjro(D>s]Xjk`"G2V7YUQZIRVOY"H6<5IngiJigi57l\*<OPM%"VL"1#G6_`c=oZ[%Zq4o7B83
%=-Rr#\MXZ6G>2E3?ElJaPGfAF"P'5A!0k:,6#>*0YU$BaA:[-s69peg">f?H$kf;Yr02eSO=BrqSq[8=l9d3t?OpqD3oo[\(n`sm
%cQ\Psi[`BpNJ/'DlWTC0?IGpELmi,a5S]]Wo0t,K_T27nU@aqO_!,EX.o@4MR<6(:g41-XXeT5N;eZN/bXTBAU6M$H<0f25hPA8F
%"e5sb?CH5BVg34b+JTcc94SC:$skJ_WD:#`<.O-PQUD6Tj?:B%7$\P:2OKYZk^NjT,1F$$L4L-k1Q8C\Q`eS%(MTDeO]TR9Aj?)O
%O>B>g(.>$mB'l&V$o](O"ULV8\V-$mL.`>f@T>f]Rk@KEC*SaAW`h95oO'rb;ZWi!T8,6f?in\1R&CSCg*KK$n#ICQ!,@B]W"9pW
%aNe9L$m,S/1=0L,XG)Tk=33i5.,J(m-iiX"dCA5L%NGPL:/\=7dW1"Q&a09()ae-M:r@jg#_Z&p<W7kO(2j6m6.]7QZ3YLneUN"W
%q,iY<G_E*KZKXV(:f5rs.Ea*)-WsfQoD4nF%SfK&RK;_ZYpf,7OBIB;$sQK4]!iD&-`FV<5?NJ`UOEN.:9k@l!#EbkT,mA<T&,%]
%#KASs8`KV<&^L;(-:g+@8C=^38M;?l*d:sH6T=Q.]8gQBV$*Qp2k>0"=R&l:<Qbq8;XAqUTHK"7\LAD]fdTK97aNG-Jq968bIXjT
%d2V4T(FHj,.j\>1/g<K]CC$2K&5ifGX"`;4CA(V9fpF-n7!^>]6K2tjUnY^P1<"CK4gN`QE$`OXCl\k-<]6"o4cm`DO\cZ'85(qC
%E=T,l5R7QLOjSoq68oZLk"-tON9W=g6"CXbG)"E.Q(fH&?LV9@6*:&SD*V@&iSmE[n+Kn*epqZmdhcCEP-W@3p6o8o:&.-V'&sum
%'U+-)S2SnIim!d1)NOubljZeU=P.'Pd**t/Fio6jn<D#7+C@T!+m*7N0`uNh1cLXM,4L-!902>@J12()%]UntS6&gIVk`h,1Og2j
%o"gT1%"5tYJfTV\rF/mJ*aj=(R_DCi*'#TL5bcmb0=+ehK9j[\b]!h!5O<>[:p&'e+q'XV/#LqgmTD%g).M#1@/7s,n3p8=\IuT-
%JNY(T!R`FZ/"D(HVf0^BBD(#7AM6=M3mUdBWa'kmV<!S<%;pQe@E_Oalr,n%i-gD4MssoT64ul=N6#Y*"_hP>1h<XGI^2K`32f9d
%jNfeXaTI@pHIVKijPVe^;N.(S1H^3F-T"O.V'@`KA0)6p'1)Re$#4Zma,88YYmW_r$TshV!IfVO]!.(2$750I1"SH49+F[hWs[H%
%Ae"F^:$PDS9\a?C0qD@4rO?I,JSSnOelfP)T\W7>9A)E^XH)+=@-aIbJXCRKXG%\_Wn8E5q24qLA+;)cN`H3iQNfo38C,<"H?m%<
%iNK".>or;?^IG:%)b;.jLU+Qt4rZ-eMcWJm"'YjOe2.$1Ua3nj0[E6f$*2aqE6VOI!PK8],#HL1[%qrXr;aneRE/AV<_Z.?S:\Pl
%!'CQ#4KH8=1bc'e&0n,Ue7a-P9%W[=M'"%k3t4JhTc.(e8+n[bk"M)QWWe0H8Aha?XpGuY=mO3[7XhE6<-#1J1<EH.]"plBQmRb-
%8#V!a8ZA/Ia`s<K9[fsC$#+sT)_oRU4W#6)X_JLt<$(,,/rk;]k'9rB(_)i7L"mj;V1H]Kl@2)2`KI"<9F*A2)ots/'KtNk.CV%c
%+udaX,SkrQdkD(5+_L[3&;LP;LoH%ZN9SJq]qXg7WAa'q3MKMR1-[njd]*=`'K1MK:*`R*=s+t(BI4#kOFiA/=%foZEj_Wa6FPJ7
%%:,r0MU,RbGfZ=BE2=nFY\je6OZ&rs(tr0]NPM8YYUV^d7DL\nQp^s!)(m(8VXVZ3,=O>E=qM<U>A+Lp<sb8sOFH(f?^;S5AR.S.
%C<M`h(?e.6p6j_Zhe4Nd8Vid?"EEg/-R[MI/HR')#aW]1F<88X8h#Y>;*^j;##jK))W)Oh'bVj'qSD'#XlQhj$"s\!jY2&FMm<`o
%\beT#N0$HR&@:Yf=fe]S"$VKR3H7Gf5IRdS*8nnL+uW;&)%s5:!7YN_*4"Y0eN?^HRO:d\e4`Pb@\$JTJ0p/:lHl55,V^djcK#^O
%8t>J,O=X?'&BbDa*sr2d.Hl-<V01K3@+&fd!7Rc>'40%`TR?cO(f>r(cs8[m&S>#-^8<-,^u\rOY$ipo?M+C,r=kV,MOkCg7X>ao
%*`T=HZ-oQL`iA..MQ&J:e5%hB'$Hh.=S,:<>FMbH757@f._RZ3Wes8QA5uW]lIE`V@f$EaJQ;u?B.&:`E\1n7^mq8sa-Cb?T+(%U
%cj65YqH03L%F`AN!/1Op)c?_i::i8prO-b'@[02HL*`!n7NR6]UjL!L5b(+B`T<Rh0PFHi&W"[nG.lKY/H\P%;RDSl>4Y+S9NeOM
%ZjPciEMDU2\o*TnE`]PdG*B\$B#J'gcEm'IO/@8ZR];ab0_[jKKi7rHkpMFr"g&RpdlM0Q3Q5rTiHg]T*"mjl@3Am$k/,%@S"#WS
%>"r)_aqLU_=WUoOE?t75CK_r@Y9_2C0p4Vi"Z*/(D*$8"I5CBZPe:`6n[@d/=Hj4)QV$VLh5WF,!$cAG&CQMdp-?%ms,d^;W#(,X
%%OpWj#(e,P&RPb-7(1.ORW6\&%bM[@'hJ^?nhQ>LSmr%We"9G=a)M?J=k=O0Q1]G5<a!bqeT)sWX3o!6Y9ZMdRRE6aFkG()/8fl%
%Q.ZCj<$:7g(&8?l7Kj7F.>^WTbq:GR&iDO5+#X2ED`*rp&QcQ<"IPdO5'KRas&EW:9+%a[27%\>jV<j`H!*9(E[e=`Otu%V.iJTq
%0H0'cOX^bi'eZ>r8uf*ZG:`7=[mr;sJZTb[o`-59K'd-h,>%`+/QT5d#e3IihJ1W/`CZf!WXIH73Is[h/l"*2g"4H5AR$ZuZS"=.
%"P>S+M;a!CG>]%cXc0jY!3n-%m*gYj'h^PV,-5cX!q&hq2;Fid@'H$=l):IL@TU\hn()4E6q:]%VYVSJ8grpQngtY=B3%XA^]]=I
%?m$A<#VcaEhW'P?1p-5C<C?,OO-Qn0XU*M/bfRB#k:R^KHBtC`)*fU,3kQ4@OU0dsc5HR!$r!r>LV^<XV"ICf)6:Hu/<>I#m!"R/
%q*cSU-PU<'Za1"RbRHTEV5qaOS<lr.Y_lhA15c;1AT1[[M="l9"W]`XUS`^qK>o<[Y6+8JURiI@0P3,/glr7c#6[oAAZ>!2c,!_;
%$K7C@Yc/;Xn-hN.O&?*1`\\%m,KFFp%8R?iW:$IMn71^R\eB@tAD[paY,#h9M9;53!KH8V=YiIWTZ@8Dd;B]+.L`a?S.0n5/S-^g
%f61>@otYrDah*U7^s6m=e2BWK)U:AG#6&F19Mg<Z8OaC1^%c(#HfjEF,=6B]dUmgn<T:DhPg?'Ba6ehRlE2]mG[T4QpXP\['kE"s
%973'oK6])\:6RSMfTrU6*4oMDr1N1ODbW#H\.@,3nhoupD&')0flRAMNJV"]qOsO&R/UPT9Sd(Sa_XMc;mCb4#%oo#/6,ln)32I7
%AA+iKB.5TdWkfNYNOj?IL,71[o*Jb`:ejo+%)-]M0l^j<5o8CIE<'k._Qc!XQPU9R'`Bm)Q`nNJ;'_gV![]366)b5l3:c`a`iPTF
%Z+E<a7L"Jogas6!mXuP7?"k9h;M4"E0o5Zm%3B3Cq%IB0q(dR>*3WQu0nd3ta>*`un!4b0+&B7[d"6o7![5`=.sQhJ>5KQKLU!+j
%=?+.M,pYb0E.Yu!Msr(u,ri+9<hF4G_2Dl@$psI=/_>7:J^\fGoB_2A*!qVM;N2O?A+D-[*_$@Z?&s"ci;tCX`F;',!b[rQEnCU1
%37DT*5@FU@\46I%,6A*]Bhs09!GC563ai&mgo&=K4Q&aj,2L>+#MaC`)]0';#98\UbTiZ@i1Q'=J:,NB%[I=)V@4A^-rT2$Dcjg6
%X_(33kAnYgld-Z)!ur9L;5p`:^l]am/;$Lo/u&EYa=dDJ%%kEBh9^Yhq]PA$@/oZB18Bj,RnV!cT5];SWo<Egr=&s&TZ32l)sp#l
%oaULOg*iXE?k@g?;9NWY<lEl<eB1&@-h0->ILC#3r!fANO%h.5bhq4P%5I+hr6>61bW.WEn!.G.r2ns4(qZj>I;-fmEI)]@30ncj
%WP=R.6$C_&)N!I:?b!ieabK^t`@POVp2Adq#r@eDRl"C>_RJmh&9Cd98cMLG"JdM@qJYqI@G?MgrAUup+O-,LS((T$,i3>5Dr$)l
%9#aF%c%Q4h[Zg`\e6/AJgaiABRZYmNL&[WHW3PE*n:/>0AmX>KrgS#FA@<QOhkYb]Fod6q)\Uu[B>a`Yi)R>0NW,CKG+Z$hF6b\!
%.W<tS!U\0cE<\L5p4Z&CmPXr%F2uc:2u7G>E&o,QKDlg@+-+AnrO6EVSBhTA2^DofS+PTKo//`$L&DsK'a_Asq`!(TAS^2-IhTsj
%@G,2k-3VE.IUiC)All)iI:</qOoQE38cJ+fmg:o2T`54P7q/\SrAU#]m>=40m7Hp[e7?pU6_`]3)u=L!Xggu*ke@]h@en*2rYoi$
%_I\B!Rm`C0Y,]p"CGr7e-hQ;Ibd]6#qX6ZN`H8ur9r]?(I5]#GjVTV@m,(q.*''!;m,-_La<]sgm,(h]Z"!`68an,"h^TuNDY2i0
%bm+-U5*b'tRf6MuO$9_oIkREJaM.=G=+VemMbJ,rOB[V4K`.B7N9+ZWIkr528T\b7hdkp2OP[3kq_Ir>#5`U@l:8UnIfj1lRF@K#
%)mGb4iIh(J=I_jR#5^@)C"t@`_u:ZY5M*chrXED)9F[3aRl%Cm#JOgM`mck0EF]"q!8oDK6hA;fbnW74s+Y/XjDWIr6ULB^dXNM5
%0+RngU&QH8>VjMmdXRHZR*6lrqJSEBA4RX2h^W>_U&SFOh9^Z#8Rm)8T`6@@P\tSXo\Up^F6<BQo\\j5V("7tDl,&)?;Ke"\VV_%
%c%H#MF5qf)(]&'sf,0qPRf47a$&bE'rAV<Pkm:SjDhrPVd_Yt.'7iI[rbj>f`(JVYhcT(^16VtC\$Be(55DrJ1a70a2b^<q:TMG;
%XF"Fn,.'N.^HIE:S3Q!4-K.fpFlEA?19CY,_uC0D:8N4Wr8/b3XfX8Sh]BRIZqDeHGN5!c$i>-hAuKUg^YuXH/Sf<T"#b"m:?lc[
%j+6WAc)4j*L1U\\G7@120R1?*=5*!um5G8P/<f`G)d"@M3PWa.leYHe(Ef%5+-#f[R#rI1X:Q(?.GaQC,G)a\gHkT$8O`_JB1;R>
%VC/L[d=!h"R/8HE\o/?)-lr8TmMk.V+)9/NZY2Y6T/*ur89?eg%Gc6geoPi:IDa@g^'KAXRl63;Lb<N$R5l$o+oBP00L*Xmci!K$
%>DA>S`O?@*>i4VT,sD-5p*L@frR=86eN)8[B4KNRaE2[efN(SB$P0^QMVd%uG2jIOJ+-k>f(T0#2'o%NKZ;nUb0'[iH3=CkobM1I
%qL;PKdg%UU,NDN,ZIV_,0KHYlR5',R&J6)1T_aDbL4QmIqIX<n_Xl#(9Na)*LqZ#&Vdhq7qI\MQGKMh<DdXKl[BgHnZbRnC7;5Kg
%9j9ZfL$'BV/)FD"Hui(_OA6:_D[:re4PtVS*44]#`r!'QE\Mp*'buS!KB\jY$6X`6oZ[FY^]B)PS$oM%L2\nrZZ8R[XmP\2L^Ul:
%61iE:*\[p0U2PWV^2A518b>Q6keZjb$X,L%?h&N-1m;K<KBJ`/7B3-!o1^L?Z;>>]o?GO[a_E_Y^<%p!lX7X%c)_e1n=]TS\Nn>T
%d!UJJOgY0mRW!)6bsIOYo1_,$Wnfu49i=@0YA@md)2)[VZ4)]MhOZ.9Si#>d0N3Bmo<#HqlO1rr,[t*WL$%-r@LSRHL?=t$jVhM`
%haGMM7t",'bu,C<Z5ChFeVd<d)pL<X6JY^a6h?:o_u7X]bI8i4/YL;sb;W6/V?]h]Dn]sOCE(GUN!==TCh^VoA0M(1Btc`N]kN`A
%RVt_fA[u7Fp1,2@VB4E8cF/(j/DmtC!&`E5I.Nb:-ljkrZtNQ[2d!dWM,aE[aZ$q4P?J142sE2&PdM\1AjR,S<uE:@b\lF=)^O=*
%3:dq%P&EQD9H#26HjA_79Tj>*qpG0Y(Qr];j:DDOP&I]EM)?X%\*"f7on;@p`05SE;1,,B*Oe[!L2Sm`e#9_ah^lA),qTP_G^W@W
%rk\*kQ/83N)87Pr.NT#UP]474_=1/*63peMD`UJ+[ULG,`:>:/EjcD61if<&HB[?XmH*\&;LF\ZP1`<?MJk$KKRP8e\*>2F(QNF*
%KAE$+*8`T@lIb"H-`qKM7_h`UDmF=;iF#%C9kq^Vp)kfuiV/J3Dc1sm:ft0^Rc9fhMMckEHo$[TGJILJHtuEeY%YQJ+B+[bho]/=
%9sW,n6YsSMU\SMTT6iX/RW#tB8m]6jq8QVp8j.I6nRXbl2a#u>H]mJTW;2^kWIr%YNLR12@RKaH(?gUS5">-<rQ#?&61_40CmRn1
%^*-P>X[2Q\R,C=%c*[R\aXtUn`]C.*-HS2&`L'T:+o,_n8E_ReDaIpgHXW"`1NT^$$Ka\GN>S[YT+$m$#,u]Gn28<HOdO.3ai!<o
%RW(2g^)9Eb+M;.YV?*]=i(EUc>#1l/KBQMi1Mpe%Kd+VtUBqc*hotd=l/!QZL8CR`N#SL0L4dRW1PiaGU?OjjKBO6eAanFcI7)53
%YX.o@8(b9>CSGaaHfP>O7,LZmUffX4^A1UZ)]PMiN(VoMD%M,jMb0U(M7sjB+n<a1kSllWM/igJ2u8A8p._9"-E)o+etf]ae(1ho
%Hm<PY?r)bRoW<sY!8ob'hn%!Z>;:PQ(8$U$cW\greD44b9]*4*;i1t3[q@Z_QA+RmR9eTZG/NsSaHkBNEg:%T*u4L(l'k7eeZ`4M
%ZV-&?%&WLON=^6UoZah#(=j`gOhn\I2jqC42["BKoSl=UCkBLq%@au;>#1O"!OGcJqni!Mf&I,gdl0@\I_gd')mR"]HJM;mDe++Y
%\61P7K0`J&mCJc\hlPGP:?Sp'FCq9`h_9Jbg5DfYKBX>c`k%MU@/=K[R,389oSn_aV(FC$DjHQ+#HGW5NOL<.l+Z<V`p;'=)cY]3
%kZZ'AU&)bof<,ujh^SX41oS-6WCk`@ha%."V89+Ed?I+2]MO#lCc!b<hoJ"ENX(d4)\R5AekFub#Ml+a0RY`'?g5.]ko8g4<S.k2
%,FuN0q0im'o:`QC4Pts(k]GJHI,h!OnejRILtX>oDFEC?`77'(0R]/RJlE/2l'oc_gmVk2I:E7-4uAY@kuS?eE).:ZfQJhcWc*#=
%I:&qe);JXYf:_tpK[k]ZWc,$T@lk\__';1"4D^+-6blm>%G<\X6<FX$ff),;`lFbL54ea1Km.nuh)BC$l$I=3^-*.t=Hm9:hqFaY
%+4'/bTatWR7c]qD8qpcZ4L0AkV,2A81q%=7PEU)u6hcS^>XohUl+WPjd]=(9kQ!M-jojAaI<.:2L<E`\WK6RfFPl7gqWSsl59AW>
%X-!D?Ds=uM4i5mDFPdr&,V5L.hrL\Dl/@Bb)bj"EEmf@lUrm_e620b:P0'$X)e&dQPO0;FLG8[;qo2;W2>id-)cpc8rF#N"KSdtn
%[Vn?]AH[YQ)pb1^3n_64Ac_7R)n'ZGKd`[fCu5ZS[h9IbDg::tXO<F%)m29uEsLAWi;b4-%^L!Q!0&o"L?ojg&p-gQDn+6</N1\a
%4njbE#^B);%<;!pA(o#<$0MKS/?Ht-nTLLG\V'8'F.[b6cPbCphF!--2e:g]l<7Z)OHFrY6I(T#f/I1,TY$XlhhWnL\>&h3!fCb@
%9]$+\oTC#bDrdRsAmc0uGMCkgbOZ2<YJdfpHpch$>?JT?q]ujZY"?@$Yn2#J*8`=4Ddf@7m^@J_QJoI1DA\Sq)_d):o,E:"cPhNN
%(4pHqZqlY=gN+TY1-r)M^;3gi*2LF>%DrCHI9V0harqZ=H>cbsdH;D6h@,L]!8*B[_k/:+Xc[t*9V5"SKA.>eAmf!%;L?;LWk=`T
%HP_9i@rb&qLLk+&?>m@<DIN5#G1B:80iDq#<3`*5_s(I%EXbf>D_tH4,[_"X2oT<t)4]QF-j0;'oVMc-\Lj^<7PDs"-`8nnbJ%HX
%#-A-Sa=X+[.#jaEhPe'X+H[XchXD6.$(!U%.QSr0bIcI,iKMG(\RN7C0R8kd1A?LD)fNtDbTua+/uQpcCEd\SR207"h@ot`R7,nn
%d.Z*)H$=9Up4^O+IU;[FKZ:WNL$0kA2sQTB9FH\9Eg`3*Fj8m)`Ak8Z_&L2sA9SI]DX=(_@<leT]=XI=PJ3MK2jh=3]c1se&G(Xh
%)uEll7V6[bA+C9#(t@Bg3e]#(CZ]L;8P*eaR(F*5,r+kW\Jo",`+8:jK]IHC\XWD6/C)pFG=0S6^uXp<U^*s_=7cp/6**W2E-J'&
%_WA!uG=/(@jP1;jj3&W\WK"BV!=KT#%,1,e]4Pl(],?Kd<bB8m![sRhhG2pF5lK3V>N0P[rQ):4`8-+CCCLYk2h?AkTl,_!&YF$p
%P^5*/'+tOeeX!`blPDcp13[6%'DF77bhZC#kr3OK]5]#mA1)@U"eCV-CZ95fWGO#(2^F?G9^6Nl.\3@cC[,d=`sDMPl>B]?N64r]
%DHJ"iT5U^@BdC)!([>n2nIFL7V!`t*X)']Dh247K]MNecZ4B)ll>BK9(*cX_!E2Z/A'Z'=2m&ciI-D#a2bgWG([c0iKaW%^m\U<1
%We1b)2m@5&<?'`LbQj%P/DT'Q2@I[@2Vd,!2$g06]\EkT@n7-uDHd%\Y1Rc=HZe'>_VM>=BO%LJoosj@gs,I96jP/]2j6arX2(+7
%&O>8lIV[q\`_KY"5DZr!\BL,,`80dYC>1ZueD3O,C%i,&DRuH4&@/2$`lA^uSCHAd&4p,o]AXY?.,H_''DJ=q2s+u`=E6Qm],BpR
%q1Q8I3B18\#&uTgHfj+"Lq@BoP=*fT])a@B6uW]]HZ#V?dg:"Q9DZ1%%H;8;RF1BU0R(EA<+b[:g^Tm=JD"K$<pC-pU0j;"J_]JO
%*J:oWE6PsKG8';<eZ`KMB))hMYfYZp?r0G0NO^!H7`^)&g^S4p@H#>`N@(;?Zm"jlPWV9b\!s9UgG$PYQlIP![_1DrRa_ld]\Q!:
%K5LChn9,J4BDVSbm=n#q_84k8P[=)>g@08!b%%9`i9c7E6`3W7DT:Z;n[UMq2eu09oF#ZJL(I6eLqDp+B/8_SM7^m;P5,M2mRD<-
%J;&#!G;BTHjQd7t2abPT(Rik0</.W,[aa,4M;4!+W4T#;6h(P,2^H<^2pC)O0'4K3K=W"CT?G.5mUg(@p[NpKRm<R^N5j\uq213$
%gte&?6g'39RhOB!"BE.@';->ph<3Yn].f3TY'P^-e9ZcWFZ4@Q1Q?CLmUf$3M&6G>2n=(%frkd+[jE!4^/0%&JZXB0mY4rG]2EL5
%]4#Z@*FpjJCK*@UKt3]0ET<WKCZ]Ng'$R-nbh^M#B:A+YmQU[!:Z&+#6Y10nE3!b^<T#C.b^EAU2?g7f^P6jAQ+`;-#]rcX*JbnT
%h&CsdE9pCfb>estc*.mVMh"*J(g3tHN*g^nEFBR`+NYg8R%N#/M%#ZB$tS(87%=l5p5$f/9\kAha[]_oA.<TJ[OOUV?lrooE9t#a
%&1"E;9QoctY'YDdr'r\W:Km]gn"ofa@i$#2k][0c!t-4i)%"(d<)lb3[gLh%:W@Og]`O%*Yn$rD@^BMaAg-+Z#X8Q+UCTUR+Z6OZ
%L-\Q.*qDqc#)R28KU(10'*a;bN:,(f&O<K#2[*F`1hQt=%(p)*3/n3l9:QrQ0XegO'[aKOOVFIi7e^)*XW3kep82?Q3jLe;":B&`
%rRJ]4";Xg[Z&n$'#q+\[dU3'MC`o^UduZu]L'.?1:=P$_k0QJiRiii-\:]>E\RL\tr#iD:gq(;1;$DL8=<C+#MHW\u,Makj$4]sh
%jASTAQrL&`jPlmDZ!N:tJ0dI;$u8B`[qC4:%0nr2(/%+Td=;Qn=?t[JlY(Z9NfU,&,.Z%l;V4s%Wd7U*%+!:/*R'DhL1fV:2/;ep
%MF@l%11C:2+N;@#eOBiRH#<9aKJFu&8\fpMl<A3(AL0`K[,!NSD;1-[76$sSeNFk@62iV3+UKZp&<+=pT`Edc&UQC>F9[ENaAn,A
%+7e^J'5Or_ZgoWpgW,0OcJZPoN0l_HW(;NCUkRFe#.l_VV@K9:ECr,?dn\"O3;@K7h:%fMgk,nGYG*>2h6?NBp.HfjJGl)Eh(3Bn
%5]%.`GQe+!9*ZSjh[KVNocqTnB'^rj[2Ln;+<uD.'9Ra^NOF@o`QFLSD4n1(b%<`DWa6j87=5.ejQNf=<[fLk51+m`)%'PJefL$#
%,dXPal3MWD%W!8$+Vs?;dZ)qAbd<")bOn0!'rfMV\&Al3M?<0`1e&&T;!nPT<D;j.Em&#P;-"lb87LaB7;87`dU9=TdOB^>-$"?'
%dODC)DU#9!'uF%SYl]3)X9(s>a;Z6N7jhdKC/61/035&l,+26BqS6ip:cm0!mVU=b)=KMX?b=f::Dpd+^+^.RVKCbmAIO??IJcu%
%LFWoDa(pRkRsBS/8C-EDaTuQKFE9+f_JQS2F/*p:5;4s?.JZ=s/fqF]b!p!mZD3eGqA0d)j>88P88A2f"NabS,UQ=rk'`%!J.k*I
%WUu9+B93`=?,M-Y,Ma3mQO=&)dl^@+WN9^PB_H!OfL4<@iR&M8gn63?`U+nZE:^*&)N787GE\-UagdQP@\aCPmfmrkkmbk.lk8*]
%%SoNfa"4Fq%5GjVZTg.F&H@K))HlAgLl.n&,Kc]m82P)8Br@>P6Q!'<\VuZiQr>#9)bf&^O.?A8)pcYB=c2!`N9&uI77A)hQ0$FZ
%5tsF@$5YTn&">-e;1tC.-/js]"X/t\,\:MriZ+g#ES&JBp$!sn]ku1(<%XOha'D19BAtd>Jr'@ch6^2/`%p(d@T,0Db['Y<"\FG8
%AEtEM!Ku*jA>!@:Kr6mQQ\ON7'eFS6CHF7?#s.*0QKf$?e3LTZ^2VOYPElNp9g`*l/UU<OfW[J`'VTT9_]g25R1S)[fj<s*<1kV9
%SruR-aM:NG[057C%lI#\K@&q[_*d)_H#%aiKK6RB."W';Q>lnZX:68&eq1o2g&:[Kq=PS$Ls&?H@<5D"Jrq_i2I(nJ#;'Nj<)\#p
%`%Ztm"`\N*lU*`_a2);Uoc=Mf6t@lX+cY8F@p$+#eXr3/+N!(oD?M%]6:;ik:o[8DD3IEj-h?s"&&tgF;G9,^30_88"u5kBKfR02
%=@=36a7>6rdE()Q.uW0]JMCmT`^fMk+dibuMIel4PR0\b<MCm+Ju$1h`-ZYl=JFJIgtr]eS*-mc-ZWL^+O'KsiJuL=]HJjh*l_@&
%SKEKIh)".&&fK#*lV/MQQ(u327hZJMG+$rI[V_6IFAljhU8toE@K08&?#/>LJsjR>?8qG7F448Y&tRIPRjM4]lJaoq:-/)%/r^Mj
%-mtBbk$GMF`LtRp.P\9?U@r?*$Top/""c'4%rJbpU4NNT"d*n38PQfP;T[;(h!Gl7N8>K@9QD"#]1CK&Ca9(n6q["AUf`Ha7F#0N
%i;,-?-N\3RT(DTMl4B-_+.F\aP[.4N\Q<M`A%QOU\TpSKEA]jgmYB'=X^_kr,^cXu4'4`];nfLc!;[Vb%aX^Yc>,ldFqA065<lg)
%>t`45h(X%q92RMJjs*dB3a]U98g>U!n-/A-\Pju^3'7K^KAC548J#PEhJGJL(/2T9U*Q[j@9?.[0Q<.]p9B.8dlJA7O:GI#&\.]=
%,YUj`K]N+jb_q4NU%,[FEH?)40O6k=+:$5<\.IHVj2pf[l%h'^"</WHc5CC$O>Ui3EfLUA$^bp=q>L3BejY`\d:Vne%=BmbYr2_8
%@@Ja?'"LX@."%KO8>3YT@L*ES%kjd3^eb*<C--I0,J+it%-l3V@M$I7G1Bl\s*sb![5jE)aqjrY#lP!WEJ/`!1kdlMUJL<Dm5t(+
%'p:`3NmWN3@T*o[CpFS@/R.i40@nhraNQ-J\r/*TfblTS]>/do83Af]hKpgm(L-q`013>R$nTK1k-A08P'2Ke&)1hf/M3Cm-q:8U
%^k/7R(;[D%hL1_sLNU;Ndl&@Lo(42SkpTGV^M3s<9Z24>:e&XM=6>D,VoZ=d<,ncFr;KucjI>^:M3Q#1r:c`2:bY`N4@q[Y^Hoo.
%bS=Z_UFO@#-%:Km$1W'VmMKjGNTC2B9X$.:T(/NqBe<TF3(5Rd'LRUY(p-&g2)Gn[]T,%r3+O2`2:0uK\o"/[h9q9LkDG]^n/(]L
%EFE>a"sJOu!`6AhC.L));Xg9&G'0#hIMfC"KopRg!?r0+2(Eq6a;JdSnA3mcHls?>da2$V-YIg2Y[+NdX#bC_1lDu;qtJ\)-5mJ"
%&QrQ2`MYuU&/djRW;tumF2>lOYs@k9i<.P1^c`,JV-k%<q6_dp#(n?Y7L4pkTZ<T'faib1@CN%\#r-Y]PJ0l;d1hu?KgA*i44FUW
%H=Hk!$#,0#i&a@K3(bB&;<LM'MZSYDTNF7f===4DJc^\YoYmDldM,$g+W7.(M7-hWO9HGTFrgWl]'61XQs.Tp(b@BD<Ma!HO&1L0
%;h`N!&=C6?UR_M^0nX'T<YdqC!10G8Jh394pWWgg=4KlR:(g/MLo74nlWZ>*FrdlV5q',`$Cr!]ciJb$1>W(2?%JkbKJ3)e'MpMp
%TgDe.2KX$]nsLe[@mC.,6paA27YKV97>i\ce/"mqr'4\*cmY8TebK,c;X088<YShSVEJ=o-Kmc"L8q$;Ynk+t$(Ufsd%6mhYjS;P
%)ls2,FT@'H271tD<5H:<)?WG:pu$ek=+Vp>*[.$U*7Hbn02VEGRk50k/$LlON$2l?bbSd<ln?=[mpHS.[:%p)LR:(($URhKP[:*(
%:_qaSn\W5_#^t4\`r`u\)=CB@[;)F'?EFa+HK5Zn!4rAD&3"HcKF3&<@(?:;7fe`8PVAeuMX6)(>WI2m:;h5hI[B2PTG6jV.9T<c
%,Sa'4g*XCpJZ+3A!(spRWe!\6+-(9)q3"3%PrM&%\O_)K[@+?2#$PnQd%GfIpsMTiR9'pLVkc`,OI/KqGTa0lQ**!:RaiE^OtV\A
%+,mbmGnscoV<C4j&).u2![=Pt]C!*l=#\O<VdC*u#jpD9B3Q0Ik'>Q7:-mF1R/dPW8Z!'ShqX1k`0t!o#3,aQ!PV5Bl4bP@Q_mQQ
%dP^_O4iE?82A(i]%[rd:(`JP,QdGHF9%b&8,%GGqSumMY7Ai[8-9An:KLd2HjM:DBFpa%#Nu_K/d+h/U'b3Rq=@VHV`P^8h>Pp*G
%j\$`0.H36Rj:j&AG"lA$6S#Fkk"](mXbKI[:*JkTkUo9k=ehK)`etZc+EaILNEAlK'0/VaGfV@!Nt"1hQC/S0/g7Z]JILj+,/TR0
%0hT%W.^l_>?6!H2.B&)-D>K&B@iegXiOcPn7X3Aos+ngJq)\YAK:@_u+g?GFM)6tW``+D+T#O=M\seV>K#N?.'R;'&$IO`Jr._9m
%Aie%K=h3)`=@qFMPEli1d?;E(-(%t9$r7Za>D\mfM<C(?7o1hSmA.jq.,ikcjG%[Bpb[So2GT8KD))D#8B/#?4#fDAFV]WM-1VU(
%aLQS,\W6=HnT:,9`u^?T$hK%-/U$Mr3!jF7NY80_Y)%<PjPJfS5m?-O*0q?Zd)*B$77^QY'9Modo-6`k@n6pr?:E1l/=&_d1fudU
%R:J?+>B#em7&bF(i!2LI"'-u$(3k_=-<V(O$/d8%inM8E/1m:oC(`GJBXTK&PRLl`JS@_t#A6&tZ%TgoJ1QLK+)f,_lFMA*gkJs6
%Q73sh?p$`\;bFP<_Ra5N)fBMTl%(%8:7.uj+,?Z6:;@Ku!9i4Fia*<>8h>`+QR2tM71W>8c&7g*<I3'dQ9']*b%(P\/QOY$h&s'I
%\d,co"q(G[6YmktoCNTHRidSTfY(O!YSUa[)`EOic:'+s@uQ6PLoY%l>g]qC^eiu8b`a:M!)+4;aI;(r@$0B&UgLDU\Hl5S*plOi
%hn_nN#GXp*,"U?bA?\Sn)%PpU#0[^qHnMFjFKQk)dYbu?JR=%IoUr\aI,,AA;kdqdEOcHf=L4a(`,IRk.ROS%*e_Xp(==g,#m"85
%n<niZJ?F2[C_MXj?O_Vfdm`?;,,6q#dK.pBNV#\7C+IFV<3Sef+s8l^e\fI!5ZmB0JeGj?HXJ4Y8c-ENKCqfp-3R1X:%73%@:XQp
%`RS:%OA4.,A2FZ78./E!I8oJ;4[,,8!Or#\JW0*r5ro0E/4KnaP$p>:dP43HZkk?2A0O8F8K#%f@@VQts#Y4aFG^`\T7J\G''2QP
%YUmUi,V]o3Tp[-cCX]+r&QK=`0)G;jZWj1#c&0H&Y2]OA_&r-jeqA++psP@mA`-Rp[jfj[eU]3W0S6@AT-kqha`8HB>BRNQk%uTD
%)j>k%?=YBXaIVg:TV8N1K0-'%(.U6B$rhkpqcI;R-$/0KT0sE;Hj<=&kA8[NC['Z!lHZXl7JLaO6Z$dWQ&c<R6tc`h9`XWY`'GV_
%L^jie(ql<F%"7LLc7#P79i<8%+GaQ?.Z@sLd-cb[S3oo2WmI-WZ9PoG;O)@s+u1ksc90K%*6"liM4[Zi2%%&B[j%[O?4Uoj#UtdU
%U/FL80",@DHP(;7M;Gb\bCZ\gA<GZ)4S`TK#jIIA&X7rL.?2`$VuBDr'ph5O8i=m,-IEp6YcscuGV2'4QG"k"QfA,VG$8bSrMZ1[
%3'nD6b.r3>R24+V'%MYlUu!(j9[@n5F;XXX#/E,s%u#$I",o>Q"\kHk(Xc&K0i`dDSe-C4;t[5,92!PNKe`H",Z#8qa<JmE*Z,ZU
%6O$HA/d3(/8lA'=Rn5k!2+0G0Xt_nH!tJQE0cQu50K;:[U`J?XJX-=A!a(G-.nmSUn(nUE\Rk\HJS`gjWsgsQ$hX1TFHa^f)+6#Y
%G+NANY$GEf&#.:&Aja@+nP$YN@TVTk9AO(B/2omT^6C^3;/HA:DPYs\G5umShj]JCCiI]SC\4o`X_5S/>t8cQRio`1YnLO1\?!D?
%-qOP_)<FWN%@qjegDIM#C!cVgUN1oj.M;$#P)+`66h-Pb15HuXa$\pLK#8O'r]u_c.DUT6(AbH@ZQ$!!!:-an1<YgP5d<;5=?[/X
%5n`SJKmEdJ+K5IkHn1"b@$ZsS)7:Cl:"M[_?I/agaeFHOi8"^*0uk/eJmb;Y;GWfR)15AOfPb<KM%dChZu@GP^gm9f?mCnT4iCK5
%,ZP@_2:"Q44*XR*%Nul!2b3pg&0`8F_0mP-(RaM5`H7kb)\XkV4uSB2TJkdJM.2Jb2S=gUs+$K)8JZ8+A9\M@/'lJhC;:7p#5VIa
%OI2mNnk:/9:%3cOLKhR1&oDb([m=SWgeK=r(MH9>6Id#$8UY_\jC1'qV%lsQ8n"SJ?=3uF!I]R-9n!I>N5V$D#@J/=%S@UP#Y^@c
%^>_#GM=6,]N<dJY#>-o>\HO9`N,k@U64&5g#)?!<NIX?iGMbA*#Z;Fmkp2,B$&g?amgJC:<q&l4*RR7/&#j51!XA%k7KCdP`5tS&
%8hkLp.RKn`)r4pao?`k[C'%/t8CdeZ07&GdT+4R@:9cn%ie?7kN'QqRrJNO#VHcqNnR5WoW/lI<&&/O7,<;MS&]#3Jd%eFqLd%V+
%R#dTN01X.W/A\0eS0H%-IVk(J#(_$baQ8(2Q)k3elBCXLdfVlG+\\2"9@*`cRW=S/kp0uU!FUjO0ip">B(l[@l)3;j@qZH)5VS=l
%88RMn5I!@Bm#Vgu8\K8.oFT>/>;n7tYf?IrG,'C+):>N*q%7:./?L0H+ZXfnLWpr]'9pFs#soh#.og`u3(4.1A^N'k-3)[a4=#&*
%[K)d.Xs5Y7@m#i)($U>oS6[Iuii"]o0#cA3\IC>Ya[h'o.a)lbcUK4IEU.6C(lCn2(n9(j8iWUkj2hTPF3$7<`JQi!!uu??K`@]&
%/fki8VaeeZYWTDaUu/9oP(s.&-[S'a+gX1D<:\r$3ufjP(kdKlDl&H6*i<Y*Uoku:.J1r/o<@X=QJm0G+c,Aj)`();NY5erE;\?0
%K,hQG`p)JNbSJ!n!c"lgZ,-)AhO`jC)agl\71!:[:QE/H#a&[,Me8eS-LUs"#CBP?(8H]F9#M',Q`%U?9?^=.6sK%d":S\FhIm-a
%SkP[XCr'L+W<rkaD/.!Y!mtSh"qII_3[+bb7A:pjjoBL_>2'HLKt$C"<]S&?$fE?#j:EO].R`^Y!!D-DCk2Dh,>8*\#mrClZ@4ct
%OSm$1)6A`E?q:V'V"/CJ1W0AE+pMEgL(.NMCG_3/!CD9Ska[;=#Ls?EJsZj6a96m<Bkt4@7c?Oo%KM5.!K`bJ*'m*1@7*OO92CM*
%c=Q3C&e3rYCkUjQG%KfNKOYauA9c`tp(F?1Kp@M?BqX:D,0:aZaTMp7ki37Fho&24PuOLE2ScP:*@&;6AcT>#1.lSKaILUe`$.R(
%K>`bt7t;)2\5DgD2R[N4Fnn/984L:W+<o/KiDng<;?Eaa,QEWmg"?t56ES03PaJ$K&987jhgt!Rn\It.0pG4f+m(BdL>8X`#a!&9
%'Rf:J,)44M)m_;!87XM'(j0m:r>[/S[#rpi&^sY?5Mdk+3lt?X(kJ1med?R!@;D8J5,9dJ3_$[aZ"KK^)<&>M@FUgs)ncFrA!oSG
%[NNU^&dq67gP;k<8#-aY\WZ8B#[-qrE?5kd*ZIO([H7;mJB'B[A`3B*?iiEK7:baR0d[)%+a(e_L7;[/6in5:&?%+Lc907$1(PZu
%jJb".G.fd`MInT(UlZ*QM3Ao[C3m$L!]Qeqn'0gEAPAV&5d<!U?a\aT(.3fVDKY3i-umk/EX3fN\#92W-Q$)e\O[>6ku=l]MTHs"
%KVi7sbu$%A;&C8GQLm8/%c@G>@20!<dA#t5fTTm$GWS27,=eoRFUSS9S3\.n)A9^>d_"tt]B+!X6E,6p1o<YPF$AoV'Lm*_)jgX5
%7jp9!Ubsst(;s(/fgTq[!OPMrnkjt//p#1fE-M\%?_g40_?Q2pk]"9;!tbbZVl_YM(#]=*fU_%@OG1E/NXBg1;2-(qLYN)(A#-Og
%JlO'Z>W=j=WSKLVMBJaor88ct<.kI>\hU4B6k;.7]gou&'IT+Q-+Aet="k/<C,/)"(6V`"(HTG+c6t1Rq&>`Ge.O-*,/W0/UCJHG
%XEKL@@_-haQ>e$%8;q*u)&7F:RWYT$G0iYt]39Fp^EL!nH(j8O:8ApN0eRo8`+h;1OrO5.b`Toc+qHK8OG/b7.kdmo3YQp50<7Z7
%eB/u?OKfJ-!u;!m!b%gZcdO/:_@fURSpY,"'N1KQgq[LAZr$BDGu9Oii!Vt!3Dd!e-.AWM'(Y;.XiM"3)h;E;@GK(W25S5?#:JV&
%;)2m1>H/deKf$FjIQ]).0;Y==_XpFOoKVtKn<"J`g**pU\5I=[="ReDFC[+=@K'_&N+2o(V59n3P(E,0@)GLVKF8\>.FK7-i.ik4
%;VeA^I'qQE_ZTsCP#rK2/uP3n'f-t%72"qG`Y+"c*6PCLJICP&NCFY>Clr?:r=r2s-u\9$.<d!+XTY=X'`rjf^W*53MMX0e=b?#i
%J(Opp:b6>o^c62<._Z$hZ\C^(n[@\(q+gR5N(ItP@>sE+YS%mF_G],D:e;uAq-(h?@t%LEBLN5qLWJd#.+D6BE(l!Ih0!7IAAYW^
%Dq=S*nmt.]<YW?7BCnA2P;&tF.FUo3A7Z"CFo]eu#T_iU9IETV)IVsR98)bhe6I$N0mSa/8l?B]JDnLA\l(L(^hSYO4:GatmIO)_
%0.7AB:EQ"TJ,s@GM_L(tI:s7NgH]'>?mPB6P3[hRJ.88p=<sfO##7V:i!E3/h/X^>19uDfLs@F[BSbHs%V_@[@?s.9+EDUd].\@L
%MBpc3A"m3?Xpa2,^_0S!Nh$4GNmo[["q)SD_tV@8WrSb+<b&%!=h#24\\e&Q4825Z/HkKDcl".?V'?9fbhb[\9S+02.%NFASl:O$
%,DlO]K'/Qq2gI$+cRQ+LSB+98(<IK_Li(&3N1^[oio(dYk_&$KF=IS4;dD-miPjtA^lD&O>bn[0"F(kX-CR_$CkBDA,TstTSlIH]
%?:7<ilfSVl^Op!Mp%(P7/M7?BTMVj0+]]_)GhDHF@>jJe.18L*h([KPW:rhWA\Jk@D53J(dTeIA>7gpgkC=lbQ)kObK;0+a"?TP*
%G/C&2;Pl*tZ[$53HhFF^0&NBJM:(,V3!7iOclWr9FUcPb_\'k`h$-h"E?Lq&,'sQT#L'1WOt"klN<'lf+>OcfanT<krK]LMM*A+:
%<s?91^"^']H\sh^::DM%JG,E7-Qp]%rX4>7\rC1PLRuO@d/ln^Y_?SKO:%[kM\Fej2iK8A'io:F*_H'r)jJ=$c3\DQYs)"RosbhO
%i:BLUg*4occlA7h@hqg6?$s=`b!j5S3Eb"!\Yc=&\IC%((R8H*(SrZfB]L`&E.H(k(+$1j0b#-LlBQ?UVCpC$h?^N8ntH.5,j?sZ
%;(Q3&q_"UMMAE]C`^fn$_umCZI4:8`]1<0(OZ[q[:B7"%L&+&QNLJU6P_]WH!J`<7d(!d8ffpKYM:1`m(aLF6`M1R_&=\ab$B];/
%"oq;L/?raL/%=%k9"K,dOMY58\d-We?e^:qq.353kGL\S%bV0rA_gbq$GeU(:)N//N%ns.YaA`'f])Sf>j*@OaOcF3GTN*r@$EaK
%m'$U@dEbGf&CL.:!5R-"N<Y777krg>Zqm5(Qngo7FtD#VZHWk2YS$Jr+^LIj<#=NCDT$E$1m@W'NA2eD)iuUEE8`5'LG^hVZ&gaf
%5."IE3f2>%BETt;/W5b-A0'8i/+akA7I1D)$K>X8OC1*N8i!\SKdMkNO'\>Di;Uo2][b0=$H(N[L*^F?j?R)jrk3HZ`#-IlV_`iW
%,eUs"LEmYePYT=V$I;+)4t/R*j4)=?N?Dc/EH6G!'HuVLO7[(;A-fLEAns12=jRRlYWE,kWi!$n>QF"e)f7&EeYF[gJ&q=fO]?#S
%qpWLBKn+NHq*or@#dL\sH1Fk)dpNc4L,Gn[!Sp%m7*![*6!./XU/!T[#p*X;U/d#?Se!'Yh*R`:9J/4K,S"?+7LA>22;X]He0@E?
%>%b$IZ,Nc[e%dS%2Aa"Q/neEE8fU7WKdj'bn-@o9`-GIq`NnF^Ej3HYa4SibqQj[j&,FtMS4/6jP/&n"Z#(]YUie6H-6VHa;t9>]
%#"F\i$rjjBg+\h1+F=ud;?.;"fE+*s5_^j8*a3I+V%5@q;b%iGA-AWTT;$_T6@6L?*0>-2q(Rr*+;$FIKXiWgdm.:FH=F*p$4@C8
%oj!-@*O2]?B*s<rUKo^X?l^JJHbH+shkrQ#MheKti?%0M$>5?"D?"7%'HH*<CZ(<k\=fTMS7aKGUQZQ*Mgt*N#,`:R7VZXjVSN<a
%_5d#R8h/oBm;`qtRj3>=*8[4"#riN*+/_N`Yb\oE+1[sR@S+:%I;tWN<1A[Vr7t#W-EOQ&bH,s0;&.JoL5F)Z'=I=AU'Rg\Z@E@X
%kW7.Q,ofV.ETnc`'#lKAKCC6D-rqCD@i[ZY?6tl2E:LN=TNA='$,V<H%Ib!:AOC6HMQL9,ZtIsh'FV=SE$Z9bIulNb_XbCQQqA'K
%'1OfAhFX/%JlD0j0QsLPJ7B<,Jf4d0cnN;P&=]Y!I-0$mLG38a.`j#2JfuY&(eIt/6JIY5(AJ#T[UQ1t7"pXr4GiW\bXE!sGpVk#
%'bNXok)9(Xe4YH-ESXQMgc(?$ZB(9-PD%+?fI0=/6MVChL!&.sV9Qp*Rd(.IC5h>#X@;-9EET\FBU)'s"NrAOJW,oJC((u23]QWM
%H9>k3*pGCNr&$maX\c>1efnR?0Nj3g+GDu*>tH+%?e_G&0e_2d;^*liTp&K]&qoDoPS:3p/e8Z0-M8S`KZFMb-O.[;U$pSf]Z3R7
%B4im[NfT,iPVTBp)3G@OYm4uDR8gtW%he4a>$K57J/L_l#=hUH7)3$MC!!3e10HJ..!PmT`do9`^4tUKI@auiO?SFW!GdYaI9(UL
%A:[#4!_-bkMVp=SI-GY3M_Vi<%c>)OE>fLpQpf5PoN:*#RU8rT8BLsChH2dMq^%4X@O-9h@4[OF!PeHo-5TS@#ih0\K/G`Vp^&B(
%M](?hlJY\%@7@/W`/r+n[P8'hQo7sX7dN1QrWof=0IKHm`\PJ]i,M0$*SuZPAcrB*Irf]u7R_3@`$<`D.VZG$oCc%EEju.F6o&6Q
%)Ao>u"Mp$o6GhDC\MZ85^DC?F@2RK[61YQ">q06&i--h5_`p;JT</7E1KkT?UNhRW_SG1<X#jp>dRtIGCm9Uq>=u23Et;Yq6]$J9
%-]LpP>;<:D7,ZPS-Gc0@JifB$+@?eu4S%rIBZ`:[!N\:n'$<dAPaMNgg2:b+74Sb0*@"Q0UHj*]R7AgM.7L4o6T]dDMPg\^8kE_l
%Fte\]'c'LPFNn,FU&[fW#bXVLm@cXmr&g-(6cX*X2)"3FW94\ml;W7%M(N$HI3e?R0l<*51Q&+e=_*Vb`Bb8nKHHRha?kETSKTq`
%*+F_`kVN_go1k[RLOkEJ[Z0Ao-Z1*iJ06HTd>2b-K;]T\H4hiW02ua5$6V]V-_*XgR>=7]V^<-MBV=cO9=k!-q33'Ed>ANE`ismZ
%k;Wo)+O$!fg.aTrnDT'bhb'mb=W5D=MhN&,5>.@^K.-F)HG5*"Qo*MC[ZP(h@A%NBN=OhQbTTW\SD;3._)B<_KHk2I5Z49ZBdoU2
%>&r9-"S59DK+Qdo__=TsppAd=ODV+)/oi*qI)+H3g+UV*B%]=;aZI_mUsu\*?K(BAg+g#e0'T0,1,,a?DDF%!_UG9HjG:\>7;R6+
%<%(h&%33t.#fh#1MJj/e]M\s$"2dh;+^PGK:6WWU^ktYD>Smf8C2&P2Z`3n%GUk-jba:d[&3FH4cnjm"S62Dg/hu'Ze%D][8>n47
%R&nNL,Cp46#$<&d8H;St(#!#ILk8J1O)u\`/a/N&<i*.VW[AX=<YFQ"";c+7,#q=KeZ&881^lJb6%nYs]`LPNd]>5kA*HRD1_dX.
%F5F`/)9'eCNS-%H:h<f1"T5t#?NUK]YQeeuWCVk9(nhf^Sjt0$g4[#^C'#[:H&,G9lG1pi*[,-AkUmPq<XV)>O_R-H,2L.1rT*gk
%bXm\fGF9rIF0rME$Ylb2Q'6t0%^RA>\",+4aO]c8K"&P[a.Q.U57A;i8Q;/j0o:UA>%f-A#o6BsDYc,D/D2%)bQjOsIrE[Ae!$^N
%,[#"'+cMS8/e.AYHGM=/k6n#b!PuLY;3m@lgI765,AY'JQ!"j^JDVP>N@ka[Q(Wed/O][hRZ3$"#L?:HO;anP'ViYW&.tf\<QBae
%s$Z5eA-bQg4:3]t3k@Zu.m,Z4X[2'IIZ%&SU5RrQZct9uW@:]]'`6?Xi6p*3/RB'g48C.2V3B'=EDG,H;+5%=/OEGF9J!UhI$3nB
%L7e7/ci[KAENk,!.u"4P`RpQHhr1-AP?3X)(efC-EJHrigeqWj9r^;FU4!4Q]+T5-S5VE8)$pZ^!/(Odh-ONQR"-X-AHV*89CF,A
%,O/>R(]\77)Bs,6!:o""Gf"iujckc?i)MSD<?B4QbUh9]Qrr*9O<;Al1;ONW6+otI9<;O-!XZ_f:*IrWI29+/oLJtrJVK@)\$"5t
%QUqL!)tN9rpdim\kjLcnVmJdka(e!1^.WZ&(XLQQ"8<T57=hDNC8R!2g5Rci-E/,nSK'$dbn9e`*r?#0oWa2;$MtLl7fYE.*m%nF
%D?W/A:^/8T;FK3e9Pa>S*#(]3;igSia/G0&W5TKC$r8&jK+^L5E[Lou!B+o#5VA7u"4`6LMQ.H,[L9&fK;DCh3"]6r+sEsWdq7VH
%fP!B<%m"0;]tphl#U_]S*/&=Q1B(VkOTdbZ#hBif5<Q8jXGGKZ:F"i-Uuc6B8TnRJdqY@h8PlDmN&In4^(#6e=P6ej`Vk?1B?+e>
%CoDY1%i:s0.:gD.gk5.@1I4p7K7'Z&d](]N/7ckO1",I=Y!U>W"c2Y^b]lCHA.-$n`_'2@Bm+2k(l_l%[@Q]0jJ1Wf=\Sqf((0?,
%E#Q98NK]`n1&f/$e,`2.P.)<aI*)oI[l+M-Ym@Z[oP+542@D!d@R:q@q(6HqnN>K:;6$Ipf$YE^&3.-nLi?LYKEQTFBkEQ$$'rt4
%#b*L/#(c,>pao$q7Y*]^$#GMs+Hp3m&g!;c%)RF7o7C0UM(,7<N>.i+65upI!)bh95jBV5V[%uP5-&ea@LF<\L9W*3=CsN1<_NWX
%1"o6Ab_kVq6(4j\f/j0STli?,'ickqi",N&VVfhB,sblobuWK]n2?-%Z>-$MH.^IfrDJQ+KDVb1d[?69)U([U7p&-cW*GF?(UUtV
%2\!FESJ$op1D&!OFCcAJnDT9(i[?h2TQD]H2Y;9@Z@k1HS$Wg:c8?3s%/S7lYTltKA/WoJXD+UW2CU&IB38^V3bR:<^l08po@&[/
%O"E@Lpmkugdsr=`DJWtnMX.8YM9h*+0p\V37!+PgI+Tqq;?ht_rK*#]%*",6,I'5X^M\qg1BHS=g1d)`7l0H$7I)$uS)J7;-4*=5
%9.%csO?H!u(:#/G[67EK#ei`%61BgIZ/R9K_J@@*V3fn-BH_cFFoP2$1;nQX;JJ<>Q;.q7!'j=r;tqAlQcs*bFcp!qib_P4btb8I
%s)k2^U$A)0l(+F'jHXG?HKm2rR:Y%^VMs@eif0d8)e'U3CC4N.QoS-n_@l97Qr%n_TL5b:H',/FA<*(c[Bf,kFb'>rRSRd2P[sV%
%,HVmC.qNsWqM5[:q2iOC-mj3N1GlB37TDZaJgT;2#jR:Ar/g.N<^@6/G#2DeH]@,GK5]YIBUfeC+sP<;82'*TTZ3P`0/2uZ9dn<.
%C**ZMZ)]?WQF%2EU'P%$+Z;pGoB7&'O+Tc8$rA7)81u6_'QO,8?,9+N7HccmT(-_K7):E#iTt2R<gJ/'4$>%]#gW5kirt1'RgX%/
%RSn\KE&:5D8qC6(%8q!4dA"QU@u&bdh:=h<e3I;%9cFh=pH\e__K65tHP&W:Ap'lsM%%6tW$?W//57c9H^)4=3'i\;id49<l7A0g
%9KXrEh^s5h-HN]OV%IQC3\42lO.pau])bAi*#mQjWKF-$4'?fK<(o\uNN/BRAOo_AA)^[ikMMS<76iQ*J.PdITu6#_7N]780/]JZ
%4L.,41o6EP7Ziq9MC=!T[WAr#$?p)0M1'-JktrFN!oXuh;K]\%$m7099Ysf5fGKH6iXQ:^MS^H&^.l[U0FOEg3ob:P`2eui88g);
%>oQ7m9+G-u^)+-1;Q&990o3@q>/='iSqSRS)&^.t9p;AX6WF?>`?,)S(^[Y6`]uR\0%.^pX6\BgVP+,a`h=W4^`[JP:^j-B=t;?E
%i;;m;NIVpqM"2!GEIe`GfV&AEeVr<8iV+V1co\pURumn+M5g_J+rF5-e!bg.8b?t$TfmQ<lO,GU7._Q0+^?(&$#"32d$pQd4O1p,
%8X_DFbVTj#.lsN5XKY?ZKIFuce:L/MVMJgcAMl&`J/h$XYG#_MjGREG8;t+$9'lp;,X*5$>2OTEEF*iXU47i>Q)'NlPSTBC5fu0h
%EEU#2LlpbjS.SV.`A#XVabrig:,P;-'7Ls@/25;.-'W`LU@#r^V8S8@]Cqd1el'Lf+C0tpV23?G%#>e5%S<7EKPV#V!#@!'W+&Xb
%H^;a3#.W&tEN1!tNH?:+#AL-Y8u'4)js#rkQu0&?;buV3/W^f3.MJGXPfj[Q;b6r6)1foa7;>C0:OC,3Y:VQ"$-"2kJ>*)6g$g6=
%1^PaDp+`)8#Tfe]P9@hsLoMiS\_7q.V9#bE0]@P=73<iRcod/B<?F[#o!"ZQ]`]%3\!G'0d\"u`FBQO;!e'?uXKYu$+j+-,*oXp9
%odr;2_IE2$5>>0.*#qJW%()@QaZPB2ED1JdGcF14[IRSK+b?,%OS@&?UTfOo4dAq4<U3Y!2mgVbZ8n%^'dtJA@Hk#V.#;arccH*O
%#s)Q>VtuP0qq/Ku8:nZO"4Ts*`F1R?V#(7BJl_-o;cWpC&mIbp-R<^>@GGrNW6B$V-k?.^>\Hh#H;j:H=78$fDiQFn6E-EL[3\(I
%!e=sM[Igr>87:qKaV>I]i?^ln>GfGQ;3?+RbY!^.KtA1^>tXh-joUs$80UQD$ID=;h:[FJA'PjfHtF!0@$R.p3Fki]V$V&7EbL4-
%FjOS`_1As=M@qmC(FY*".?a?t?[BJP\OoQ([AkguUa:7d/Bm!Yq`Dlb#-=-rDoej(46i%27,i?k\6qd8DB9-&$kB@lYmt_r1CL\6
%>a)Y6#ZK/BY=p0I'],S27LL+Wf4co>r&',L+@Xc*b[.%,aSXU6/ojh:UEI]g"iPXZ(Ui?S,nQ=?jqu$V96c+1<uSP'WoaMn6AJHl
%K?@o:\W<a6mP.`*Z7[_4$l`s;*/"?`.UD%7.m^LO>>c56G@no#6#$DD44,MjO<$tQ[X""dBpLMAK0^Hr@`$HMS)qIG8>(V\SL-34
%i^>-=0ahV*=Y1t7ZNOkm99;Vn"/sR#_5A*=oJ.Y2UH7i,"QB&MD_,-F"9\.t18l5tG2rR&WXn&n5uWkuB-P<G5U4mNF%D1aIm%Dc
%2l:Lu^((dP@aQm='N>mEk@EQ!Up:HP:<'*+-GSW'C+6ja0j9KSb"/TD]U:CpXW@nL>U7.G:->do![=A)bT2L19U^qgl<[juo!s_T
%Gs$\$[1.#QP[0.u[[,b:g3iR^M)hN3!;2KO>B<a(8VV6>0O6t.Jd?"*.<#?$Z-/o\ZDgdHa@Ja>TaNCfNJgRNI]33OKG2@h(g;WZ
%aVaK#0hG#/#R"kCe0O?+H%uN`<qG]tO>FIf873IJFXZ[0P&Uu,]9uZ^N0(Kqrc>G/<4^*>4ILk:_G",K.6]>,+uW-un5=]a%>rQ#
%7Qrnm_C?sF5!S%G#178<>X'C@E1-og;_lII9*<RD9Vl_94CeWjMWubRW50-(;LG7Bf01s1hB@M*"5TC.J/&+a4@EOl2F<N3D%s<$
%BMaoE$/EU(Po9CX0$8(kR_l3JK*\ulLO$o!kK6E_"=)\`C:_7XlqoqHTPROQjGM$+)i9mp.#U+:UmLLY3_X].>3A0kd[]Epb!:fb
%/P_JR,hanoNu%63+tq<.e0lB#Z62oR"riD\@FPu=-K8#nZXV;*=?(G&RVS(n$X,TOI&9Frd?J0d."+/+]LO"E@8q9P%/jZZ#07/9
%P+c]6&E"0`5"r$+e_<YNKFn,2>XiQO;?\5UP>SS=;(9F@DL35.8<e\!DlM-Ag)&<0!\8kU#:gB;j#[rdep&5C^;[#\@7!k:.@os/
%?mQL`KLYEPb"Oe%A9W&Dg-IU4HI>NEg'[VNZ)DX5-FZWkP*J[+HS\1m.)G]hmP?Yd)JBQ=L2&3I.[ofn>D#esV0Nn7+I1X!A378p
%gd!*Y8S</LEPftO3a#4A=5_O?Soj>c5n"P@(bsHO!bIQb&Z&1HU>H^?01mLGA'dc=@-g:25[`k4-qb8f_bm0;.ABcuj,''\0Z/ob
%Tt$1^)Zbth9/*%P("oZ"7qkp0'9-Qda:oea3!K[PPq3mlD?MHYKg@]rU;>q8O@MkC@`qLjWrk0+N0KF+KLaJCSU3I5>LEGCe2RJG
%$u-d<MpNI[3F;Dp'I5Q!9H9F/RRT%L3EK-1e&]oI*UJ)Q-Aho$.f!?XkpZkBM?)i/geDN]'#nM2;mc%)#,t%Jg_A2Y+O^Z$-5?,%
%n6j@Cd[&>bj'1m3dc=R?H&+6gUPWTe&I1Ai"bJR_iNUh;UP'f>pJ;/C)Pu:6WgZ7JMXVq);HO*Y]Fi&c:)t6UadU5J+)X@Mlj$Q]
%5apYc,Y[[So[LJ4)O?$W#H4JP\L,9!:a4VdfJ*3P7!KE^A>3r=eDQ2F$3LU!d.Gj*?1)+KABg6i4\aSR1T8S*0+VQpYhOh.lP)Na
%E]@^0+<-j.?G^8Bs-6HQ7Rf7r,C1_,[!oE3TcjLm6Ep83^^<H6T9L[g'k9QJ]*SnrAEeZ.22'QC-Ble4k%N-rJ8&[Y+'^E22O,S0
%9,-Bs`b].=,KZ7U^3adfF1JZV2^&"A!e=iR.5'3d-K/h4<jZ1Yi"g17IY<K$"EP>FOQcn2%J[47`I#1eiL7o`iAGTn(lQd5k?AKu
%:Z2b8s-3W5n2XGAeght5GP6ntY6VCB&?g&MI">A$F^W6&lV5p%WJ;?789cS9/@cfW8K#Ie8;R%f>Q$tH&Q-&=QUtm"/6?=,d"[G]
%iK'Z97Pf^C:sDS,AF\Fs(k09=*sA<B-,X58Ff$)a4[[6r/.Y:9Y*^><7MO3@!1&.4dMC:H\[CX#&Q_CT3<c)'Kr(VNcTm&NTF`+@
%9JP\cA![Ct=V-,0nKD8Ie\7eLM2ADMG7.l6>)>lBb0ueYgZbs00qqeZ$OCo-O1q,5#^0dDCk:e='Z6B_j'aa^aMU]`QFV18W<Uel
%G7pLcF##4=c[J+<9B\S<GT'j:qO@-M"_"-s\+T1$of@cjh4JkWKMT)=EI,+4488rhI`sY<kW`,XD3:q&U_iDHJOb_gQW=gii6j;"
%JZPJ,Wu+pi^U&`bTnqN(rXSI<A;G*nG6jq"/s#:A0N+IAW/T_[fQE+/US_<?@u4R?^.STZh,k$)"CeIDnsq$"MOOq00aj5OS5&e(
%N/Dgk7I&/0C@S(I*UZ[Z-Se]5F#;_>MU5Y49%1?2p8%LVjFDc)RGq.$R6*62UAe0S%\?hAc-JiHBM[f"e@:,C'a?Thh!p:2e>f$2
%gu7baTtJefmclfe.*c)U/nle4f=)um09.GThN"L#d!O*gmBA/3`7)Zl&u0BoW,7:uFpb!=V<oPu4*G0sMJY^;XU3_oF9m%YfT(KM
%$9HRk7qN;LQVH%k"GpPUe?8Kjr@;1)cGD1\:-OlLZZ,k>9!cXn=d[*mVSC4+=l]pF0W`@L'e^99?.BFc,PA-NU3=LI`(JXg.o(+$
%];-Hf4/a_f'soJ.9-bZ]4ZbDRiH1i8FuUck2f>d1LEcuN)7u7VN^+_?lWSJ]%FYQCoO5sG_[3A8fg-nr3,hs)_mH;0i(V405ggc;
%MbV7;g+HbseZlIM49BhI3d)96CKDiLG4e,']Gr^N4$52?%AF0^nT,g>TF9FI8u=pu;XEs&AB2hiL:[cA=^*/!H`gml60/EhL[d\\
%*+3kH.D)iqVI_-oUj<h34$F$d>[>S!Jdn)[l`$6l8k!0uWS(EVP2:mibml$4oIs4MZQVk]BNMOHUpA<q7El=]U*.t8lmrDPHqL0(
%SY_Q6Q0"l`Fr'j#4SE(+%ZF$(gZW[$?qN`gcs4g*jA(7uD,&7bPYe*&g#VKNA[3_j2jL]OV3GZ\WL=h8p]4C=%Q?00H7ie71+(GE
%Fu;>h+t1#bB52UUl+B,_X.#TU1]]kqVIjI\Ud<5f>g:PlrmA__c-A5YNNQlKP+qMjUR3'"Y/qI:`9bS'7Ie3nR%:(X+I8BAAk+1,
%C=G*q46D/\;.D4j#L=lO:V2p`V2-fO2-%m2?<36Acd_<smj9,Cea,gcQX^ralpqeFgtK<-SY`JO8>M`DSb;'oZR]d6Q6E*]NbWag
%CVi\FZU7:qG[RO`kG[oMii$HZ2mWlB@Wog<ntDka(k-kPfQT&3dN2;`CF3X`p'D'uW0eTN'^7/_@WkZ/m#%7&'GF;E27rB]:!HF>
%RTbA@:Jc%jPJ*sKN@ehtFje]0_;X#k]blus?Ko5f@Wq*J['GVC=ZSXCe"gGrpbJ6^H7!6Z3@=+S.V=H@(Wch^0fqlX/=8a[0foL[
%$aea.m(g4V%](Lak6OGO0Gh%t"dC$b)o_0Z]?#fj->"XDOi+2d*Jl"0*)CXd5h@=gAJ;DVbg)&Z7Es,(Y?5+0ZU9QibV6'M=f/mZ
%hOU\"JU'n!%%<V*$-Pl(2,gg`rIV8!2`3ZG_1bV.DS1+hAd?`hOX"[WG$nnqO'#>e_ceR\]JDE,/BjiddF@NemSPZMY%EIFMh5tT
%c-DJ*1_6@MSL"_Y/1YIYQ>hTl(QnA"3sh+TAnlK;Q/JYhB?0?%$>OU)fVceY3L@(i4t!/!:!V#gf2,P6Za2rokiVG%QEj.4NcK=@
%P"b.UEd!bUe]+c5fjX]SZs/m'_cAA,I3rT>&["p'Z6j2hZc=j5ZH:d&R,D:h*TcYGbfG5IZNFij^aW264.OA07+J+"E"FE9)F,4M
%4@n2L>f]Z.Wq*)u#FuC+I0:ELfQ8RS'brfj2kNPO3uA+:NY6La2As**JfUTHON#WOm#^*sM5R4X#@inLc858W\4i7lhULkmJZ8du
%aI.>pMA]p]ea$%@.4=!%l`=faC8P<m@a?i1;m3NH+c*S<W7R_.[*!%HFnd*OJN!$ZfH&K?Cta$=BiP+E'X%VJ,,2Z[G$SpepSM6*
%G)X0B)0t[]3Lk5*_TeqC?klU[YRB!tbS8IcYp=*aqb.A-F!u@?2Mbt8'Y$9Jb/p3ur1<3"i>$WOa"[u0W<T#q?G[gIC]a348Y?hG
%Y@)o'/$[[N]C41=99tcL89+rp_K@-QZh,E@E1NcbLh=lXl9RZ[;cdSJFl[/'aOW@tS>%$Hlc@h=`FH&T#=ERj0%G(0O>A5@9MMu+
%7VhXT7%3DlOl;^%,q<,S!i6d&b1>63"V\Le*Aa;S-sL>R3qcge%TTAq<>VfJ9O^\TTPfk61Ac5A>fS,$'Z2>(-T'$sGpe9534%'E
%4kk2m]#Y$5VH[^/A<J1;DOmV20<`IJ=aH_(m8R7#Rb3RDR*!q<65noj[LOYi&__-.Fd?bH5-;oW_6aTCk3r+4Q=M5sYK59t7Ob-1
%[>lR;CqHiR#Njh<+oI44SS\u;?+%t@7Ni;;C7U>R""%Z\FXSU#d8fL/;HrEUeN/p#HbrIa%Q4Jn8%NFU8i2r*<U22-NeT=8Dr=:!
%,;dq39D=is/#m_Ggsj*5Wc]_pU/.YdFX3p)\"9YO=U;It`[m!"Ts@R<F4!%!,]r*kd5inC8@n)\FYG529JfhQZfIo'nu,`)5r;u7
%i06X=-jf1k*Q)iu;/N]n>)*aL]P4*_QK57&XbbQuV%h^!U3/;:8.sH@lR[m+m>>Kr=t6d.9s[SCC?_dfC=](\P_>N<*@]8fm(-dL
%98jo@7a4!K"i?a@*KKtio]qrgKEJk9/"1T7Jd!B:RW[8tL.Fm!eZ?*AIEsF,FXR\WNf%u1;.jYYXKuG?[;eX>cB>%cKi,&aos_p$
%;6UN>2'NYl's(n"=6:i3`tA`L2o.P@^rJ,FXFiZASB?m+@'Y$!+MH*#YR\YE4a4k+lP8:FMKK[i_[J>i.FqXJ-;kfulYu9&.UJIC
%j#*KYS4hF9"=CPoB"GqM%^1J)Sq,"WM/P2h3h-O&A>Ug,g#+17Z7FL/no,qfU0*1l:#0Y5RWY"I!E=MhbrQPs!b,*1_g7EWC:mK@
%#>9nEB?jKB:oo+W<NSWF.%3*F3\iA;dk[,h6`ip(hIPs!0P7uDAa=Rn$6&ZSIorS4&tVtR3]r>eGVdl2FMJG)iM3Dq>U%:uf2V'P
%CsMCHC)op%A;3sh:,'R_Z]:LW]ob+q3Xg0%;lF:K3V41X4O^CLVT-EEY$"99N(Tg=Zd(=Z2n9[J3`,'F8f]h73qTT].F'd9Ci1_I
%9sbD>8sETpXTNr@IGhYL*GV_AG,e^N`WAHbRVn[p"h;(:>A&k7??Y-c1)Afleog:dDZgaP>dk2d8`FdCFR&r!M>gW+XeVft\aX4B
%Fj.I*'Nihd_^k#Bc7?JK6i\ZTeTC+*3Y=5^Np1D..h.N,DB0-<7lJ#W>6c.'>#8M6Nd:D!&teF>+`!^Jm]Kb!*%FA[GW";<a$a'Q
%FcEtTJ=Qs>2q^5;QrB6Dldeoa,""h>VH\gbJZ>2YSL%p;#'M1YN-mHB`tdPo)T!Zm;7Op"$1?7j>\D0o#Kps2>US_OC$AU,N]IVS
%Y%PUojL_7_GS@5)*_6:0$.k;L4DRc,B>OY_kU:?%K^2H$$Ci_R-RnW)rMIGSNd26#!#;X]M$%e4k/)9%7'N+%.OGG4Nn&!`Fo;#6
%^RY\_;9'mjGndDk@QVWT9XkS3@_nNr$J1Ce-u'6hd!`eJ6FjasE#iYI8.sR.lU^/,D:U%=8%Kmir)C1d=ppQ%D9@"FbG!()PHI89
%P,K'iV<aN'2RlVp%YJ%X(h_!6'HlB/C!(QrP5V=aa'5BNWa&'.*aojbjZ6;!M'U\P\IQT4$?mt)LTkh3nnc0c9F-ffgJkZm?UNDe
%-<qqp+_;LElYm<qgg%;uEU8O&N_R!C0BI=+>DK_6R1qI13bFu2r+WHZjO>LdhfS04-cOCc'<WQ[.u?Z`E#hg8XuP5n4>E!&2A4t0
%ShuqN*BuBAUeV$L7ccZkJ22%4Q0YAO_e?3M>Xp(A``(3Jlc@H#7&#B;Ls30KJlV2!dD-[uMKU!G:RGD9[Hg4V.o4[\<cN\[TTJon
%QQo]N:SBT;3YH24eP3_P3YbRrea'FlqV4cd2T_mS`2L*k?:UP1gAXgZNbUqWN1Hs";7](<ku>?Vl8kd'^_i?uO]aG<YN&c3:r&*2
%g,Srp'N"J6op4H_V`muN\lt4\f)P]d^\],PGkt>,B0er%%ptluIT'Hm;&f2pR?g'%qRKX>ns>D%qW]s<ArZ`Y]DqZtT8l_4UH\\@
%e,F8BnC,.#q8HEJ09>Vk:OZdCUso>9lK#>OnJV>lo\e73lWp"Sn#$un5@49]>5idB]tYVY]Tp7`/j;MpD>h^LIsHD?j4fcme&.q4
%^&PG/P/CXe:L9V7ae8EN4p#?HPh0/I4a13)5.S2&R2]+JE`jD@kJog$]f:>U$gV/G'kRn95C2qpjC7^-D7MC'g8iIYIJ`<q_i'.S
%ETJNAEa*G-[,.j#qXNLgd@\^FrpST&BR\^;=nQkJ\(n9Sg93F&c,K4li@f[@52#RdSXt8M7r>e^Zhj^jlRuR]qbK^8c<e1JHZOS>
%b=g^^kuEpUGF&QcH*t8F:H*(0G@tj?&!-^;Idm3#j27uXBY?QAYE-s>0$\@iY-2coQ+_3F9c:![o5o8MnbTEuQcS'$\Ng)$ragR>
%3r\rA%6%j6[bd0JmFC@soD%Fd<U95D[RP&Gg6bTYi,(F5P!/R7j^rB)_nZ6@]f5)#+8tptL[TYkrs@fm]Br&Wja,\B"S:6oj,4B6
%M6e<(qrmP/q:XNOQh:s:c`UGPm]1?6L>9"2Ierlf:OA]c-bG-sg&6#A:eg_KYKi0c/8)R8521dhHFDT%qR[a7QD<8VZs/Q6bL,a8
%r`G2(]@iY7B_SZ"]5?:rbL,`4*:452O'`po["\,Bm=otd2-16qq\gKVo%H))526U6Ven@\l[6gRo]"eV__(B9jIZ[lD7`*Ik,V59
%$TD=Tm%41"R6;MTIiCd2IC9C>&G'''_qp[ug=gVi$@K-^/'j8_Sc--:F@<.Bg6d?F=026fa:DA1Dm(,^pXQL5-EPNM"IskRkn85g
%qXWjJj3t&iZM-<8HMuGZ*^Y//T%mfH\HuG!h0,ir<F9UoiPEXpQhAC2NI(3mjEU"8)QUUGX^8_(^,WiIf&(f8G^XV:oq7_XmPgbO
%<remX+2!$nk4mm,q8pkpn0'NZ%8RBs?JW82*Y.TB!W'^UlX(-F!<9S;jSf0DbZ2a_Ru<W*+8pMeEL3.O.W6=0T%<h1f74A5"FaJB
%oH)B;LKN!mBb<=@"7YWc=$:9PMnoXKD*Pm;i#c#\%r[@YD#&.F^?bCi:0+ZU0`it1a8W>PF11HHrl71'`=KJ/?+)*[j!l1!=/SX"
%U^d<c%4cr.HfMQhFMF=*_>3W?0<^Bg[Vh+BYXs:hFT1m?2TX'JNSch15MtQ`](J&->90:&i(^\1auq^Y*?:p5qZQ)]OakDRJ%PQt
%R&)LfMit2lN8e:-Kir=fHHd'nH`u;W93QTuEdu7j7^Eo?]sUY9I`(5MI)q3VH1<&]>=hW9LWj<8?=[\4H\`t^nJf5IWtrJ?i]#^;
%^G3C@#MV_^(VfM"2dZF%46//#r5Ns-U(.(@T-++*e(ZfO?QeRHep09Bh9WV_0'BP%>df?-fl'A.-YNJWm-!u8UXRQSqKhd:[>g5s
%55X]uj0OrEMpK\0?@I'@IW0TZ!59H*G2pA]U'pOu_m>OWSM\NhD)o!UVm[-&eFr]Xh*4Xf^:6m\k6'F3#QJlClKuS/Rq:?i@^#K?
%`ugl%GA_jl8DA%/Uu"$@[>-`5^Q]DQ'0)[MTkM`,q']=8c>R8&]p"/_jbBlq@'tR>h(R&K\[F`*W2[2IYCS3Bc[Vs!m!!S&hf,pY
%2PoWMk*JlN4)!3_`.X,PH8bre]@TQ.e]p9a0V\e-=tl_lNu9B5,aa\q8;*!=b\4hO(<i`%^]cMt0V\e-g1a@_aYiJ?-BPH>?QTXK
%[3.p`'o8@eG:3?ue``#iQ#.&gp$/_=n1J.SC?4h#-J$oNa+(e*L=+#5DsPct>4pJcG\=85p)CJuMnPT?nefg)T3@-HVH_TgXm[@W
%NjTF!m,CXA.:L3HZe4`!Yi:5H[.cjeZ#sZ3%tI,u@B4X'2V\sM`Q@Yh2[@B))VgBp;gaNl'd(<Tpa"L^*murQfUR,!&R4tK*>qcL
%]JhGo:(P#u/hBcllBumqJ\Eft]d&0Y[e8Ys#,d0kl/;bO(Wq?MPRt*8.+LXfE(-P1/\8A6Bu/CcrUf79.0hW!?.Zl/XoL+6'Z/Z!
%^j:9_&E_.FeJ>XNL<J'^QU%>AgjfEEIe<1Sh!:0cpt_7<5Fn=8h7,.$i`5:f_Tjf=[,,'c[V8.S:\[m%RIkD^SfAaLj0Llt3dZ9o
%G^T&9^R>&fn!UprSV6_352:M2U;u1,flSRSq;pPrffrj1aF)^o5P!`*p:Wj^4ih[<!GnbXGY$<o0X?+/#p['4T\`D_Lu3@qn<,N3
%m1Ht7V<m..q/k:frqXb2;f*>VP_CZ"LVDF$-VO9>bdebH)Ad2W6a>bh)sH6j@(2C#]C"ErX6IC2B]n2k!q8S=Df6j$pq]\<-OAZa
%q7f"s^4/+(eqXKR5DGG2ao?cKgi:I9]l%oES]Jr"a(`Zqh<@Z(0r?pY#b0k;s1<UsjHBPTm#?5%2a4YIhdp_Ri4X,%s1MLS`.Q)4
%hC]?6"8jnb]<U1O&+/2el<iD>s7l<Kkk%Kam9TLgnsYP9%aGRp0+Lak3]l1ZbgJ"]%iE8a'!/fe,]7u/5CNFolT/^.h)$L-lcubL
%`E+#Oj2%4[5Finphm^"g2b`&^2r"%bX]0bWD/V%e0+NL-bON]O?gRFO4$IEF8P#'A^B^EOEd%HD6+u^+[*hIXPeXf4M;)=SRtf3X
%X2COVs1@W)]k#=RD(WBcD<o"Rq>8mRr`ndak*d->S]gML/0l<qIC.Fs*R#U03&5Z"qJ8bUna%]D90Ct;I<m!r&e>Kdh>'\:og@bH
%:HL^g;hs+[J"CunZ$RldmCjnZL*F>D/F"61#<od+]+;iII_`4sNTme:*;01fVsXK7K@Vt;W4B/WOT-us#H)KhH70!A5J93Cr-!iC
%o&f/h`PIU>hZ>G9cWHD2\,ulYm;3eMT2ki\a#XFXT9hk;\-CW8hD9M>DO<RoL=mdjAp2cBZ\PbLTAnPkDq2r)e+*7/nJcied)X%9
%IbY%jnUMkO4suD=Vh^g,+#rnt`/*83jRQ]Rr(c8amsG/okPrHAaj0=En'a"\qWk6Yh3Rru&r59r8%7GB\k-dflRci$?>[tPO'ceK
%1UR,3BWY>TZ`,U#qZH1?BBib/7)bt5:J%pd+:o8drF6,-*!KcLi8fA2'GXV:.USIAZV:e.-S#LGh8MH.T!\/UqDg"Yl1(g,SN`NK
%S8FXl\"C,=N1=0/o?PZgD;("e]4RkaX"AUBZcDV@>,84MSpQBuH$]jY<OKt%%aI#?3=\g`H19RsS'u/%am+>?D0sJ"S0,F*qfUYK
%#-%<2A,:=TZ0Igcl8GULpVu&LDoVW%I!p*UnbK%\lM1#5d8.f\gLlG6e:6if*Zi%Dp%IG^S'+Md'rTf(e[4VBbrRsH3W/I7AdI@m
%I)4:,K5HfGN`BH`<\If$?Q<E5o5D<g]KS@.H@Yusp\QsY5K+VZ9dQWZ6(D@nTpQ&t;8.*RC[5>;aa8Cd(As?i\2Yh-']80KGFhGC
%m17!FpKhA&/hg=q'jD+ST`STWp3s52Vtu`#LJAp_'`EfNmJ()4L4eXms2hQgA7(Z5-f11$iOeW#61X$$_1.(4@G;g&/'B^2*m^A2
%[eJ_%cadn:ki8:V?_3h'roNM-m,o;uTT;'OC"LG4n&EM"H$g&&^(j:jN].uk4FXo9!P@_aL0!J-YS:Q#b=7f5((A%c&Qo_g-j4'`
%q3I:a=o%Jnj\*e>pRWnm[X7H4YC)DlS@-^\X[S^q?TiG'g%s'/[[mQDf%/Sp%jY@T81Jd.Qf$KoR$Cgg)_0_%S/q(4LA.QJ6ID0;
%45hepEAgT]fmY_0=`jXU_e-C`BZC)-f.#e*`G_72m*6o8s6Ut/PI2.Kp2X_CTZ4B$R]]FlKmZb^^3r&b[bJ6hFRM%9E).t>:J7C.
%G?48F+;jPZXoO@[klX]X7==`r9kAP(Cl8AZU-Q<=S)U/-qG'<6LVPP8?m,!64M"`IcSh%Y*s1qT:PKW84=OI8mC25LBX,!1_![*r
%b?:[Y8eM3T6[th`#3Gc8"GXBMjRC(<F0CpTTZ==./b)+#GV$A:GbAoOi@aXc3u1Jq_uoDLAAA.hTZ8Cf[pT2?_>kWX??3j`FqEWh
%=[:n_N]K7AMHP0QQF#<5/2taTmB3O\HTJ3E483JMX'P`gaqHb8D7pD%=`('2o&Zs]Rp5N;%ufVO[[bn)\SjFX1l>)JH0Z:0m7+4g
%0284D&$UD%hTc^m>p/iI&<5L51q##7oKM$Lk"P^i2`5Zg4T0JD1dI7J"Oae1Ie[b%5.<ulD\dfsKcg;bQFnNmm_Mu:KctnLkIN#S
%P&$Z=WG_U8\XugVdg=*<b.3I=>V#i/Ao0WmV'N^$3Bn3&l#PWbc?m0BhV1&%[cPGOBp5tG)S3<ihmOK4*;Gg%hf@Z0ZlR>@D`R=S
%p^q4#nEo0'g49@`[LqZ`_"TeuI#gX.A&HEoFc5E(A?2>/d.IL\.PA"S\(^?G\#qE6CZ1HfE>dO-J`e)?Z)=mPm0_:M/7+Ben_3f_
%Q]2fa>tC@<2"ft`PMdm7.a.:h8(;l5\h"o1qu/F=Hdjr[ZZ[K;HK48(onE.Sk53^go6^1IDB"YkRV-]r+):=^?F0HTIf/@$ahcr`
%X/".%0+VCXn.)hqEkMhm9cH0.\%h1_LMunNloNlB<*/HJ^V0F(i:Q[*jL_1NUVi'eqg[8,qeN>-X6of9S[S"AD0q=^Cu:`,jbgK0
%']6R4:=72:q3M?Z\f68%*qb*IeTFT6A4N2-,9*!:SUB%D2O`<7s0oK2:HSI:Q5eTtGNV'TeubP@g1e#Z"Q(0EGlWl.=Ubj9O'c1P
%eaLH1HM4k/`i/@[G<S6<[A!V/gG(.YnS1-lhE4>Ip_['aanLO9^V.R7qXNe49p\JYm=o;F03Kk[%aI!BSN-H._/J(G:p9]KA2uh6
%fb?S53r5Icj2P!ae].7I^1,VOC"4f6r9gV&/$2ohjPf(P=)Y;4q;*#(45KU3RoXsF=nTjVpuU2RoMIOrl^T":CmuScXSUY[HMR.,
%iqV+7)g-Tt+E6'WX4R;^46o1/_d*P+h=qPcp#FeT*<N\J2=@)hFmBCn:Rm&[dg:O!,U-*W":ON/=gYV$U6\?7%kJ@Tn0pc"Ck(EW
%YPJ1I,#R^8_=3.ZD2C],d]k3U:EgQcqqKDE`1fAbI:nC*=^k6O,SjtGkKbFijb&CY3IJ-;./&M<U28`P\Z_QIM+-)PHho19Bstd\
%h:M:$]JQ*"Uc7km/D=5c:usjG!PW5Y?1B5Ln"*n#`8t?82s')fi(^\1b$>W"5'o%OA_WRF\ke&Jqa;82T5FV7g`+9W\."Sj)WH66
%:sh&rhM#X'L"1-N211KKGmBR%mt$A]kko0gl>\RVD;B2QCEBL2!->ZKq^A8J>gW(0X-,"Ah6PBZ$f0qQ?!8#T>:t$Pm\tD4k^N8]
%J%+Qq5G#UU$QdJ8MLP?cm.?cNl\es:B@!s_3V(t&J,/l7Y?n^$n;lK*p?K])PM.>?BB-_P[1@;cicBqKhs'kWS%V%6r/o\0gHRq%
%k\^3HZhH?VbGpoqDnk8_s',NrhmMgCHe.P3\bD`rAbKH]]DqTl`udH;A[$O7`aM+"]u'6SP^T/.f*Z;MF7k$hc$hm&;^Ng`ejJ:=
%^KnHoq@publ$MIrmj[XDitZt!oI3tlhp[%82&W%7C--.UMiU)KrZaHhrpTY9=Ns)+lR<%tbIsN&%?B^5FRJmMccj*Xei:-Op3eKp
%^:s=#IP<)Wg7.Zjcg,67DEjBDq>4=l_)LhP'LI4r.f7'D[.h4Vkte7ooB6$6rsPHTf,)0C$u*fU+)\%GY5`90.Do!^&OSBB_*<Zb
%1B*D@rU>"!D[669eUE]XL/&RZb#22g-R7G\#4L;bFQ*[7c!Tk(l.rfIV0-2EkDM5<p_`sFrRA0cj`c&0Inec^hQ8YNor_Br$")`a
%8Se5`!)rS[MXX:mcV4!pmJ#\$?L$QVC'.9"Y%(ip*45+GYh8s,qVTc6j`g/Br0k9D]N].%lht;DMD+bLs4:UBrogO@q#:!Xj,_XF
%-bnR9g])JC)(4k83d^CNLAbY!WfOLZNC+$KSQ"0b`NVGpIdtGKj&ujsP[PR-Bp#O8==-craT5b/D/K<S?^;3@oUdn8okF9CTtR]0
%Y*I(Ucd6E.$amu8B(CDj4ABs=%Q<h8_gX>1V`MoCr\+cOo5G\fYn+4`0Fb?SHoMVqp/(\,X'Caha]o,&HVkT4b8,XCIU=Ij21rk1
%J!T-/cS=#t^__CNeKr#.rKoAfJDZEZA)$F`i9H5;g`MF$GuuS^:aoTrHgRuL^XWj/l\Z9A]f4H0H5eNP\$k']Ms1r!^3-UF4[4>o
%pHH@bHUHGp[bsN,ZsRHrja6kKp/c@.fe9Z@AplXG^(l@800dIcY;7Xr%$2+f+A7=smo&IO-RM#nfM=6t[_NEA@if"),otnuAIQ5F
%<moJe]i^[F[G`hVNpE5/6O6qL0FK5nOSh4W@lDUc)P!)O'SC6e/]V^BgE&sZW[2sYSMMUsY^X9M3(HSV<3G79'qHO,ll58pkiTHX
%AAbh)V#=i7etUO70OF4M_eY"3Ch7a&e3S\+*+XE'qmJ,pIXN3f4jKDjSm^lb")@2f=0F^21Rm\mcdLWp^O@3I,[\16e^]rF\:,<S
%U+ft'%[Z'Vl3oEh[hdIDkqIS4f06t:CLc(Bm'9O@O1MR?`piGGW)hosg^O,:%n<[!fO&u\O>_H4qJu&L0*e\Ap0O;(L@O_]J>r:\
%PtS_n0tf2Dkgu[8XKmmuW*jF5XbXLUb'r!#SVabnK.P'*UU#o$DG7^:k\jTHCWAN/I(uJ;"<4n:ehtD@-jrJs02CY&*?f]Ao;H!^
%/I&=ET@R#)06-l3Eo_S:8+lCSGgPIH;DZC3<Ca7:,?-@00s4.)L"\p]CV5jhD)>[>es#;$[o0*:Hd+CiS47XN_0!ROWjStPNTEhC
%CU9rte^_CpJssBPK<s:(51J-[=^;Yl/nArdZX\BclWDt80o$agDSeN>"1DT#^Z<\O!lSNG?_boBC5^U(?oYpY9:t,8V(pKUK%<59
%7Z)>%XR60LN:hM9d/FKdf6.O7FT]Ig@.o&8O]SS?1_[4HWEH_sXc`GjisLdI2GQW(\P]Ko?CkoBB6bL=eIn78F'R=:U.)urY9^je
%0ro3l/$rYlrE$b>IM(u[Z_A)&[]VOD:Ms^*SNY0Yl!%5=ode9N%h.&*Z+[3Qdb%^1ce")P?fqe;')]--"c'[Ie**r-nuGeh2e=N[
%FZkfk@BuA9=,JO\38F;Jg8!AkI[6kH.e'sX%.2\D>DMIcU9VN:08cl"/^i1Dp8F7ci;TfJJlh!_;,8<u#@nUhn\o81:5d,)c!F>\
%]lo.3MQr083`&O.+N=XW&UL^s=`-'6Xf+Bum59&8DUN1g9Nril-D-\!?]!f!X.AA(MV>C;?@t7MU3t\:CGK+XVtK\*X_9mFp_oPb
%f+h$;\Fp*HU%`:Q@[l,AjU6*6:Q)NPq;#@5J(FI8/3NL15qbY/D%JoP!e.8i:58]E8b/$.1#%(j^Esu\_cfp-^.CL=Dk%VtQ"Tbs
%f,p7Bi%B-W0ma#r_:AM2m!/hOU[39Y.0H4U4[\pcc=+q+$`k.S0o=khMaOnPMjOD*ek^aDM^N"Un2T.JFuC>qa8Kbf)BKc/_Ym^u
%gB<TbTl9I^C(c2_gI?@jC=](CF'C:"f#uQ,@-fCZXP;FT^IUM1g*k]EX^gPs4SS4ocaL18\$ItIMcp)1a0^3&?[_0rlbE:]WQp]<
%=,Hus8a@q3R.3W]=mK]he$lLZl>Ndo:<</*,.;^g<usH(Fo&1QqKXFBRFkeJrnQ)J>/J`8%\rD;INM:VQa@(P51K3rD,StSXKFU8
%qhAgCL@(I`RC#k(C$?RbkaU5+W'+pD"7G8S54mAYo_ls-n)[_:N2B!M,La"@m9+jG.]+lZI;nA`Feu@8gXao!HdfI,=]'OsoF4jQ
%Ai"jfeBUb&V!M9!HsGF6Aju)ij5QO)p>MofO:A6aCWEd[]L^&VT>!U7Ve_0%Dk)9YEH&T0MhhuSAbrg1%?mNp=8D(cS.*ne`0Cr_
%,?c-YX0RECQf^]((V.YDSj-u\Z)4k(rL3ArHs3aFp8KbEOEjqYP'q)XEVe\p78O>?OEQfLlJ;MPJT4u]HpYKN[=asgm$D%(H501_
%pHF"SG'63F+F\D0YG7;"Nm<,83kQ#Jc2Vj(qXS/;/@Z=6kg/hW**c_gSY,oOo\dcRUHcLVI]5N.hu2J&BVJl,YLdFM(Op.*Zet]m
%f<>#Dki^tb(Zu3nT3Q*Z?7>UKq@DpmT72-/E$Etaq"*ha_fmKKLI^5B*h44BrqtsNj-Tf/kdU8Qlh`u:nW/.0G""V.NrCg,EaA)-
%b5V8Xi;fqYS(%*lAT<GNr%78`?[%(tTDBf&_Sn=>GfCNFfSAW-j4S28)-cWgmEIb&HTU@!e"7:l=P1\6Afo/7G(jSn3cA,7?E&$.
%DqK#s2sf,aI=CMVMDkqo!52g;gljZJD!VU(Q[?V\;QP2^@"rO=)s2)-%C<P;L4t!IL8F$u.bD2,Ed(.[4*ne(T'2O3f=8`VR8S62
%R(1&jrOpNqrEf9:!Z-7SM##"7p)Y80F.#PB/0;(8,PKD(Z+'2['WWbC"CR@!rH);V_MV>P/TP=XPWAf]LkjB2X#>V?G#F!qUokA[
%m=?MU1SQmNTKa@8B4@nKTu5@Pj2A#<<umZ,E4N^>HRh/iQLZ<!R!QN(.tr,UebRnbTjD("7?b^5XD]Rhr;:\@W7=rSG`9R7lMO5@
%+>6p+I#7u7e6XjCT2lN@YML.S<hk-05SLA>1XXm@_Nh]ljfZl9fr0Gk@U4^5VB/T.gO*)6lpZ\)`6l"X^s%'](=i0R%u>/e`MZN;
%M`%gOg[;`U]71#AI6]oWJG6HMWYKL[Jfj^pN-dhQd1h;[McdIFkD%fj]![=:0(X57c`Wu82a-R(ohWIt?dB[X5kT?+FZ$tD>$!GS
%6/BQ&F`3c`;ZfeN8\`/G'0+?IQGn]EG!F`i>$#44_gZB^^\M*aDDX<bbI=eMBGn#M=EVrgr>2KeDq'0_>-NqNHhE<IXi/aUFSW=`
%YF,0Ha_/6U\^,2CY'dumD8j03*gj-hRsABG_f[B:V3B(hT2%a\3[[A!d&0_'*N$"U)d1Di)^cpK%5)jSgA&2*MjXCFN\s<oC_\RR
%*(,KRJS/M!/W*2"TQ@p.k&eFTX.p=qH<s]DLeW;#lK*/<2d)`fKu9nggfEFG:pqY`gM(@pB"_<59H^aZ:@S1iA-1erD8?TBU>ZLl
%SQdOJWS:N]f<eeWY)[Y$Q(=g*RCZ%moiPQV#P%94A^@bD&JipkkLar;Ho51cD/K.9"883S@,aqJP>LFh.I+?75)u:8>>F1R8m"#o
%3Pg9mp>mRnjeNqkNLp?gX?9gX0f:a&=T"#niden05iXRo@IZEL_8@s3$A>a5'amf!K8$3\/6j\fDqIE%ibmoknV4q1,$m?K=R!mm
%4*$(8O4R),Ejt'/H!+idR5AdgQ&jN[5.nOabBP=s`3!G0qqXn0aWtRT'C4;])*;a4HPK!<Q`WU=$?t808f%nJK[R%BOV9uC\bUC:
%JZAUfLoQg-:j(YlFar#9qA$3i(9!f_#1^m3.41QFX.Xdo>)Gna4fIde%B?=Q"k@t&7r/1uYRYOq<`a?*dNlfM.CecojnBBe%m@s$
%6&52_n+0buQUrM\bQUtT$`O%GTXq`D<-LD*W]0\ImXXTU._^o&n]gj;Rt0e7iS3H4:d$a6h2ds"42:C_D;Qe0HAC#%P7?CM;SNi6
%BA<(R4:IEP\-<$N(^)&d<+I4U.I)-7JD&n#i-k,)ZE(agqP%Zs>hsBo4e9),p4_F97Y"`""K-40Mh6G[?Pd/@)m<)oc-L`crUYPO
%=iB"<5/DsSd"B9kem:&Dhnp:afm?[O73,EdqV>Th07_&(!ugC;\sOc@YC-Q#`[mKq:O_dtYndDuLeEEY'&g;fpam),98)1I`$1KQ
%^Epa8M==^nr,r^3=<d[/#f"!0n@JmeOIWp;VJhoS<sAd]`*!]mGGr*Y(E\E(&N0rbS6`aHN84m?f+"EChM/kEL0N/=e6Ec('\kl1
%=D&@/82<59#Xo>`H:;-(="\Ja:BcM44llF(&&Eo.!+BMIjV`[Q9hmO[X[KbmW#>uL5e%iDa"Q0>!F$54D2+-`fH>X")3%#N;fQ,;
%$bP6GMm*ja\Z?k,L7j*R:=aW$2gRpn,/+9O))'\GL/9]<dC9n1G`JI30/Ju82e!9\<3NoB0\o4F_I6nJ[\C>:-FKi4^'UdXcGUK@
%\^FP<=GaL.)8>g@a%B2VC%C&>AHA&lOBk$/q3LVZQb*rI'<en_1XYHR^@d\^hr;a?THT_OF_8t^m=m?.*%sJ;9MCj46Xd*p=j.c4
%Q8?f*4gA@gHKs4U]UdoHkL!kGs(XA&onsSod&?sOI3.$)&*bF`;mMLH\?aV<K4@d`#ik\>P,rk=V,3N^HW7-`(IV0CVH_[&U%=OP
%R38mAegHG2X%#sY$[#h)3881"\NF:e(lE9D\2kH&!NsZN`9cWO_KjDGijt@%gFVB"3tH@pb-?ZMXn:;)-&UtTM5%QiC2@<X+YPP0
%!])G_j+djqhFh8+"$hli%;sZ4XnRJf[iP=0'_^S.\.\LnQbn`Qju2!)DTid(n_N)L$,,aAmhN?PBQ2uCQIr)]p1]A3qEX#ZSW8,%
%i5VYt2\%XREL#?1\64q2.Y&JYU[?tRDM3(C][741\8hFh1T9B&-eL\\3ps2%)r6;P>2,^edLmJaIVX\*k*J%mL#,Po`iG^%r5toK
%E(nib!KMj,,d/q$a$=iNVoBXZS)@!^nOAk!VpX$*mFo(T_+A6]25u<c018W?WT15GbI)B*mnuaePd*g-UL8-J]"AHN=;oD8]`HJL
%/[ha!7iZ<D:2DILHto4.+Y!n'8%)VNSCag.,O)inS[o<n1ajk1C&'CIZ<P/*[hp:=IKMX>B9?*UXl=c&S'BJc.q?.G/?ucX??*4X
%@bJl%\`K$Ihr;b#LStul&*kGhkUlro2TFNA;B6ClAjrj[[neUui5uhr>'=Ni:+ClNOD?B?r)brY@Zth?IQhF.Bo<=.^`YmMrOWpA
%`34_:^M%bg$^k#m)G]*Ag3+=-QtOqt#ph%5(1^(:-9jP4<]2$mXVg27T[CVeINsQsci]R!AUS`'6V27Z]E0+?p*g,WDK2)PUC8p@
%0>FqJ-e78g1B@<L#=#uBK,)-rpPE6]1W?QnCLkVkV];'c;b5XnIU13K8J1K.#Zn+af^\;$SrR.k-'gE_0<)Z=WHD\G$(41g;NZ;Z
%+ACUqg6,Xc3m$HJ_V4eEqf(l_nCaVmL9$MO&0);##D<gng6f+?p1[pbO^b5eFmWFBUois^PP8:$0l\-%ca1KR8r_r?-8>qR_U,`C
%Z?[9!p"!1tH4NJ&%0:(]PU8mb>u$9mmpEHF\VQ%D^k\`7X&6e>Tt-O,c71rB_ZLHlm>66OM%]/*F_Jr)GS"oaa4Q[klr)1uq4_`'
%D)nTMC)E-%,._kA(gHU;Q(%C*-itmhbU?=:Duf[_C-1mj`<#J%2umb+n/he-NFar6"nuACrrr/s!-/$->45)MJ!&;dV"GL;]gZ+C
%Ok*a4obQ?_d[*-+mXJNn1RE+P@@"(AU/4J\Ag8hb:h1Au1MjRdA@kl!!K^T'JjlPi0k#CcQ8Ar=4R6_3du8&"!4e"-%3eQT?aB1<
%^grc9+;[,^goMa.[-L=)Z8s]OniDF./J'&@Cn^+8*\c8l/L9j1[t-S=4#9TGic4`=')YB3YS,J7cT:(pc5'/Xg5I]0C;Ol1q9GBS
%94d.l'3@d?8@*3L:-nWcbiVZWa7>t/C/QQajAL[2mI,@hCs@ogD!hJG7n4^O79k\Z28DnC)U)!DJCWtaf;,';jt;K@I2s%IaqJ9;
%EJG\cTVFYIi*I;.bkOK?*$RV&*RE"TrfZS@QgM82/<,@;ZN>rEeB<F)O+jFu4sO=13_5nMFKt@^%7rDZlPK+mQXeZi_WQeEZ5sVC
%]HER1lA/MN2FIIm@qNK`TqTP0A0HnV$&WOR&cr=nlRpR?m"[J;0g+`sD[m)tTK3Lb\2]"Peos1#gHGB./Y7n->GnF7dqjN*9LpKj
%W^/(M3D:+k>F`;E*G"Q;Y-!rKr9ma#e9PS:"J0pNR&hM'?\!>F_E/Kf2H!L67BrR(-/&g6G6q;e7GJ.b,1/_YM7PTUe".E\YQ:W\
%U/$>%V>B.5koBHFa)M@16P^-W]$*-Z5X8uJ$'IVM;D1fH-VD>QIQ2tGVCjYa7qGt'L>7C%UEH*pmBJpP'@`c,9Q'U"SB=k9^kWmP
%Pu5&?pqFmABR*lpMOQ4@J5(fe>UVqD1!(-:D>]k1IWOb],/OLP]B5lqg$-a!>T&;+$*L=f?4;3Pm4WC66sq*e[oj&RT-Ug2\qMEM
%*79"`kqBE<oil.k495:Ug.Fl\CK[+,4Zm>#Zt0Ge*pRF@*Lu2qK;c9ER+0c4\2J^P?+%t9K<:FeFa6\o`nqRZMl2L_6_VX0%;.@5
%:S'DOHq3B\k=DrKX'>]bVffN&QoX0]mp#maosu%/S7];&jK1@lcO[hD)5[se\.!u'J&]bOCX*'<QL\ZE0Y0qs4Sejm,(4A4Ss/nC
%;<kSOG*KSiHe,o(n`i]pB:sBo`!!W:,H)g<Z`8uRF^BX&2kp&j'/Y'ieK^kAgZfL$?>7!ChDZsrH\?aU!o\$1h\>%0.hMGsNiq<q
%Gm3BF(ZJ5'08$sA,Q;N3pEemmEB]hh./<Z*=bX_p^B=m&Q\+0TL,Q^q(g[o?p/f1sY@>q*`5899dQC92$&+-=Kng6HJ+o9n^[4Yt
%#KK=Mapijh3-Yp7i8DjQ2oWU]oDM@&nE@$j_:)sTGZY"9_W;&0=Fou$$AKAK_=2gi(`k=t_rKit\/m<cE-Snr%F8H%Omn^Rd]pX:
%8qK!WV6Ah&&2_&kDIe*2+T+s;>t;f9Gcep#O0fl%;<$R!E]cIdi8K)#RtBYKol>qKpPW,3n[&de@puk]*Z#@M.Qi/5dgI#'"B`l&
%Eq'LlQ5=YQ"=%8&diQ86N')H@Wr_Yqkj5L(X7HH=0+(c*Y2GI)"X>Z0,G.6^n,1Jo[s]VInu0pn4VECIb'[o(G*-,VMX!k?NninQ
%^%-p);j.HY3dH>%E4T:E#HC%[Jja4,SI%-2WA;(2'N#ZR,lt^?.F52FMGSfB4/Mor"Jfe`B:e@3k@*?Y(rRhnrYi2X(R4!opcc%T
%IC_q!QXmp(=rcB^`8<0!aF]C&fZ8Z(/D/$qN@``'JrM>6aF]C&fZ8Z(/D/%G=A!WBjr#G/XTd<M")f*<0P)9L2pq\&/1",XU5>_b
%oi"Au2<(5#HQut_*$+SBkQ>=+G)9#lUe.)N,?I"hq3=`QF<n'QDT?JSj>?7oS>L9s-*I6Y^Wu(CYuBl-baKiE`->#>bb+J(b,8M$
%3EOqoG9H+nc>.^rMuh'Q9Pe+7pPe.BqFe$A<7s*V&=9U"TU[C=8t>hGfD)#^>.S*B*s-%Cfj,i-51(rBUJ&nrOu)q8k):otOUG7O
%_A0V#74qi-$WlE+'tNCa5),TTlTlVg1,b\W/F#"XY[,N;+\R)9i[#O!1=VNg.X?"MJ[@&X]VpN(pM,Q7<AbK8f,M$]8f#M5b*ofW
%S5:ZAN_GGRCFY4OC2T.Z&n4qn-i5qA64uAVm^aEpnga*YEjAq*GXo1qYr,1?(#SEi_Dd0b:F'JM*Q]$jo6F$n)/?QaaY/e>UZ*0!
%d$LVNdDRhU@4p!#aES^We?sb>"`%_G:5;/&p$TY%!X[E!Q#Mu(Np#Z1J&^8.m8'7-Z:bWe"!SE%<>U"09-kCaool$*k/h:ZE%;t^
%SB7j7h`nT8e(DYe=Wg!nP&6XUBI6;'f/$hoFP]Vu&6j[\M)J$8F\T"sCDbLtibIq8jG%:-kf07gKkPO($UL!@OS["BV>?#f>MB_`
%NUobk(:*)=6#F.\q3f:.UaN64S!@J\"sS)!S*ApIB8armD/drj2:[ICO&DER%$N^E1u9)(Bdq#q]$%(_1fDUf,:UR]J:h\k4&04%
%0Br.el,e>E0@;u=kDFQQ96TB(-$d!dCWn^"9(09ka`_>rb<?t`>%s`Ip:NXbTUT0o.4ga9WA^'l02p@haPh1.,-X`Fq&ig"o)p&S
%bp5kJT=hbD%)=2qccl)<I/02r)D;nRXV<N?ST">\en0([#[&+R;Vs>Kmet-r$Y;^OCXneqb#LD=WEQ5pW+RbDJP7_?Z>m1s%,u+U
%.Ukb']*r=g+"%49m)!f+S9UZ`ee]&/;;d5`7u!U1N:&e8l2V1"3_Wcb9jgTY"m44KPt&8C*sU=7amZO8Gmg5!KOq!q*)c%l2@#A*
%5NKiVl38dM=']$k<geF4_fp@po:$iGR1]&UReG>pVWbr&gU<+d.T*BQH/#'O*4]XKC0Pd3o^\P]`C-V*3dde7(:5Y398i8WcD>I,
%KB,s(@G@OB![iASKH"0?WlHhh-1ie#XtKBheU9l7M[mU++T&SsWkmmM-0r9.7&=52Fl@*4W:+hlFX"WhBIosMX0hjV$uOk0*?+KL
%lJCu'%nmc5c/ZClc&*j]*RQXd3*d819cAj]NHbqP&h75NGMA_SLDk7dN.',iTe7:]DboE4FgVN)W'$I!eJ^>J)DjZ?eF%$H)#F6m
%-%TC)%MtB13+Sis*r>k8*t'8o?$K!!T<R267e/7)X](C)kh_2'W)#*qK,QDG917O-P&N\-T$oSG$YJM76+P8A>jXd&T)^m)DG^#7
%@f,.Dq\1RX;f2u,PI0osoIY@Mj<H!/LRtYjK>Oc>=N@4s>,Z:3qr0l0?CT[R<Q@oEbmMf,Wg`rJN8M25:SeF0U5DG+P_MADg\ta&
%U=9DNiA0M-/nqP)a%2c*>WZA;-(c]]51hT<J$&/XOQTD+jh[t51%bDNoXIL31(I;9e./GS<qLRs@c'qsR,Ps0\>n<_KK3]D3)&U9
%MJd$$BW:;i,P=LE6C1klq\(BcD;Ut+hk03'/1U(RqYjH0k_?O`c%j-o'HnME#GrM`P\lchDmnXHF.3*"+JX\`pJ.jE1tK>;JcAK'
%mqhNb/\\R1GII:l(>mg)4+"F2c5,<ji]C@lB8c4p7t#$:&,d8?>_\(ZfO4DR-rUB=pcZSYXSqF;Hb=Cu$[+pbdd1g0KbEj60uR0`
%f:c1l#dR55BU81*NMpms7kZMr!;2f8T3lb'q-o,l/n9#!K(d<m\l72M3n0/Je*lRqp[mX^:S'fN_r9S/=5TTTn?>#^e8F'tn*jVL
%Nf=LCS-A"gUI\FV2A3O`oMk[sp8duQQ1J@na$]/3H5Q6Zou:$Y>!f<WkisP6S*5IB<2Tm5=tlWR'3[)`"VY&nT`l*50VJX`=tlWR
%'3[)`h8P$o0rnAD<OZ@:/D))^TK,qp\Od3%Xb;Et,WgnT%+sVt#sJ.3Ug*-`.+)Y<%Y[3C1:lCjW.RY6H6uh1K6Q?]M4uSL19?U$
%fqsp/hB4jh#baDa=sHcE0h+=h(r@sWU6)Mn2&$>4B6hSYmg)ODgs'c*)J3Y[>DaF1ort)M54,=-[idAM0n-lNYohJ#T4W'&qZbgC
%.bW(<._j_rodOcV]e:^$OPFela0,(ao(b\G@f;5!(k[ip$o>8k*C$;4MO[aXH0F@``IiH"[Er*6+bu/"i-lj/,ia(i7.S8^%sq):
%]uD8)kiXi<>$0Ni^bg:u7F$m:e\05Ip-/;&PQsenk(B6uH$l2<?E7M)NB0\tYT?i:JARurVV_&iJ<?M%%Aq##Zog!FlbtNaX+/\6
%MP-&9(JT]+KSB'2/X(3XF\57XjA/PePJSO&SNY>(b6N^SC'8*tli>L7_le;+>2^;BAt)rT/k1em?[6B>S(D%!*c!i$F5!e):,nbe
%P40U$JcBI9RLOWr6Bkf<K.]L:OsmBW-Xkn3d7:Rf7tGkoA^A9Corbmsnrd/Wd&"qn&Y4e&ES)%o<ZWRd<h<uf2PKLYL2SL=7,P%G
%Mg?"lf"MCkXb&J61pg<\j@(;LaD3r87K#\LISlf*#>Z,0<ZPct#TZO<N_$WPOKL^B)LFB>=\GZHdr(S<O+#(lb@3j)BF-l!#sPGo
%O[EL3HL3((2<.3qiU,ZO4n"S=n<[7Ygg)S6T"3il"=AC90[O,[iZPHf*p5S1N?=q+#Ahhp9*2DR9PO\Wf0/6kPtuta$1>O8JF.>T
%hbY!pW;oD_.k*%((iel08]p?j`cfiM]DE_O*":iZQXa=N>GQ%b-6@ZOBWIo0"t8bPkb.6hMb01)=$4(_q(Ot%#'s&<I"WSg1Yj<1
%O(&[MW#):J#09cl-tHQSgc*<AZ=S\b1a:[r%72X%19@?K[CIaVac#]d7C/B8#!ZjWJJcM;]-qDRH)gkp(H9-G;S=_176!=&3KAd]
%f<h1$^?LPYUbOb\:MEkjCQuP^YWVXMd.2TgUpuaVI4:u"0866E_lhgcFdK4;h.[eLhL$"oi,1;NqA;S^fRdFbPIIO+c*S$qRp%R>
%?'a:@4Q=@!WnYO+gXlDR>c=F.(\Z)p7Y%*?,E,==F\ReFqQNom@-&=39mWfen6o!eoYm(eq(mTaP*gT`:X\/m@JuPcIA?8m6P'W<
%p/pB5(8GhXX$\C"Cb7(mcDMI'W1MqfjJfh/?A#M-XR5f,BtMqWiDBDA4i9>-?]@L\JZ_F<#Lm:E3rPVNq(%YHBO;8*1UKgO3Pa<6
%!mUD@<5]47iu[(c&QV*Kj2^^Imd\r]X?&,uV&KA@H7DLi>3Ug'?Mbq%%lJnTftQ/fiuYtd;d.[h`*@N>o`n8.SlQl/FUU0%Wl)r2
%#lE0YW:3qE6$c2%L!sq-P`L6KfeaBZ>"<Y,LdL%(^*\j`"hjVUm[8QHrB4GYkC#*Qqk'Hqo/=>*Lu1FEFa!W+q=3]<IDiI)>##mr
%oIh;9o[RaVXiTD63I+j/qs,@(qrmP/j,ZD"_ooA.O7o0;^O>^shNnJF#<s<$msTW`o'$#G2uR_lrqbX4jQ*fh=g*<851E7*;S2qW
%^$iY@hcF%@H_4"1O8n'lqO`TDNV.ek++o(3q7YArqg4r1TD/5rg7D(uH>5=5l=3&lWg<41q,;p0VhD;J[!:uUg11,&p@e!B]bg8+
%[>Sq8?#--P:2":'G2d_Es'+Zb1d2b%M):e'1"$fH*1*NFAL[*64oA;%Rd.Y/q"4<-q`6@p=IP;.HPg0m1`?HfHYr-Or6=Y4a8\)Q
%s-`fBp%<g\\k&P$E^6!"&i<`:$EmVP#Z<JVcmYc"/%*foOPMK[.LU\mW;m#fo3!oZ`G:aPk.H3[/grk&L'4\tA8t<D'$[FhOtc3?
%GOI,AR[?IU"[D//9_r%lZOR9ds$'Q3mQqY"*KquLqL@rrB&@7H%J%!>#C^megW@j4O$EL5s.#\Zo9@"o)1M.KN>lh4C*,=3"YE8j
%+pa'7PlC"CH_5ae&'igc55jpEea&Eor[;obZnBE!amnrVG<1lciLSt>pm.8S1>a)$VXN'kEUVB&O++r1<a5EK2AjJ`13(p\Ou>@]
%o-^kCVX=@M[3g>Cg\p@EohGDLpnVfaI+O9`C3B72&h0-.`_Z8rs*a][hd%3Aro8afSfbU*5+K@Pm.BDoj,9t@B9.F]E.2fW4)\'J
%eTY=a/,8ca[sp0HOOrHsrIa.^[9$q,f8G\ns41K!3n^?IhS!Ge9Xa>8P>-#1U"*6CjnRhgDfDf6ak,_5?(@Pc6U'eb7]bMDm,Hcp
%_m=+%]Yn1->,sR8l-C_Is)E",4GN]\E]`Sp&hs+VnXJ,X#J\C,hp7no/O%JEd@3)dGC1kTeKME";lZEgEN1le%`Oh=;i2Hs#"ck&
%;>V[U=Q&NF\9aUo93a_u8"FL4P>,:S1;ihNaSKFFZ.9PmLXAtk+2'j!IJN#@Bgccsr;='RBo]N6dp)(Ljg4,uHZX:YWV;acg#%+R
%c/6"eWO'4jqrThcqWGHLITr<9DgStLmItLe%\HL_o%J#SM#DqW%J,_$ZHr5()#*/KGBF6V5H2')@G5$LVEa/U`Z\>XE94O/mUQ<V
%:V"(-f=+-qiO)C*k8AXBN60&g;`H*rM.r%hK1L_X@?O9&/aq:IFBro>q8[V6-:3"F^#mN"+8\g"l*#U5l-7Vp?9MKkZG&0qqoQra
%*`gV4pQ,;rFOc!0oX#49Y&L8?X&s2E(7=otc"58^,$>C3b&(@RPFc9SSC<XhY0bdM>k5).gnrBM:N%l<RA#nY3]VZ^HQ>&8m/MK[
%nbO7Qf<W0Y_#?7$,d3Va[0JsGG1ZVV>P>,Rh61d8JF0[srT]CYA'E"gg>>3>^V2`)j0(tN?b^t;,6/5qB?n,c)]1_%_(4e'nVYm"
%W`8TC+>\#f'+3XWUj%/k*d2)TARO<j^p%=3hP1r)n^d*B;[`=sIc5\++*bulR="k]oq"DIlfdgi.WY^Q"Dk2kJfT555:F`dG8F<6
%cDg.N7dGCBV)EqKmWp)3>>O<1LX,A#;*4p#s#HL=s0_Ut]p=3Y([LJ]%.G\b"Nq^@.6,9W#lCjS"c.M!#o:=&E76uB`!<iQ:!X]!
%%b78AD=]WAdtg18ThEkPLtUV7D?8-L:lk]\!Z>cFnp)pP6>Z@djS#$jT2Wg9<:#]?\JBp=EIl=u,REDIJBWp-i2d/]?BC#>'1A]"
%j;%X/,lOE3'U.rrJh.c7qdJP7qI.4]TChibG?^%(*]Bo"+5c&%Bu.j!",#=3i8YpU^hBc&pl$gG,YjmYO(jD$;#*2S!\W9;1ZVF,
%M`6P%iGQH>3/PMknN\;1UPA%XCc+%hmqLG>#Oc$X&N6#4S8RfsH-[=<A)\U=gjZ9d=(LAWprPsTae^8YAZ]1c[LN>=6Qk171%kYF
%-+\b7kC&\;,lM$9(7t3(r&Yi8&!t@YLMgNmgXX!sT1Z9q"Y%Z'/9.!S@uO-M5gOmmUEs'4)01Yn5W;rs0B%c[9/a<p@\O0d7Y1_f
%\6oC6&I/pqk1W$S?dg$85<b>BJUAHk*itFHor0/>^+"$QAVr"hIPDVf7eQ&In?LP!q(B;@N_JnYif)!04NS_Hg@f=oM#7SJVCp3H
%%'9=G<qcS7qo<d_HV=O8h!YSk%n"1PALuW_=K!88aG.Q47`%n(`SC#t\k/jIEjWbLQk0&6e!H87d$rKV^H"86]!s__DZ'cQf<%t3
%O^%*-)ju7"MR[<2MS/u@n(B":q]AC#^$SN9J+V"ERM4aI;E`dr^)r(%l?D5W_X[N/Hr)o=H[c;=gnkcX2C*LNj8Im7q>&m7*ZR#1
%HMoj3;[[X<)PT#Bm5<*unedne>GI?cHUP7q5q1UG^Nss-:O6;l!-4ehm?2l:I8'J:BCF*sU.Dl/d;oEe*i_I;7*:HK_O84@76se@
%LB7fK7LSF/]DqZ/rN+m[O]=u8%!G_@\%hO)rTr-j+>Yc^`JQM`4h+PU0pMlMb`r^>$=RF$/)9cjA9qe`j?3F+=ek`*<Jko*qEH'K
%HTCW)bJA1G.b1.emn3Bm=@YrK(;ms.Ut@+kO5tnl"ZLOWD]9Eo;18iR49p>V([n)_c/ZF3%*mY9m_mM"<JY[36P:C^@0S=VX$nsF
%(<U)HQR75F^8iL'AUJ'lJ@;kUMAB^[Eqbqc1HNuhf?(R:m.&n2%*h:FLZ*BP,,,2rcNRk"VHk(gU3Mn#\Zd\Ts3bFHAMW9d#MGeC
%P7f`47;H#O6%-@u7;J[FOh%"*@9m"!b[$S33:6l@f+ncKN=+W")0G'HUC@P:dD?$>]u`)2Af,!S2jlS$-j8TcEE0E@B;ONQNjQaR
%F"%;W.^iC@En^A+&&O60Y.::UQ2i-@'e]0@_A:d7_Rb,E/lX:+3mZn*iAdQfblj31b?1GAFEoX^^aK),jt9_=OL_+9QGJKZFH1?C
%Hd*!+:p_ug>>;)5l@A6XE_9Z/`=_nE&]>@r[kBE<:`&\]L94rDWdO\\&\+H"$W`qa:Wuo@G0]dTCO@OIBecH3%]VY7hL5Wno1X8u
%j`ZohbiPC\/50hBhb`X';E;gqDi=1aQfW3I#pbdW.!PrM;Is>0;^cP&X$[C&`a=:!hrlFD>!ZLH:M\hmT(gYS_Bt8bKKX>)!rFM=
%BOtJJpJ*f0IGu)K@f''!'?qn,'LcQe,H]<<-6?VdkoFZP0McanhPr0ZV;uY1nX!`#.\\e/87XK/N,O*>]FlRGB_%GH)Z^S'A=jq8
%S1jX_&kuL#X;_==@/C'>9S;S%Gps)*<]VM-Y^`n&(07>,*GlR4/!QtXDb^e>GJca=G3K)#-8T`m[-(Ou9uKUXi-`m\YKW,#9Xr%%
%Osb=5-Gr$2WGpZ1q)Y=M"&h]VrPVd?cp_EL'SWno!@Z.Yd1fkQ0NI?aOYcHZrnHYc!-8_*$dGR8,1>K\L(?ZG3>e<`AO2%$kkS'&
%?X@Q4Sf7fOC9q<.:\Y5\oXS%4FH1`9.WBJfnf9U+r#Db?hHQZWZp)Tm`h?r6@WUda&t\$<b#lBqrHi2A0g5mF^+`Qb;$<3";[=!%
%Z*fbeRhKUt8-7E^c9:kKG/cQf]i[t%H"*[7,J1:(9c<h$6C:P@$OtGR7]_tq[I9k;_,bfj#sn0S*@*\C(gmNHaoQg#?`U6j"suU>
%E1UuFTA"%s,t8n95$9$@*%sr9!c,.pT4)/^!auaYH7u2i\FPM;<n,Y]&9qeW8B,B/,lRq$]?s49<8h2]jOT_*S`!l!^+*[B\E#N>
%Hsm*b8#YRr83n3'dIn.Q4=oN])E9sS0m!B/=G!j:RP244`e$pXM*)*%9F.G175*H)(LL9D_41K4!HK:%FFhB06fP@^(t72l[07cQ
%)%H.g<I+TO+k_-ML9Y/Z?/E0Zdl]5^4$P#Xmso^]d6d+<S\Hl-^]KBuKnoPh6d.-?3dK,1qE@1SZ.erkHf(krFM@[&n^@I52%2f7
%(S`H;NAAtU<"%fiWIChIZ;+8r,P<.ibfL:`CU0);QbRV8gODeO'i>*=V8D/I+pitt')53<*_einrfFq6Cq4Xo%/s)/.pO$QqcFGn
%;!X:T$Agd/.2+FYP!tbfd0c<:p&8$M^C[mp.!&C\eHODT8+J):Bs+ZDM_Z':+m;A*Y/)4N["7HQ1n%8",;*O37I2:GQJWli97_2J
%*#5f5,QBhKfAL"4pc]]F8Yf0LA-lkbj=K#\JAQ*@X6o_5#(J&af$$9Z-)?$kC9WOg(?lcmkLN&0=PTU&-rT3RrWKPD[d;3\Ze$hO
%ZA:dO#!T:f.<&aUbB8J1B@Xd.jkN-)#o:TKL!A!H)1IIQ)j=YBm1g#9,hSh:1\[6Ws!s50YUh\`Z-g=7Fe-$Lm_)(f.aO4_N`gf\
%(H2%U:Ojos<s5\l^(s@NOtPBg7q/D1@?/iSQRC%*o&P:IC,&A*('dY8<[:kHK_#d7is)>3dPi-RPHIl6I)"rE7JTf8=h<efXsf<2
%,sG8=RRu<(^qc,Pp10V^hpt/d:^T'`=3XWt<#$0&&q/)mWckANpPR^qcpCC=S^4*:g!WRO:=ulWr`\-gKrr7fs7u=kF+6FPj_n_2
%rQjB')0`%gi6ujPJ_"20pij#>-)UNgH9`m(EOcUZ#[)'#oN<%fR[O_Q,sZ_8,s_%2Z?`&cmpGg?W(QS's1LAZqZS<nLL1sKMe_4m
%r^"'@8"/u[C7i[rJqsJ)pR`r>OY"[84jfU9H=IgB4hSVcm[ON/p^m:+FsU%dr0;hB^%lcq3U(pPk4[DeG<:.AF7#_\(H!fMUn7)_
%f)lPrHbSuYJ%_&XerHora"%H%s4Q5]UF2r.&&S$\H/Y!_l)T:tl5)1XJ,d"Oc>iZuc09,T?,)?Sc;AqZG&Zt$e3CI#hiNo']$jgM
%*$,#o<q>]]aT".\DYG5WgYCLcmrlkAaepi(nn@oV5-]E]e>q&H423SUWEY-pe0i5+q(J920C3O`iHX`&X4?C:G'n,pnE\fuiR.Ym
%m5$*da,d(P9&9%,T5OTcS:)"O+9%UNM65RC,c:Q`gn9W>0#(fXr*@+?DXFRTqs(p#\*@Sj:h43gD7d.RpG][m^NUI'rqT9SS+u/d
%@u,6e?Z;Vi&$Z-h*,b]RhrU_jkhY_]AiG2?Utgr=s1#\lR6^i+^NagPGN*PuLFHO$E]X5eY<b<Oh!Aj*hn4WXGeq+->Q:OJPoH[V
%h!\J5aM@hFHSb]0^#eq=D=*CXT]1H8?[pSoBm'H3jNE8&`mJ7>MtGN6]u=:qW;k]@S_hEe<U?/VhZ#IgHFSoKGh]1L8-BShD!tqV
%VpaEWgYVh0ICQr_k@mCD4g.h[B9sdXp@t<NBF"L+p,_$L;R_8[,8FW'cB*MLW75L)O&l#0h=\eArm#u%Tc1!1PB5ICGkSJTdHudX
%(J`_7oYObGG<7s4?8ulri<s;$m&aVLJKA&Y4utYeC:n:'*d,%uIraA$`iIDDrm#MeKZ(YVcT?oOQ[#4Un4PX]PAY3aA*p$$Xes"9
%d.pIUmu]$5:TOBLh*4(?\=QgE;7F5_GgIcW>l0-pg0/D7p(9adiGfc3(>=,mO5&PRNMZT+hULi/1)PSR^NCHu49%<U4C$c)C9MOB
%C`WK%?Z\<ArjmK]Il%O05::Op"PV'pVmH@04F!\h*."HY*q/I![Wc&#%ZY`CCI$0`cS3&6^4,YAYP/R-IlpF4:K!qKcH_XI&]'-D
%d-8j%*V,igWE/K@L&JFQ%dqf&VlNV+L.r&J/n`VT"re-iP^t^Hh*7:pG1s:Ch/<8XTA0ga6?P*L9Y<Q)[l1ue&!bIo&oZ>3[T\;s
%fA>1A*#q&9'-/(ID'*Y^&s"]tI*c3'BUdKBNToJurSIM:S4<%u3+sBFKf\#C4l0nFEG:<M7ZWe9m;*fiL1+<`%oJPZoZ#j(,cn`-
%jf_JYelb)/gJ?JPhHN&T2e^`)F#X'^VR5-r;,/2G#sIXa_Gb(un=[EDqnI9b#;E*ClPnHYAQr/ma7f0'UZ7o9nr##h/s)\(>4[a#
%=?\pajG/`(Rp/9>(<cNs3u!%?ZU>HIF?&;!rVO;1M]Vl\kQI(!/tN?mcIQ="EQB"HVsrW'ViQW^>eC?VoI![J/'+6K'u9D2\.-m7
%=Qo\6fr8,+Y:QB\GI5nna4l#SHF'(90Q=t.1*cWPFFheL3o?n3\alUs3\9P#iNo3JbnWOAR1mXurpb8HIHu-e_>uhr%'\rN9?ZMh
%jm%]o#A8VVZPhY-S\Y!biah2d[lXNF\VkMDhNpJ&\1G,9hHS=]E01+!l?2"=mpD$nefJ2[rBnHb^@kP%"tsZk3(?EUT3qkFhC%m*
%(,Kh\T>9NO45eeAD$,(WF&(iX#3>;Im,0'Em@VnQ^&WHMn7\`=T^6bN;L<<_eOPI>['k.7c*r`,.nlNHBQ2,ec:7\Uk:"[36_I4E
%"k86A83o4JF-/GGl_#!kU1;$sC:rr8hY^oA>R7H5QH[gNb-+tpIiL"+a%8;!4!lkodpYdI&G$n"*3AUl'XCYI*'.la#:0V5<je)S
%+-rY5>n69a7"n8hR9[p?0Qjj6W&T-Viah:,\u=<<_-m`'%(tU';P/8SD7<NNYI31N[a1AI]A>\eFgu5SH!fF\4)1nd*-=.5qeT*Z
%D4B]=anjs=7mCLCqa[,=m&YR+56ie0#A+Kp!F+/?H'l/.mpN<]h@P!XD1@V&fTED[o2h"qXmek.6?S?P&i2cfR$cAdg-,,m)$`q_
%*+5lKe^pPOpYG5fDS*N/\A,:G`Ddjm&#$Vlg@'W0[P(b"g.o*^/Wq:gcb1f1`%&^^JOS(`5<gdq^Tk2q\bu0t"H]s^c[)/g!a&"D
%W`H`J"pSp`VgZqgm/g,VGi.d]HgSHRp1&T[[CULfgHN-s8`Of^[s]ZC?09i=$J6tN+B="mG:u]TI=0Zj\X&MJ?bj=4M&nlW><"r$
%c1>lrcWs5<pp"_5C%b!A*Y<2Fg=t8pr15P'&QK5h;9bYOm9!Pl;2rmcM$ghd[40ZL=52P<\=S>bWa./]TS(Mfm[r[(hB"SXB'7IM
%Ge;fmh"nb:^'F^S@&'4g>Z^[:kC,Yc*4UHV.A"MK:H/o#Y5peNAVp"\/OAQ=D/Jb2kQ2;:XrZl1rGa"SFMG:Cc^@B"lg`h870(_k
%Kfik3"%9>YYob$jT"B<m,NSZJO^kk=-E=iO]_M3W?I&lX;%t<p\JfB=H-:'Gq1"BQR9ii[/ftG>?sVQoA5)!d-`-&g%_R:qIXF?F
%h,09Fg?#'R),HgQEmLGZkK-L),!ArYr)o3+cITPU!2:ZWL:s24G_hUIq1l:ID=^^&K`0np>ZTr7'h)e4-J<4=GIj@:<[r^]mKj!T
%)5O<[/pY@r383*NMgso_fS.C=CL>nLMKTSHXHi-<eH8)iG'g.9\lc82RsgDuE<2SS8V\*Knuu3Ni=bH/QW-K'#o0*mp.\KY0F'bU
%i1;ZOB$9n@c!t.2-d?u#n:W:a52u_2FhVp*k_g<KKh.qM\<fhR<N9#!=RQinC6`p(cn!4EWSiaj<ik[+G7>Xt5jigA8e7]>FST1:
%@X\4p%Y-i,hXXuK]"H*t;0Rf"J>KeH?V?_PV7o+j$FJF<p47H)[X'3N$,5Y*;t$+m]Kf2kXZ%_Njf8'A1fjO;[6`=mA`^XlM(<b0
%*YB!4"Yljd-=F5o^;Jfjf0hYM^:cRNd=33bAZOAc1[t=Q`mXJ(kAe!0a5$[_HP4BqChp4%7A$80PqTl>DXBV8g%Xl&<t,p)]^Y'f
%_jL>t@PV6'1=nN39PIkV$rjqchE;Plg:BPp^Y$bY*Wfj[lKa<lmP<_?VqOY3f:0gmX*a69SVkj;mMX:C/N]4b3Zm8Kh>k-X\"d#q
%ml8\cAFnZ[-8I@6f8e/2EOkT'm^XNfq09mOGQ-ZU#dUhPZZWt^IGtpD.Tebb(/LgJ73d#%+<ofNKlFYf@\l2#qc'-.ruc0a3^:U4
%'geP8SfK)n8eZ`O$!tU+UIN"dKM](jaco5!r9SL*%TR\FE-]Gs1OE@qp#tKjdE!(dV(Pl'j)7Y&fWci22C#2A5Q8R>latQC1tOF,
%`?=ok<">\1+noMr=$eVD_j1g7(ksV7/YQ_)7Cd/\g["j/rDtHh<DFTSH(ZJXk>s.h65ZpX%91a57\ao"(9GUcm!YFK+mWlBJ8Y7R
%X$4Z6j8G?mW0^\P2iX#q7rR8@+d>LIS#WEgJtA@eS*S-NTq1e[nU=)*NW8hf*sN7_MGMbYj[23Bl`19>6dnk]q^V?IGL5+p7h<Cu
%0sl(X3)H;$CYc+FU[tVPjjVCCmCi19GPr.2;1/@IHfnN9#Pm_s2Ob?n^HP^tlLD(OiR-E*lH3/jpIiiFd'qPs2`8c=1OV(.q<W[(
%XVX7JJMhH'K7hH\5X"<p5F8F-,7MqJI3Mq#mL@>VP"hR8P"]2=q=0N'-r[20r'FdY^#Pd@ch%+KrO'o<rbeVEi&\()R:$e5$3;r0
%7n]TLA+:pKD67ZS#CSM@4ea56qu;):i-MQLV>P61f)4AC;:.\dIZZHkOd'mB_>,`j*#S3]><F(Ar0"-B^J8b)g=Y\40**<334%sl
%3<c-a>O\[$/=e/klC$#Lq@$W3;)@@nq4(dIs6YD"G0,O_H`9)'00rt-J50C#ruM!tJ>PV^QWT5^I-3.&=(TkRY0$OH3^kah\M"'A
%k8a-i=>IZ#:8<Y-K1B3"6M&g37>9E#`kX=Bf%j\M+"al"k]@=g"m:Hm?C!@=8_P["I"kMlo$OYM)rpQ._7/*hFl\_ZTXmj]Yd8Cq
%e6:Tkm]kd"Si+9lh*@;&#t%a-Q@^">m3\(M[J!@4q!<%u\'FU*SYIb<5oJ?uGigj/pOAr@^)jYB2U?hcY1rrhs/g`(Af5\I)"L`:
%L3&Vg8ZsZ'!!=BVV^D3i<jo_,G\<p;YkPJOCY]J&7L(_ncR"0f\=Bq\hYVbn%0=crDJpPsP'"!X%fTKFI,W-)K>#Ka@D6M!eXK.&
%m]XK(;8oZ$6&(2%Ku%U%AGF6F#eg(*Z]fG23U.qAcAYu.7?B?>\NOWpeV6W+re!jJs68l$Fh/N_IOOd2<f'N!bHpg3dEN7iX`L3.
%X3G8JiGi%I3qKcTrn]doGB<:G])ARU[<m+0H/n_aK":iSg$HF)RUc'5Ws?*L*uq,Z8'aEu)&M0PDa#(d]Q!B'T78bg'Aqr@c0NtN
%Ra(B#,;a7Z$P+'Rm/J/UVPtYZ?d:1uiCXp$^7Gh,^[KM[='sB?,Ot<JK?dt0dF]ceE">u5s.#`(Y$L'p++@F`Iu7TOo<0qshS,%X
%(ZjW-+4b>gf/<PM3kdEUoY^G0-GM>WQ[Wbt:D7sBlYH@@j(kd])t_<r4>l]pn^["CL46`(!j=hYh)]q3'>O*9h-B9re04cEV>.6T
%Ainh@q"5)FSU1(uhTp3>d&);US'd_+?2diIPA"gimIhWH1qW;Rm[sK25M1@nqRRMhFD(#d\n)ZF?T0c"Vj=2es#dsjki'a.:%05(
%r,D>OXcINBf:H6<HZj5>0[pr2L8O,IR%,47DX+cXo3BUIq08t8[\@+,q<-DHQ0nbCT5K)OYG^6,cjuUE1H.7:mnK*\6EfE6I*aji
%2]MPuYA\oP_9-,gF9t"',CoIJ=!#<G2#``JHL9B%)W0C$+!.tH,?k";J!kf:?Z9DKR<c>j5FPA$>3bY%q[]m-?`i3-RsB7"eFJL:
%>MjpZR@LmuIJ;^Qrk%KWB0Q-01Y]CiD`mgjIVYg4;>k2FJT$pd!eU*Mm@Vk>qqmGVh0Cilkl%iqQ.`:O:MrljI(l6pr4Kc[-6Fj&
%HK!,6j0_,O]Xe"5=`a/j;)`#6m6/-?]mSkVhX&hfFd0oQ]:\N!juS:l_o!!(O(KHgHLYMBk-L%=)g4HG2ZrAkIXD(`al:4gil:N\
%ZhL46FIk]DB;X,#O)spYo@IZeR@OREAnK(h>n,cTiJ*cgY0F#hmIV84A`VrOqY%f*o^[!CF)pE:hKV/b\l4e'B!8=3a/RY2gr@hk
%1H4q'q7XUsbpW?8,P.PPd0V\\*5/nkgDj@GntXm.HYWq5]<fcErMN.fkt""BM<gd(RM.@2rG5fTQ*)pKbN[G"q=]hu`c%W5`qO!5
%Vgge91\osJid8V9VL[aPZ0'-[k?H3Y)fm[$=7kQgo4jq&4Ebqri>,\1<BP/Zhr"7^S9VQVhn8sTG,mY!Eb)%mA*(m+F6_5l+3iC%
%e3rojpT;'P@X%'J;]UTfdu5>RBq"'@^?NZ*4Djp6UL0HUII/rQKBK,"*n_pc>Aos;R^^o"E(nNg@rFa+hS#hFc20#8^Gd8$WQF;H
%Xm:&QfoMn8Rh*QN=.529IQhF/\U*bE3PTemg3bf$4Pa7U?iA]+EIW#'\MWI3RkIj@\!kM3cY`8Jna9+mjnQkeoA0D*LWp?:mr%,@
%TAI6fbqC_o4uL*gFuPkj/$G8.lgG=d1cO"S/MoE\gIKNUZ/S>rpX]56c2GW4j6"[q[m-?P2tW;rk'[&NAFs9lq8h44kh*uOk.<Ps
%PI("AOf?7!haWLdmFrjT4l<*^N49t=SrU`*f>^<uhqIraEpm3/cH(Y+qk#+>S$/,J*dr<G8*3%^mu/fFHEoN9\Gk9D]\7YA2tH*E
%jn6^lJgU=N]e_G7Fh.<jA9F5&]lAC*O)2M'$$JfL5*$[7`Hcjnkh6t?3jRPS1-0%9DiRS/XhGgH>4t`]Q$FHAh3aTMNP"Sqd6$6'
%Di?l)p#EsRgl&(gUJI268#$H1\*o>0I<oTt?iRVt2>VcDinEVZF>,K(?>=[S45ZBK7t9`85NjnuH`q$?7h<Y;^L%j]]YAIJg5XeS
%=!k[EhRlbAIeMfZCVJK8P!4<mH0*nhKBAHP3Ha`3'/Mdojn[tAGNIA7_n0",[Ve7Bo',;ZdZsO.d>q?eSj1uBZMj1[pr^G#j4;cC
%mGkhNRB'id?7]?P4MLORWd<(L]BYHS-a2BP0m<$N9X1jMp$q1fc)]0_h4;'e**NlU^)o@]GP0/)p<Tf*5IUL?+()c7>s6hBgDt(4
%\*_hUmIcfUXg-]70cNT"O53u;+3,F=9omb9`ZG#BB4K9FD=<It*kQE9m).#eX(1O+bDq#>\;t-HF)P8ma&<XiYDjR:S[p`0\bYZ^
%?2<9eG5LCg:Y03MmFuFJMp(G<Q9O-:J*lXSpqa?ka.(DYD><jhf6.tm^Ks"UIW-CYnCkRfc10@SH8k8U^GUK77m%]>puqF`n`N:b
%a'\9eO,\Yce6X)$IsS=Q^,&^_nY;Lb,88[@3boBfB.'#m_SX1'M>LWi>8*'Ic5fY2[C4[7hE@EX47R1&q.sO+hJ7LNioa'Yf<<Ku
%S@m\sq`&oXJ"HO_rVdJBIJo#5d^f?tCqkDsrI3qQFV="(?/ON8r:0X2rn!3p',07f:[5IiFn56iOk%RaDoK`WM]6_!PAd).lV=lY
%%^/Y,GTL(Q7jG2=IHJQEf?p!*qU,5!)gA1Q5MgX0ph9!5inEATNVB'3b`0#Kk2D<Uea9hE,C?W'Vl$WRS"'hpVP^8g?i5:5ok\8N
%Iqj\%jf*0jhEIRcDS=bo3r],PBMHd"I,=F(X#mEgRg8^^le0GUgXaNaSL^i9ZStZ`4&>ToDN6h:GA^0hHF8&TY)g/`Zc>kUgg%L7
%A8Zj@oCU4#6:Z7kkL,^I@XNS":1<"<DAW%QqbcnUBPFhUq*+P]=FEbUqAt&e?(E'ET[,%Z@cF8r]0*?tk1djrok$F%[Amj5e_ZLd
%'n,c<f!O"PY>+;/q[[oCZe7##ot0Ola*PG**;%R2d;*?'DL'QQ47US>\o2N2;OD`E5,TnAb`@JHd>kkF/Een`k0`Ok]mD,cfr+9d
%8*mkR=,q+[rKT`sBW`>damJCa0"h]=md]Z1<VPY<ie1O*qHg\(2m*C8rVF`d+4[hJrmAs7AcMVWnlNT;1VVn!VY=TZqBtSrRTP%B
%%eobAZZfj>T&'tCh>QZuE#m0bq;U.RkK/p?phY,n`Xhf]^PH+?*rJR(M[spXSS(T0Ao-QO]mR>8-[k;cTpm.mgphKTli#"2[iUMc
%M1"-/I-Z2noAJ3Nlaq61RG1f7mHi`=Z]?3aSt!?8Gl.0hkCq[VDkC@JIFKn+hC6H7h44eW5ITu2D6D.@Bua!_GCFFWpi^lHrqkB\
%pTC\qgjRT,>eBlUjiXpA#>^o$GN85"m_-5RX.SjoG]nN7hU`:aJHGQU[LU=F:JK)OhnSo[qt^6N_8=Y!p7iRJpU^[to\elkj-pRV
%K=U\`H2MFK_><Tn_0#:lkO!!4rjXiaE;fb0l*oR-DG:)?f%uq-G%^]m9R:us47hg3kg"RDGs"-/cs<-:ccih(>W9"<HK!`Io$Pk6
%fo=P&.s"eK*O!eC`>=;N:D[6;\^,1QVrnQ(4^WY_F6qc7_jPatio-A&c0:!ff6?+:](Yj<iM5-d2q+N<SaA@s<Ypf,+#e+4gjSOd
%ig7^W'//jCa.KQ<4b*BNEh`H,8C(n?bUmtHT=ip+GjicBoptRC2dS_\2a9G[nRMRCa0jUr+6de>l,9iUnap.#FRn\elcmaO2ci'7
%SrGCP4FD>H_j?X$Y<)&=`,k6X@6A_j0AQN+;0Hqfq:bK6L!>mD5FtZLk0!:B>;NV3?bb:Bc[X0oDSDJHh`"n9qhH8#]QKu&?L6PE
%1q2+`roj(8gm:>\IN1A^Z2!qLp9c3[fcFFf^]3PCl0H``UR06O)ojVlU]$=AMeW)=IHKY2Un;lhIWMK5Fl3*&Y?'Z-qlb0M]Qq)9
%ZSV;eq=2^2X34ic-OsHA7m9Y]Nj%p/H+e<8I.?n(UQ*e_f@O%mhopIqG3dD.jTdHrFC3q^??'??Wg2b:pR\R)N'7+/G%,(:dV%E3
%J)>MBp-ZJRo!Z/Mn)6A.jR\FVMj*21hgOC2^@m$HgQh8WmdlpupRa\8pn?BtgA#W&F5d+Rf/IU7J(T0/Z1(V-*+&[?b^BH]EW+)G
%]h];cf:&=DYASd`oP+!VhWO%aeeihtoBd@'<^4?E\\.EWs7K.^@bZA(b@:(\`g<fHrQWsFRl:kmcB#$qFm\#IjL5FWJ,F/,:MkUY
%o'pCqI:[m#;u?QHQ+-,k&!iO9a7DqW=)YiW>$>37?WgS"?=/,g(1/&`ctCpq&(S_.rFb`hFarHKO7eiT7<a0(jl8bL4tU#Pl0a=p
%cHbeD<u^;DcaAbO\*o>9[Po7pmm`fBmu,A!?b^M$mPd)LbIuZ"9/h&r2KuUAh(AM<iqCsH2n(tgmCcVP@/@boXj-lJr\V1_j5Bh4
%h<d&-ZbF+.2]]=;IiPh>mQ>k7GMXFBcL/cch0ZaEmO[hpIaO4JmTgc-fCg7l;kNd7DAIHjDhQ]hrmN7WmJc85]fQJ1=<'J+>5nBc
%@"5KXPWn[pI_4cl^7B2'FIT/Xkrrd/?KlpP*ZcCu>hqsNk?_MDf+lP2m&l=.Y3IsE"7+rO*V`;1:j[+tF2,>o?ST>5ASosgF(tlD
%3/TNT4m[R:4-_qI;hgf7Q_]2$McWc`&K:]L<%;jm71gOWe;<J=+Z3*@QeTV?*(C`F;&#0Fdd2*f-[S3T1`#f;*&-23W[enUAq$n&
%X)[FDYOnQZ7IcZ"I+(`S`:C[;r$s]oHhTUf2LU+J([LoCrB_GQ*K-X8"\;/ok+Xj+gHtn!J)[C&5P:W#\AT`/rl:t@p5G!%c6+2K
%(n]^_XhD&@/Jm!p\oipkpSbe"IA]Fs,.a?E!<;#[>GcKVr8N)"ddPHKGP=/S?[_8$f8@;i\7[Z?Gi<Kc">[!Qc?O06"97Vtb<G^8
%F:+Q:i?n`TA[N%Cj$*Y9F9@TJmqj48m,`4+VTarF'WA`\YAYF'rlQZj:ZJXM^%tB/.t22&lBe*nK/@N9Bp>7eII$B%,ji.K(4U%j
%W^g.dW<G*the_=+Uj'7kH\%t?VAP]3o$W`qhYL!Fqr1#*m>5IN'"qfSs$GpTb7l+?CCm=B0P*!+:ptk0ANQb7S\IE!D5#=h`&+?U
%\#s;+eY%'$U2IY^9I5C)6HV,YOjIS^1o>ltgg-]F)nkZ,X$AQ1.;sSa+XY;Me+/t,4;C5"kourn1`DoK4MC(-pS+l$[.#MX8nSK:
%Gr[m;L/[`M:'rWZ@OfB;R=6'\VId/4r3i@j$VWFS@VVTn>=3\<>:C8nS7jJ-Gn\Sdd@d(UW[sZHf.,0@,aI<JWF_(@`4D1%Z%#qi
%F<:B\Hp_\M>K1CYODi)P9k1UQDWfFFnL8/u<"tV8T:)*R,C]N)s$SnX52,>C>\2c;,E7XkTmbT]W7RIaQHc+$^EJ`6o`XGk(Wo0A
%.LJ.5A^U.?I\pO7[=AnLMP(Zci^X<Faq6Uu-GZ9?%?6cHnC@pc<Yf=]q,'0aXU:*u.iV[K-c!Q$_@Z?";E,PtGg+p.#q")&CcONd
%)Bu7:BTP/W^XV4/;-Q(<1dBp;(j+4^J-M\[0[7Z_F\>6dR"\buS97jj'F=[@B,V18M+P@*:"RQk$mn5mpS7jr^;tiQenM]E>4Zu,
%?$n:]4*97uHiWeYMmcNj]LYO)/Urd%7d&CW29uaI/;c,EiWuFrTe9UR>!$[+[pANiCuf12,h*P=Mo"8PGA*X76Zb8>_4n1`L\%.'
%8PR$F_@l'A%"+KN5X<L:9E6=^\jDap`LWl>/-PV/Tcl`pYBYlk^/)>1F)[hj`XkI2K>n@&MeO%r?XjMLQ7-=/EK*/'6-bTfa"u"E
%(Kq.nb/^FeLNr-R80Zk=)?bmGE/^)@VZQh<#XW0-'_4O1l)Ks]Hds<*lT@a*P;X??Y$CP.8=q,/f.M?Y#XTfEi#?J?:\R9IV2:4W
%6,9`E3[&V1B[Ek-'Yo>,e[9)G7/'oI^sIOX:_l\+2:mch`e!Dj^25jW69BYN!gLV(#`q7>&CqDf-Zl+6Vtc;!V4kN_);S%@ES-*+
%I7ruYO^PCj/U0SBNW,aFG_$o4EkejuQ$DJ`q`Ni5kk:\.$9#'6.usoA<*El\c54;K"Ymf&,K#NiNj6O1">O@9,lp+?(IJi90`heR
%rYeY36j0E*`PY+P=pWMB4rm(aMM2.'4@l@.cOse3&f)F.d=#JMYG8"4.iL`-0!KN1l(I^#DZc]:;k>'>,f(<]`ScQG=aAa6QR<\F
%=;B0f#N#ND1)dYmkf'/ooT]&CIqt?0CqRRS"!7cDPb^[')"_Olfokk<.jCF1b-jHW&H`([3o.^nUe@HH"D,s%p!Sq$d#+-o,(LFg
%Q,d`\R9\*`n9i\=M:E@tdi_p/T0F.=,-lC._o3!gM8U5r\"(0I(bZ0RBp9F4LpYPFLa!&DXAL:)^.#J=6-AtS-ot0<7DA?:!Fum]
%ie0B,iDbC[$Al]`":G_HL3KNATWUfpg]>[t8u(qli>s>I=lIa'#b><XHqnbmd&e^k"lr<?5GE+=PUo\Y@$*8V#.22qXH7Q@q!a*L
%"*[BHTL4@M0&m(*gVX"mpi6uTL<G2]:WV]#GW8*+,#h"PCFbWGjk;R&(G*KmA&/S*5Ya_p1++524t2fRl+:ua1k^l](a=gS7!aWC
%$<eS^'oBA3'Vd79-RfmXPQeDt*XtS(8$A,`*#lheNFL9L+5sAZ%N5Ys]3(%aJf?R_*'.skF2V*%@hEF^))n3MGhrf<2DQ9q1!49.
%G1m.WcP?`kRG'+FS:\ha6V#ARbbM8uK.Z::"RSgI&^Xc#i%+p4HKH%V,.>;9U+:+K=:WeVOo=M:fe_2@>`_4e6H_&d$Rl+l"[NM2
%X:3MYKBBAc.*9KEd=QHRLX*L'=7)ES&db6R$!K.n&U\m`,nS\D=,5(j].DBO"aX/`4<Yl&%g$-b4.ok'/ViDhPeW?Nje75?%[Ue5
%ctJU*1XbL^VDD+8^uW[9i$K_o.Y.b;LtH#7D2!*;NHVM4]+gn^$WUi0nmE(e9L;b19JqLRK]^Z\`/]YeH7MsNj:oV6Jt<DqEKZi$
%1N4"R_rc5[Q9/?A+JFAKa22Nu"Yta]'84&pNF7j)#1IF.(*q^0,uRTSZZOkl:NEu3M,Xijabe:R*AqQ,TP'eY:k\6P65/](kg7IW
%`T+9Ae0OS5#B5efA;ru,*^NCU:9SKd\,]5CCSYl8Xj<A"asO.oZsF!?L0L`&%"]tWBnFdn()*GN(A]K%b<UM:0S0`W&!-9-0j/uL
%AVL>')GVC\Re7J+V[67";?UPfJE?A,0a1f[$Z]LDF`=1p7=n(1A&?@WB6=c<'^_ID"%4!c'eM7+O+<$d]OX>@FL_l1TZ]3F-@g'@
%V2-D4Q=hEIp?OMW-OlU^k5![5]XEf5=LfiR9kmiV>$M&]&^kFX,-9<IE6&S]QJ4W5Bc8"G"Tfss]3on'cj`+\QSCrAo&u#79P:&M
%f+f&c'oD6l6PEng!Nf_,,)?>p[HM-H(2?)g&tLRO@_ec@\dO.K"NY85V^CX)TT\q]'%,&tZ"B!5]b*ZJ+M.VHM7=;W.'ZDLLeZO)
%a!`*TJ9d6#Amf3VNBej14Z):lf/LS=a*Iq`/s]4aFI>]S?q#]=D..ZQLt;22^.\#O"!rJi2?Hu0bLmJbQJlUUZb56@6%CQggF+u&
%%AQA>dP:7ZM;/8sI#+g.cZe7J^$3B<-sqoHYf.70V`i+tSg%m10!uIc*,C-@LQDL&!8h=CN.I+H1fFQP*/6Hh`M5em<PuE#^tON;
%%:Sp<Rr,Md[h/jUEi@>Y*%TE&N-?2O5A_I2:`><bT`r>?i%PpS9aE1`f*^XJ**GNE`8m\T6Vn;\;BjM>J;3V_:5K0AJtrpnk*08t
%d87;tdfqJD/1@&ql#?/8&Z[3-jCElDgY0Wo&LL[N5J"d&Mg,Fu7d%W-%jX?l#-PJD0`$rsK=7>R!<TIgC=A9"$7=n@:fZZu?M1f.
%QELN1+p]^4D:+9JO^MQU+@:XT/5er8ULo(p[Q,U85PTm?p;c;U+.tk6]Fno)n3!pX)gn.S-/9dfj[%NmOZ+5S#]Uo;0IpK27L:`Z
%-,"qcWH_X@rHi5IQPC2:m,,Y1&.3M$L-umlHNTej*)8)*\6)!4O^pTW-V,NLp?:KCHS*>d@V>'=.o4$E2b`HYo:jD[ai1L-=N5as
%.l8oKL1*GZh[&%bJg"VWc"]L/n1`gYTc:08*G)=sA*bTd5!fD#!o=MOK-1B=N),P?JeBV6kfV)4->r"8QUOSNdgSWK'_Ch:nk\^r
%aL:O=\;V@;1a->E@O;MP(+,pj+RB?LIh+c#(H`ifVq;dLA^;VWdIiAR'OeBO&.LoC(*(+j_a97D$tQ]m'[C/'?A;FK?sSQ8LP_1L
%i)O1KeG=n.J,ik:^h\_Km_*356\.ZeAY!Y(A:I`<T(^BNi4UAOR#X@lN_7_Xd"/-hEPuZ-h_;K;&_@/^AO`Xc?oDa&4Mci]Pb+ab
%5]+Il#MV8`C:M;C^'&F+iCg*#3b2oK]!=V9p.jV]4)pU\<#t4TfHU)?oE"%t%(?Wg\;<$oM]NCN85LB0ZmBS-Da=du>X(%R]<G^s
%U03<t-%Q9s-jSNZn1_hg(M8.64r(%ZKFLVt#q-sS3a9)E+^6E)M3/"&)'!XJ`4a?hMWfN*BFcUFd6nFr^LBP=c9%_H3fVOa^k?FR
%Uh(qtO.*2u:qHeb(#su;)A6=EJ;;(?EP&T/7fZ^@JVUI$0o+q@dm,E-Cei3,29QuJ.dGF?gZEQt@^#;uNZ=i>P.=0L,@osNJa&Tr
%7X"oG,[u>CFJ,<^Kgb6Dn-Jl3J2,Q+=?8+@)]^`q1O>4%$+MAaPTGI>-9s3b<4rSi[djUHY&(QEe1>R[JqlWNHY/F/b*]@fR1/<L
%Y%=tZ"eR*J,E:n*>',9i$8I0T,DW<$+;Ac'5uKBfC3eG^&u0OmU-k^e+:&NKN(>]LUD%^k+=)DH)C2W;/`A?!n>[*je1>U\[)#'A
%J@OWZVUc'IK\C(D[KoVUie'"r`;D$#cGI)g/.NK/!c4;R#*C_:L04oSn/+XS/^-!7bh3Nh`Cqk"(cJnbpiYR`0\S&N(;jHGqCW(,
%Li58d`$*$K"Q=A?qus?'.55tjFoYt]YR'a7dF0/tb2u'O*.jk,UdI]uqFuH^1o+R?!`FC=#m?A2LjP:]"\$tZ!+)s*aSTGYK'7rD
%nMDV5#RbV]6::r&XBXqN@H"F?fE#Z07"D$,760u`^cFjK,9jp@F,+-<$i]+AD0k3E#`QR%",G&2To2KE,[MkCJVRZ3&SacWo5OX0
%d9mOp*ZPHj$8sV:^]m<M7q9ndi,&!]pl"KuY?C1qGm/'/3^.;ifjOd&.kDkp+EMmsi%-HW)iim.84gi(bpC^R*<'d&oGhlqd1_8q
%$$I+[JJ,O<8Q^^5S-f)45n1M]J]bcQc8l>$?3^_%2N2%jL:qe?/tB%Ll*.;CUmW!;DR.8JZ31!=E*WoD(1Mq*Js@>R\g_2!-qKeA
%3)FW*QQ_=l15!*;BMeC1:?)I'&<YtFcVB&h'1HmM#=fDc5r<"NH:Una8<tt`,n\(1Q8i]8_('!>=:@q6L7t:nfK?0td\UDU^_KJr
%F2/RI@,n:t+p!]7O'dKD_#gTo0KM[`)hV#=-lfK:V8_.:/BC)^J9;d61IiTL!e785O$jhICXtI]C?a]"@_+t/P(Xk_X?f+>;LD/W
%Kgr8"Yi0:*?-0?Kc[`=[[^%t8q]kXg,)?\s#\GAsK&iIBP6FUP:CIQfGK>u2?tBCl/TH#)`2%@1"!sV5H73,X.igAr?n>iK%5GmJ
%JqHA*AgaZ*i[eWbU`;G"7EA4FC-C@7Q@h@@$',GQ[jI6cYaioSDR*W$KLa(kGsms<THFLE4^5][4p=6BmZ6BG*@mEsY"mD5)Ds#b
%2T$Xqj]N^L*7P[t0FV,+M(lSU?mMIO*-"^YO8+rl424=BRKF7]5\l\LYUG_VEJatEP6<FELhPEN+rAU;auNq+5V&!V&@)IKlo9rS
%U[r0JM8'^l&<rBM>3V,3_%H6S@^I[ORTZ#`O:iP:%oJk80+fJ,!`Wf1.g[kCT89;k&2+nV0S72X9:N<T/LMefm#`f0iD&Lf&Nm,X
%E]#B[%rW>tJ2c312dd209cVeS;?t+4Aqe.bQunpqm<JGY"j[Fse;:V=J5S\&e0%R5%hJq\.*)[g$o"Vn"O7-n%3f$j=or%2HI>+q
%,]nQa+gu'U1aRl$gti=TT^Ni)(,@<%>(DUL+Gat`&6Un@cIT1@aKU3Z%8.0tp&PC'G8GKg,#;.[]V!-3,/UM@2#&L3;'"Vhis.Fi
%!RV%Of5h'9Jh`0MZ$'P8GS)Q+a3o]9#YUC9&6L1h:dPL7SA%;'9_X7>c+s119cJrhcsEs_\9:jq#!MZk)9)euY8gcDTFZV;dl&aF
%3P*5P_T`2Ti:E^jTFqAs3&%6MS[/Blj(9YA%'ZqP&aq.[8A]Gbg4D"ORM7)R&i&;q-JehfT0X,6C"KG.\?OnPEp/:b*-@VQ#C%ot
%6kWr<Q#M"2^iU5%UkZrSoKpe'g;N2Y#h!Sj>1S69OtP9W<icjhBOs#>M]e0>3,s]TN1S9VGWim2OW_1>!=\UE;D_1QE4@$pKnXro
%b-;1NV'6Jd6D@SKEX$O]`4HF+J._jdf]X4bK2Z;O&TUu$TfiT2TO9#mr6P^[T\Ug91.A(9OLke#9gZ@OMh2*9CjPG[.JPC?V=E6n
%?*hHm'*N1)X2??V&1oNC-Ol;Q[k(:q^eLd?m$/Q$(Jo-]=<nlJ/7]F4BU^.)B<RBY&.5p'/a8*1#nTcM@B4I.$q0_4N9'X0dREA-
%3/@<,,N:=BL#KZ(Xj48E?L!U]ra8ou4e8`@'O)=m&1pV0:Li56o?5P'$LYMT0[g*n6jdp"M'#++2/1;JD@[f3//+^h&`dFFIk,7>
%98GF2TGrc>BJdWO@=":Z'!aY;+,S^K_WT-ndn:]:AfqR1(d9KU`!hQg?iiTD2M\c<*/BH>*lk]6"Bs9*6M(AB:san.fgN>C%(:[A
%'cBJsbk7\W&\b3FJ26>?"?=a:`*,#C%"[!G-!1`IJUf'(B9Rbg8r)aOK`t%NYQBK!3<[jkOs"_gERkS"%3(*mgjLR^k/9!Q:c^Ih
%;Hq0I5aStl>#)ts-?+Qm4gNJ"1,QpZW/M_B:KKr8(:+#K0T1a]U_Q1&J[psHe?.&<SmLWBohC30-]i%uLJDJH%\49YC^T,Om)@/j
%T`lI+6:=Oua"&;RL:n>?A;+6<at$Mu&8"]'(BYs-/dn'D5QNID"jDdIUB5JDL"m)i8jJobLk@r*P2.$69,tBkdNULQJh6f(<QM^7
%(.dB+7?]8n[hlV/>N$!t/U$G_"2,<Eh@O*mhug=]ob=ZD<$bQlVu#=U"`V[R`5]WfKjZ^]Gu1`oPEH!RVe7HDf*&cKP`q\BlAuUp
%ZfdF9LPX\1qF-!oPHg<3+ruab+-q_j(`[k<`s8:<S'snt_r1c4g3<g^D=MD*(_0+Xe%tVt,RPnB(-d=jd$8N<6t8LG.M*d_"aa>S
%d651WTj+S^#XHC<DC^lT#gShlD"o^jgI!_<?"9M/VZp<PBS1oDOVB&A%@as89aZ_p"g_3g^Uk\rMur-W)"\qqZ`"@(/jq,m(q_("
%#&=>MYf5'VK^h>ZSu5XNA5kgu'T<Gk.L7IrPb&PsYX,3%idp&*8aprKR2**k'G,!`.l+UsnTGfPK2`Bp+cI+-]Q"(^(5LOWc(7Ku
%Bh;"l4L,]1@A9s$LnH%B@RP0+_5+9*?JgiA_#XEX-VYe]dRj3Jd;'#I]JXBPE4WolWZh:9+Y[5RM^i4=@Dm6.ku(8Oc#>u_mhj*;
%PZ[)XU21E;8i%#=;+L^U:.iB)VmJF.8>LdRO=2i9-:%58%'*OrOC]k%0KL<$fKjam'W39Jf@%MIk__3o64Dop'5T6W.tunr'K%#A
%8KnX[>=`X2:r/!$g+5oH:AL(>/e/XD506r78H"W81O@b@T#(UA(ceW'Q\=7O!*?s7;R=e[,6gXJEBY6[o,qH#dK69-">+0U(lq)3
%#\Pr+RDI]d5V.Ql_?J$m6nk&PL5ngj[??KuOuPc3.\aaIOnV@L\-K;OaJ0D.#,M/0ClREk*UFZ1_+Bl@h*QmV((j4qE]-K>q_qLU
%n"!p`5_s@lIj?JV,RP9VRg6ieK82qu5B*f)H#\qaBR*?tI\Y57OU,/E!f-Th>Fe]*("eCU=;Dn-LhI?[6g"Ri%AJDmOMPK<)'^un
%R>-n:n:;^"*0U7CiGcLbed:f7JrXCf5n/9L^=BINZD2;po/9L\eLJEN"a)P&:.uIo!&o`SB?^2Yc)Dk`.`k:Ja8kJnQ'?4*a$c8>
%;9_^gM\=Y!^^+M5L+.t5U`2gfZb);d@O2+.+tb5c.M.3.iff'?W+'9f*A+EJW]J3MkK$4jS<M?M\:BV.)1&AZcm<,_&37X-H%b8*
%p=EDs@V[j@@mX.R7,ia]9),GB)KuV;2sbNMUa#=Ead6(JQ7E9"2>QMP*/Trcg5uZY.JUuXkOW(>&.SN8O[ed_h@Y<h]+3E$I\\RS
%1'@rI(h%_KZ:QT2+@U8Z``a4`(eYS&P9G"q7=j>O<8h9TK1fVQFpdb@m(hot/"$4!:"9@)fYp0Wc]6kRU5sZRX_:hQ7EeVB]p"'R
%3g$/gGgFB!RNcc=9lHP]O@VA;6Is=?l;6TOTd""JG:kH="n[,^.@<D`nB?"TH5.H0@U%083WP[5O:jn_Q9/!#`'4VtDurZP0T6,#
%?Y)G9!bY_po9XH"[Gs(/%0DRuc7P3Lp"mRi>7P\>2ZuQ/jFPE^OCXWn+EW@or!ImHbt#gAN;RVhnWW(Q22!JpA-::Ul$Bif(X.Nm
%A=Gs4'VW;k"2.F)La;@aW9Rq<\Bp>F"7HmOM%60U<^4l65sZZ-U^!?m5uNE:)h;3J)VGqTK]%:\/eE=&<N$c0k6e*k+UE9LCPii,
%'$s$=n"0qhE>1*l#DeGYRd4(=E;1^FqVVpDRjW.m^*TnE)oQ<@-I?%W-`3iYQ=8hE?`6auG>1qm$+qU*5);Oq'FUI19_]=F;rBYm
%f5HhZSp7F>VHuZt#KZsRd3;#h!ZR0P^13ca0eQr$UtmcY!cD/dY`-qDM0(Yg7MIm*IY<Wu&cnZe(jP1_</EJM-^]o#1rlLE,aBWG
%H!4tdlLSC/OXIu+O#7P?7$o9?</W#.$&JtYq8*pu+?Ch\NRsa6"m5VaJi-aC\D]3d2ePiB=Pq8k?aqUD`[;\nhF](5YUK!&=E*6/
%a>i1\_HmdDPC*tQnqflBLCh#seQkR3p]-7tRb9H],-s32?oYg0PO2O3K+)/j?u)\u"1oWc(/S0tb[hRSTR8*u/5LYUn#t;3r6J<g
%r"V&D*OZ;bV(&<3\]"/N&;J%VC.PGbF;fH6g7P/U+V)AII,I;5f[3$k,\\UD9m2oq+=.,(HUMreA??I@maqi])1%_T$'(K-,WuZV
%!-h1Q32i-9D.'4bj_<[(A-3s6_r6MJBGe:fOB[nG>;5Nr!I*o46mA'u=EAc)5eP9[PoI;8FN5:>gI@iIDHFUph'371mO"q^+DKQG
%8^8`7!*'ME5TVJ,VaP:K>^*',$sO8BO,uWO7S>(f"j.)/Nq8p>'sc1\Oqdhu0V3<`.ET6,/GghTi"=Qm1W(XE3_]Z**J`Xc#HZ'f
%Y.$\4::.m(E_,+,#:1OGTI?"!M1fP1cls%;jK-g\[+!aRSZ`13.9br6I_dau9E:C>f[h1-J1j5@ADI[AN'qC]-?dHcV,F7!6E#]+
%"b3''Dpt72\_%4^98dRp'[ZhV4[rn1$+Y`@(O,og&7aEe1+EhJ%Y#CMocRmo-Qn]ifO6]$,\Pk&#pPBl@sJWZP6h,egXc21qs/d=
%>hMA73<52#)!%CA=Ac#J'R]GinO2HlF0[eGo\M;!7f=H^E%!>`TqDnc$m`Y^jTr"R'Jf2E5,4H*&I,6&N4MTN1oP=XA<K(Ud(ipp
%'SVCd,(bo-#H<Fk`(8A:$r\8iZkL^gTkU3`+_7HfG=0A4?k^pXWK7/ojog-lrJjSZ,b'sI#<6]9(>hPj&AJ4^NW!J"d;ZM!O>2e-
%[RaX4"WCN!P*JDp0Ned^Lj(<_']VL@AbTGBaCflE3=J]8A8@uA1&MTPc<LB7Gn*d9aGRq2Dtkl*UMakb`]h<G3EDC'"n]#J1?V#e
%/^=KOV?I4.ls6l]?`N66#GM:G.9BndE<K$*BNP_8+_W6UKo!7?`"IM[NbMJ^'g[+UB51;"V+2abOj=B.bj:/u0*=Ti7UPYna@1ST
%CQ%C'A#deV=2iHEXJU/^_aZhWl\d;#ErghcpL"mjEa^e\W#U7%ZNC4P3eB9uGgp.#OKpbaLg_U2SadjlScQ"0A8S2k"`e+?b/)'>
%*]/fjXKf*<j'cNW#tR^!3PU)90c."A84p1=a,u2a%jk^'I/J?s&0\,_<N=m1ORWiBPqJk7*,=sG$%1:MlADkuS3md`\D:"@.Oe4D
%%Cc\-D%(GS]0`$?A+[SG2X<mpCF7[tge:W%"h;^OK=I4OYbHo"VYjVt?,3;/Yp[p^QO+3:ah_NS9Qr%MP9;#/'N/P%29sq#%2o0s
%C0UHYW\gG"<8Z>=]Mtfh*5"&1eVc0abmrDN"=DWb&dd*n$H(MO@(mb<3^`rd"?WpO7lQ]0=Q#7M8`0mc(4nY"aWQZ`1RNc*A;!3n
%"?VG)WldXh*13_8TN,Aq4H%JrOarU;>8oKo&Xt_Rj1n)bpu$M,rKQLAFE$^5TQ@+dQlXdT@CK0GTGf^cn/u]e>&d"[Ob.#&8l:Mf
%B9E)0DK9@<Y/llN81o&/+cV<0RKHQcfFW&I<(Ohu0c*El%0W2p8;63YJ$(uO[@)Q\NS9@$)tP9:eSt14KL;Hu+2a*p*Mn3#kS"Y9
%/f>60>9r/=[ToU>H&Z(a%_Re"NZ]D&8h;b>_HGqQA]-sI>%//!JMl4KMfk3#`e0fAjIh*tMH2Y$6")^Kblha_6Hr2S,FT^/Gt=rV
%_GQ/q/[[YZ2W?#^h-mQ(#3l8A-j,Oj5T"a%PgI/6]g>Fc9;*]j)p0JrTGH"@6E5[fKaKMBM80Q>'bWhNotZ2?R=eKQcEGbnC3?`f
%i]/V#\7ZE>+I.G<OdX,lME4<3bTM3?oNuQ_"@nq(7;a;^pqj%6Zb%Aj*s^@c/PZ`b1mRi3`"7_n(sEbi4jF]BN5,a"Y)j6s&a9u;
%5'TWl:(j!QdOUN;$ucdq.lj[L3<<CUKKtO>Xq5r)XPaG3YfmnS#2fem_;#'Z<?B8R$pC\taS!+ep;DoiRM.::@u*$o0N>BdiF:]@
%m4S6:ln3DS$E2Xb8Z2aElr)E&254iLW"V^cO[A?/(;^:!F`J,#DP@dT>&Tc2%QF`IqGtW=e4.@rF$2=YE'sI+SIE.GW&NKEb=$9-
%D/$5>M*8HMXAgP6:FO!P50T/V)!W\mTml*4)p=N,>;X+8G!e*r[K6nB(>I@c0E_k5kMIj]pa]T@V-H#f1M$/%c(i%qEeqCcI<bCU
%X8oCfA^)"A:@8NjXuPUK5:79<0sM)FhG=Bm[ecfdXuG%Uc(9^D(RM=d7/jEJ'33^-md+a1*1eY:m^NHBObUG;:R6WgaT.5\Hd]4H
%qhY[>rFZ?"LVp*,!3Ea<cRoL\HXpiko5JW]=qk:CMSf*/]0o6chQnM>W(q[$a-Vk@h4s8!QRPt,-Q$0ho!1g^?Qh6s`TKJh=MRN'
%PZ[b\0S6E)&PH2RD]!-p4$$5JS[3A`]E@<ll4$]mPJ%ZC%O[j%kZ4@Z7qL,k=S[@l2ne2,C)?.onTSZll&Y2&*;5P5?J,ggFBGK0
%rLN\;R.g0&e:4d0l>jb1NNA]+T7S&@YaPKLS1:YAKVoeM$1cqoQ(@QEX4d,a#gam]&&d9<6TqEKd\"=3$Wu/fkRUphW8dLMPFoTU
%IQ5(oE&g!4cQ#gPJ+r"`KPZPL-j9%)Ym&4<F)X*<kXBD`Xpo-aM4(%2/8X7A#jK:/Q,2;iG_Z2WLVTUr7WhnRR;=6'DL[W6:OfqR
%B.FqecWUR-s#h]H@6B(iIN]Bf$q@$P%dObh:Y/5Cs7e04d0':GQ)dl)Eg7&jM]t!S5e14[=?ZC`,)1e2akW,t+tcFQ$3:nk.0Q_3
%MFU;SmrFqNj,iG/GZ,VqrND#X#2tusqW+<BFCo19ETl9eZ>aAYcAG:XD1<#Vi9\7JbAe#@7V[R=n<MiULkJQYSTOhVSJ\H0XZG=n
%89NYCQL!HUb4pfX+U/#!QpHh"j+AI+a%nsW$Y@>o5m/SQ1C-mGTf!LkriC'P)&RCp9BZfp5dWI6!7Cck'd31`<Wu`NALGL@D,^Pi
%gMe1_:'238Fujk*#ghH'!'knk<>\jk5[Xg%@8"f/>'1f7/?242Qkj\^KfT7]Ebk`IjmW70HS\VDeGiKjYe$tNj5hVfZhCh3#;ZDD
%V<ns51j5qR.8!b=01:Z$9p]]SSr3u1I'sf."s/epK^B<k&_Q-b_)$',TVMp(VBTdZ-t;4:6o$+S;8FU?26,2_LLpmt95N-01bsrY
%_N[u(d[mM_U21""5X7dK(VrD3&H.SU+FH!c)?RY[(/IjI[Ugm?^^@]?jZ"$n2'j5DKInH*LGO9:82YCd3K"#9T.@o,:9RDQY_cRY
%P^\78=p-o8[Z!$umWmgU*]gZ2YhYR2loCO#r1ujl0[DUsTgBKN`;7n*+o.WAksEsBa.nGWN$s+V,Jsftb_0Xa7>+OEMF8t;(pSh/
%XuQ*1G[iJ!^g[i@h9D^Ra?5?lAsnYKK+')iM`B6GoS/<X*lt;FO6Qp9`[+6U.&'\Is+C34==<dQ%:"aG3^S)%<%,3o9ETimMPD#=
%.R`2`+OgTh705rAS8k\ZaD47V<[PLD-_/T;/#d%(7"m-FV;<oJKrD=+d?;.N"B<l9k'T7e7_W+>/g'P+Wq@Q5*H('b<q$7H.Ur3M
%O4<6&!3"ldm$Fk>Ci2[X4K?[NnNFr"-,_a]=<<57I/,`58\2g78m8Lh.+7\e!pN?&qfQ/s[R_#`MBTo;XDsF1Rj?&pV2]Id:lR`_
%c#^08igafX11]nQIH3n17<Hsa!9M33>II`G$bg'eZ+u/LM+Rhi\E+@9.i=HS85^hmMAo3CD1@r:%W]e(1^arW/F#=E%=gf?97d;U
%0.;Vp_*>k<5SKL[TP9@_$c:`Y5T#cPkU87u.KWg&'A"l0%?@JsAr4ahLu`^>V0F4DcQXumDZC<[UjL#O&aWZGX5K!_.ZY$hkF]Hi
%*7baL=R:[^%We+\OU2a7BZRGS-jD+$B&"5Zh3BC*/.!/LCpP;YN^V(VMK?<[a7s(&P[+n'MYcn8KCA7HE5e1\dUKaL-0);i/mf#k
%eETH0Bl5A`'/64c!4Sgb[A/6-9n3O4Z/pd'WYJ;*9lQF6Bro7jLnWsk@nu$nOm%=-3Z(L&=H5*PFB1,@f_:/0'ni\a\qY4k02]&?
%reF/E&[4:2^dGM(8G$j,%q9ekiG;oq>fD57-u!2\NbYO)LbND*K0dk5N-GU&\jSg$&*P#=&]7-(,o?eo_n"5?&*s3K_X1LC;e;$#
%,&t/ednon]GljGrEM.qcD!p@>mr29a:khkB8/M\=22[`YE]u0cKETCtln4+7/ZgJCbE_LJI"$p+,sEj@b@-1a$Jqu//J56pUe*?N
%3!55^O:.+P&LT-#nPH/4Tk"aD>j:K?0fQ\XVK$oDs15gma;Q^VK=2@g??c">QUD3&-<S'gc`-:s7V"_s04U0/^ggQ(k36<Kc6t?B
%P9`pl,SfiL5Ssl1DNV^gLZi<jP<MQ;'FFga-ib#a?#]-Rf/2t0#_:kN,qoc7]gsD86;ulgBNuf8q-Xdm0<TOZO:0RE`nNUlb-7rK
%Lk;aqq-#>ia4.$gdQ`-n3'03A$lnaSbtE%/"n/_/P6h968<&k9+Z+tlQjj9.0J9)A?kGhjjC@.bjEuP6CCV7/SR"77L&emHe,oc'
%<F?B\+JNP&l65f.O99HX$W5-:@DjR(IJE6]D!,/L'p')q4D0(]B>G_L=$/&)!tV0))jc.hN<_>$\Hk$H,_$Utgs^A)`Vu*3O(8s1
%])sWsEshiO#TNnA0V$f><YgpeDSR6RU.!+r-6J6Rah_!jl3rNW_&/m1.*NeG68hAHRL7,H8n-P\&q#NMjt_V?""[(2,s6#@__;:&
%f+Qbj>pn.=Y63-9I1K`]Q2Dt^K&T2/:7Ubb#\7/WfnS4)?K_Y5]`I@;\?*XHTgkX>SVT[=o$O-O^lF?X!=[7&g'iP2qRZo-)$7&G
%$50usRhFGD(g(2%7Jdoi5"Q#qE'dB9[dpW6!s\]kN!*Pi/%!gNOPue+^a#TpaQpCkJ3m"`JuH^i>`GP.A'A\m=I^9V,/J:(MbA`#
%+KBeu:jI_PpIJdb9:#b2-%`H9BSW#kF>m#O6MkTC,8CY2`$"9B"=<$2M#PsRF^brj,a'sd&OMU!>R*\1Yn39<;j"J5$qo52&!N+"
%>PGRJds0@KWIrV`Xt(bMNT`,U(Iln5'Yh!9SO@?*!qj*]TeCIq'tR_gOBQTF#cYI5ptih$f(I<BnSR2m8P.rNfN!4C:A<[sjsC.b
%<#W-WPO)](J!EeQU55oRAoLn"^,efKL5if_9E2RB62D)&M+WARj\Eb+jf"tA?kba\4GrdOZG@hJpGKJIMmMN,'"`[QRf4`#7tBkq
%02-$^6$-^VU+D`U!o%O%Rl-A0,pD';`[NBN>>>Ke"B]9M2CBK-c69_Y0o?-2EAp`@>rT:pL$#]"dYei@FC4n'&[1>DUKAe!&+fJ0
%VLsOCSH@,%0,h6]/Y*3PIn>e*HA>-3#Gc5?h]ZB-]F0C_>b.Ck-cLjk:'!WpAfMd<J+7NOLs(eu;X`O?mJn3fU:GQEJ0f,?\r0b[
%\!XM^OZ:?H]Um#?9uF:L^[+<\9-L#"e2I;K\;ul@OFf:r%C"nI1Z2,Ib#*6\6:MB-/=7'*73YFgZ,G2s*qNhK5TKlINQ3`X;sprT
%V,6F*`2,/L4P'T+Le7_.2>8#a=ck84)/r,5iuS5gQ.5+DLM@It@HF&dbqpf7i2.2b^^r*a,j_!N&h&lN0PhE[!?!59B=S%J/@PqK
%=Tab8SF3-\MA!5S\Ck2kNf"HYib1\;CZ#b'e7Fi^0r,@)MI1`";_Qd_^jAZMi3VqdX;^$%(GQ35;$h>`A?ZFs*0fjZR=mmJ'5`]K
%K$EWb3>0c^(eN=MOQTNC+d@gb8<0\(d]d`K-'!+;Y_A.h%0fWh@(g%TFV!5hT]L/LTrnKFiY4^%^GO.,S1ao9Ek.Y:,Z7;I_<lj<
%Q(mWW=LN[0rS=\0']3!&Qp47R0RIh40`ie$kaMBPU6Z*E<.`!1WP6G6/L2p8MrJDaJ-h/]2PC][bZudIrX"$cf]>6iA40:5WGqq(
%T9MiF^>KWJdKl(lP7jpM6E-#4b24[!\\JhT*uf@,3B%9b4s!3,ajB(8Mgm^9>k70rPIWQ9L9ec=/l6%bg5@*P#>u(-18%qcG;4[/
%$uD=^U2[.#'RGiiG!;+%81+FR2:#cKfl@H*A9-ik-IN9,hZPi>mWrH'oNkuoQVQ>h06$GQ=Qm8:?];PAWL"Oe*:I\F)f$a)%T7of
%1-+A\]#?24IM;jMl3$Nf+B;B\3CIk,T\5&e/S)iVhAe=I'^%/RC>^Q5$WPPr19opqGNhB43(G?iR3MLSU.,O%IW7/!(4:Yp2;l1S
%Yr&R>>e6Y,FrhhLU&]Zn#g/hl2h@%kA,<$"EdUJID/%+sp<]RsgrDqs3Kf*"!BNBS*7!e/,+;_%C!OS'QGtBI#u-cnB2J%,(.E>>
%ck)G>4;s<UAV]FaMNPO2E&So/>Gi(pACBEM-`NiB()dTMmN`!D"rdBe=Dfi\?U<q*8M%""_mqWHIMK.UF3?%N.%&p\MVQ-9<#^kX
%=43q/_eaBaK)hqY[ht(Z[lTSE`"`)jcn`H#QC`4t%i#?Wh9cq(!dC4FaDI18Bs8u%EPPXS8Nf=mY%IoRPAnY@U)\nD$e\BUkg>cF
%b)8JIpTPGE:BLFSi":[!_i'9lQ1$!M3\4JBTY"FEkE3PS<3CrkV!8+gfs&-0,'So+4nk$S&(@9ea/)7WDJhn]2;6_F;Ln>&X0d[`
%OETV[5]_^T^dXE_`.C9dI8u<"RXE2WNt@L8AIaD_80jH3Pe^TR(<hXYSI,Kei)>_CTn39G.>$G*c71[uhubHNs#LQ`5NE8!mK+bi
%aghAA`:0IC@?c.0,%8\8"Wa8%Z&oVqWLt(jS@F$.e7h0*lOqfaAfpaC+jGk(LG%"%=2dSFcO_@W'<17\1UOs2,Zk19QP&\6\H=O$
%((`M!]gSrjl%cm%LoPf"NW[g6;1:-9!:ko-(d%s,Da"1InOk>6X@>Y3=UIm7@NhG]Le]iGjm(tMndZ@EVBf^nP1YhKc%_P6hD0me
%0)OZO&V5j8i,R6^Q^5ZK%?(m^[>WV53P3"KqI/CqBdOf/Pu&CUl+DJ_p$Y-X*U9'RHA?/I=g/bX:Rg-?PYk_%YUD=a.UY&<W1SFh
%p]Ks$_(mFsl:o"-(:=LN":B)J=N5EHJI[i#".,4/TnhjeO_9P%#]fJ%L&1%h^&BFaQ&l7nCe6o-6?&``-45j3Hm95(-cJ4<4A'tm
%n6?\`%0r51XK%\;f]^Z+]Hh;!!E_6e@$1_g:`B$a],\nK5,^J@L[-nQ6M9i\YX-JYa>qPYTl0iQmf:dR2Obt:VK04DL]jt:;O]I6
%QPs96^*O**LdFWb(YOdE/]<pIi6T^d=#^#<f8lNm5qM,TMdg4.%p@pi]L:s3KmkHs\'7p%%0t;A]?4.5]NDgDWO=3HCX)cEh>qB]
%95lBIq>hq:h+Ue\(3;Ws!ijRb]up=-hbl1%TMX'm&Vt]SV8(4I@5[We+,@B%+hRe+*LA?(;9VA,/YX=gfml'81<p[&hIFc/'KFV6
%bb<<b%tt38+#XJ*gbOU7MqG=E/p`"/,L1H4\h&/c51WI=L5V4j=J?A],BsG7V$Z`6W0r+U)h?najjH8R%0O51X?/(HI)'P+>mb1W
%e5cd\]9MEbLk>HRQZ3ulVg6lf5316eGB-.XX;GJe2\U>S>uWgR.On@pFjs"qX@fS>a=q'qU:?qZVf0^VWL851,fjuc-0<K&,.bDf
%UaQBqg;K9>F$aZ,8>7m9//1)R"XM/\r$%R1&a'Nb&i;TJOE\J@>#MU1D'`%0AN-qA/*/a\Pi!qC'"k;+LkSL?kEQ6r"!f;<EUfhu
%RVLt,rZ+a'ML_Bc@c9pN)?Q`0I#ppdjin>rq).<TNR,$;>iCo1:0\7/G6FhA+$L,[;,NJeTP(6e#U0,*@neMp2\U;$"`PLa`9REt
%X?qJ?@Vuca%Z)cGS%khU8Ysa^#/a_X&8[`gNJi9GU=lOlTKr0NV1;m.:eO\>GAQ<CU!bM:h#l9/El)\'1mZGSiJl?XQFbKofdn>B
%V/DM3".GTp.OmV$%NXS(1W;`olbEO0P*pmlMab(2@KorW@/f5!lmU5@hO#eEQ9aFE(^5-=9G0=;^</96[W<)WNIhS;*u\"`L?KR-
%V&UN6;&B:]iTgt`W$]b^g<.mr?SIbOq9DIT3VP7S-cMniKRO$((#!.4>j%@OUf!acWq(0kP-mu087iKeG*sdjS[;A338:]<7#b([
%DV:TaWtu:=2&_FIDM?$ZaKXrjUI74bE"Xs!8G'V=@><g?1l$p,Bi<_AE$j-LNJ,H+E#(Ia+!'<bbZNY8q&0<+$>.MEMnQp7MXH#2
%F7<lH(BfZS!fU!b&6W/YBkJ&e*Gd`rY&OMrK$acfY]*n!6L9(1R,R&Zao?KR,0\p-`m0*%I;,7O*:cGK,X01.?9ge(;L(5iR3+nd
%;A;jfii"TRfkGVdRbg&=0fJQi,3NMbO'@I;jRZ;TJ:t&\*9bUnpQ@H@-o"rg_,-Gs8)F[l7eROr>LG\BYVCS@S\Vck6-\8@$d_OQ
%](ks!rfqhc&dCl/69ut>UhVuClJp!$\#>2/Pqc)ZN/j/6e>()EMd2p[#XR-,3Jp9Q-4BDC@5a%:S$YL"Q,l[U(h"_**'NpVVjI&]
%3?//JY9e"]nutT#Z]*_=I1D-q5U7T9OWpfERiIDs,%sW4(+\<q"o!cAAKE!_9.m&j@^+VjBQ/)VDgA#l&Ah`]Xs!kE/=Q#AL]Ck]
%:K_&CQ\G#'$%Vm/7+n:7?Bd:%ggK(F/oKAPZQI1scHB+2i=bU9qVnr>&quA)66'_@I2a*[kD!kJ\Rs+24a;=:LBg"T@ZKk5aS6<h
%g*=lDJY:rad`7YZ8tO]JC/C`T[J(lTOHX])Lr6'a.uPQBb8N(9,#_PGb@/s_#RKnq>F:<%DFPhK4\(1%gq_9W&0MX8,WP"n[hoG_
%3hM1e7Y);Q)^,N(d;(2P+M3/Kb_s0"SaNFZCRN1eG!;-bO\nm'Kp]nP`C-b<PZA,(VU(BG^qdMrs&(1Zp]W.?;=.X\/M)TdE@E$^
%+8$V;0'2-iUZcq.7Lc[[D9D&=``XQ,jqYS0N_*Xp,WV@Z0K^A,1UnVF)((k?R[b)2KcXf&q%8HPgbmkt?n81SF;psi'<Y27bpt%#
%WqkfN7`uf)eF*2e?/.Q'mnK%i#/_$$'p%%8^c`R!1pWZ]"j8%N(GU(V$<-Q#o*N*_"O'C;Q`aggXUuL-L<qd[_B&pdb8#W<-KR#]
%aLgR"$>+s3`9@&-`"2sIItB_Z$_R;kQWH-_,t0q"'IP\/%\^[IJ00gK1#N*pGc^1RrV,b1id"p$b_q@4,iL">_CU5T#,ZF)2Mbg'
%$e:@+)dEnUkZgBDCKb_B%[8`#<a`HI0n_"4,>p'u[dHE$QJ0.dl+,1q.Z.nr(;bY;]Q/.Qr2&04Io/+IV?eaI3[.^\4,Js1H;t]P
%2ODrh\Me:kPsM$`qp;?Fbj24:k](OOgpWQ6$'69:TWl2iA9qs8Kp'67i_!Z=Wkli_Qf/!N!SrXoM&[s4gsT<KT#?/Jc:5*?\:/gf
%8Na".UM>PgCGq%"]YN?#,?L>cBSOC5(.Dp_\ks^%cAT@!6'JuPhf.)tPO9WTqrq6?6p_&I*<cY/c@aDRHX.Lm#HJD[lIO`W;2Yb#
%YkH<.aA51n>[7\["'!CUI*lc?_Uu9s?!3W<EnsZ3F=2lM+C&oAa#0TtK\o$$if]NIfqc00Ld<qfc:)]kTG4o!X#*Gq8-:[mkQYap
%LnmUg_J'Uj@CJ[R+H;!";.<7-Nm7g#;:=+ZU^"288*2S1%.Sk1BcZPY*]I;E/q]Fb#e7afmS7\FW:1cn3(P(Lo?BRWPR'cFg:D<%
%E2#9?6W:!l-cW*Hjb0?^\P3=K<DS&l/Cu32L=*7bL]A&*N5jtq>]Gp]dI3%)Cf0g3]q\qg8C3HE'Aj`3kt!<0DVh*CqimQt@9!I>
%((u4SCM'B1'TBp4#V3"eEnmO:P"h$(.s:fq0HF%<#uR_-9sKU5G]#$`LfPtS!%9&EnIIbIqbr1'"JH=`.i3AaTi8[IPu;R@CW*_j
%2=i&'^2c&r7j8+q7Ch<:.9h-A"e#pP;53JT)(0/AZB3+B^fLp-;hm,t/%,t[i=:q#*-`K9S;BY32fc&Qn1VTRn)$AEG=c,jBlIf'
%F!^DVGiTVF\Ub(peOLhnPKk$6bqh<hEl?csCucj##)ra-7k*h@$SaZ+K0ff?qb2=boH14e]0C/W?A;/Er[)[cj3Xrss'2)k<<u-S
%V35e4_\PV&hU*pC[Z57`*-[5>94/`kD?HP@6uL.QRh3*G*`U,C-6[G>7&7'$U0tEc;ICPPI3Z.g&Vpqe!D]sF`NiON<`r\e>W_JB
%+<AIsdL)=_cQ1oiY17=UD1oi$0264=r7AJ8O%$+Z6?4$0(B%DT5R-JaPUr`Q8>USX+_EGVjG5ooR[,cH.O6C%d8q\%4!Toj\EQs5
%$n`s(6Ri1(pX^TI28h!kec:qiYp&G&QFg<lj;+I_4]d")-sb+L(?#i0"U0@u<Qqj!R+s9VCP5g*btBls_=>qR9>N(J;E4l"mOk,*
%bqaHsgLT_o2FYoGEeU_.Y-hphb05d@VP.&pX!M`kNfHGLb\:pOAHa[aGbrehJ'&q<Srd%n^,#3?n[3s3hC0nUf*boOijd'W7-ap-
%VF(M3#o2ER\Mj%P'`4&$2,o^R.5k9SZ%X\aT[;PepP\<u/k<-3In,8-oXN#V4HSR=EThnBn\O19j6r*H1gi)aAo-R<<t(/*Y'(+d
%1?cTGV#?@<A?pes>9QaeF=if[42e,9o!W_]`#&%:?UWngTRKr01A!hicr!(/K]@;_*FHnJKsVaSYkN5;H[,I1P2nfo+B_Wrocd!Y
%.l=75U$Q+jTI%];oOnO<'pK_md]V5tpBKr[O^/)VWL\]QM%n-!`@B?o^`>H)E3qVH(4KX,j>`Jl6I)5Mq.r$Qg't;<lblqh)JqEC
%ONPj&5U-qn];IW.^_AIq7$ek8..2H$_oU8Z3WL,.NtM_QY%03h1UAK_EYM>e<Ct[OZQsiN`X@HJ1:&)M+T9CnIt4+?<jP"fE]X@c
%Z=S(^oSduDdj0X11<d^X_%O+O\(kj<f`g0E<e4cn[r@bqH*mU6,\Z0c#\doLcpl.LKl:/9FUaM(.iS?i)FiFKi`$k7>D'kq"Hs';
%+rR.QkuLI,9<lI^6r'ot4Q^Ab;QL;X%O<mtk&Itc!e9^n6HPq^bU!62f&?3qas',VQOig#V3$-DBGk59lgbllWpC0,&]cZLArIi9
%IRW>%nEY/q+tMM="RfL%e8\,j8Tn/^8G)Ul7X6XQ)dK>dZ[RpR'j5I^icd?e?dT'URXPBMg^1QGQ8CG;"Pslu;%(Df+8'!9;^@PA
%6'\QG8u^.2C1gD8DM5cV)t#ZlkEW>H/2Q7*)A2l15\'LFagdLsCutFY^7Wj?'AX!?>'pqod76Ln6k,*lSd/9K1^Q%q>Ujl5&jEYK
%6BYhB?I27s.q=J?n.'SJK++Kn9#qJ=8F;"`0'sV*q3)cC_7V:?b<d,S?F862/]LZJO,JJoO[Jo&LlP#G7RKA!*lUu[o:aiWTp]Se
%/n:!3Kue*b9)%FE8N&4eGr5!AZ'lk1%okr)QTB7K_aPHnWuZ"$lUa9S'Is0oO<VP4g[[H>9$PIG0(.,F71a_LR;bd@*24fXYOu"N
%brLh$;S\=GKU1nA>grb5EX[^<`a2"P-2nNpWKhi^)h&Q!oD+D:/a/&D5+Hf@!\VW0o`5Q%b?HHKb#S^_7D%>Z'$e<=NPH[=GjZ%G
%KIWd]O%7][Kiitb_+D5],<%!9p0:_KEYURLW8N\OkcpJ*`!t26VK?PV_qeg':r&$qmA/ZLVPWZBE+?\N`s]p7@NW`2?-p0m^Tp==
%.eI'05t!F"p6qJ`@2t:nkquYOUk^_6WmOt2a$O4X6$*.Q64.OC[_s2hH,kY_M36n8!`ub!JCFi<=eq:&&ERN2b0,LjQrh7T&uR_-
%!lY:Q"YLNF(f?LAp8s,`Bo*/S`=XVdP6,WH=JIjEFGc?J:CMOcF`3#1Hf.=kH*J03.3sL&,hThG%q><=j0&Y.BiIiH&k3(L&^gA)
%jFTd'0.sq)K%@:r4&Fg]3%FcEL"f;+B9$85%fKrH,sBuiE<(7$Sb+c)7"dY#'u=bt<05J^OpWAu'(s8Pa&8'iaj*NV20^rmLpG7_
%3)[C?l@cA[BrEB'0i9;K37aO\-S-fF6I<%n!OTmmBd:dg8oYT^9<M_F,R,4+GG<$LJf.ZET$;G#3bV*C+mR'QW6oZb%-_FCM/N%r
%h4Rm^n_Al*Zs\J@"DK"g8^mOUach8,&SPHo4N"V?EU=@ZNm&t]f<hUg(/BeH/O5PTpmo["r^<f+pu3Q6+5JYgmMO#f:8I@p!a!dd
%=eI2FKg=+-!]?$3Z3_V:AK?VSD2KWrc-'RE5"k8D1D/^KS3q9dZPqq5-*Ps5HNc>d@a5Df2WLh"E&SPC:N(+&P!.OWC:6>0KO>L!
%-e@e[296QR8API<.gFA%SbHBb9"@-;k0b"n;B<I3,*7h;!Y2UW@XoR9?.;`MYW5/SiXium0o?0\6BULR3m6r7.'X+Ses/%W0m"00
%<972qhU2#"GKP5k(QW;7c"&O'1*)'91h8:3;(^kTGcANQ;:I:V0PMZE_6LnP?kb+42kWV4VWsh0*>trLBbUW3HuaM&nW8IED"'hs
%:[%%Z#5%]DPf&?)on#fu)RB:BL%p[/GZKD$*NZ"opB1_,cE69?:n?XLK*A$#'Gj,b&m?r<NpYG-P6+sK&BD!Z(NK[$4rY^e.?..g
%'S"LAJ]-gZ"lTDtn(i:A40IqoG6@L[o#6.,5cWgmWID/;C:JeIgMORQc)1W4,-$H2;?it\TmuP+`e[`0T6#021RVGsfr-:\R9Y)E
%i\G"M`Z.qIKW=1Rdqq<.IPFlL`MmE_(6tAC"Ic&T#O?@>o-0;8Q?S$I'',X\L0&=CnE2V*@.!]b^@e,QpVKWs=$+TkFVB!1F*AaT
%Qnm[e*?@o;1mI6%p.`I3A/Yd`D-kinFl)66C'D=FnuoMLM<=Gr[kCOgZ,PN`O(c70MfHK&B'H5!oHXqIlU=>>1K_b&*/fY+c\$Cd
%q'5jai@97AoMaP9aTa4Ggi7Ndj[a-(MB5ahjU!*YfhN(f+Ft4YPn)WY2ZtD6ml%`dAceHs5T[OAk).QI`WZJa1rf8rio.?,9/Wb8
%I8mcn%-6u@IDdLA-`j_-UERqB<eCTD13^.s^r`..Rf^P"8e9g:j%d#HCbhXqc'N,Mi.Ir=+Q*O53`A'h[5)h[nN_[qEE?k4mMJU2
%@bF.>h$N>B-S/(NXq#_m$IPWNJfn,#96):Y?/t2cVQchT=hQV^%j9mQm3e@1R/6b@Aidqi;aWHLp,J"Nb1":%#;S`bkXo9:$"$l0
%0!jP.Qs85*&,aUrS3m7AA3d,UhPKBLhGd:iDPb@HY1g[>#NEU;\2-8@%nG![M?!FWg@pqHB/jhnGQ286!nuE?8M/"B5AR/%JU28+
%fsU;/;>..U&Qk`C`67S=kL:L3S=6hFp9d:?ViN$a`Q0;IAEbd&E$o*ZJ,I+*4Z8Mq^P).Kl[;6j\4=R%QnHH\]YERmQJ]Ym$VUN9
%a4">l4DjZH2)<Gh3bCOnO-.-_qWM>f.]Mc.)!hbpP!,k&p)ns_!KT@!ofi1r&0_.gk>lgH6WfHJDB06Hr\GELpD!&mIo3_:<4Gd$
%m$tNj_b[50cO2$rf>;W#.$RH6-mIst5j5`V?HGH*Wa_\jgkl::,*u+`&VLJH?kCbQ[@d1TLjcTj=X_!^V-TcY$KdTnDKi&40m"^u
%ah0^UPmPQfbtV)Q5UP.2M%dRB!@dL5T`b4D$atT!Si\/,7E1]rL2,%6.Z1M@)b/(l8JiEpJXer@l`/QM^Lks(#j5*@$T3L)e?&gf
%F#u=H<JgZP(c<%pA2\XS&2&&1UmAKIC9TYrn1=4:D@;cddQ?@WE(Iu%aqAhu"gYY:'8Zr7"M7_p/`PC?5f>(4M><m"/j>9IZTE/_
%r2,s7I`XZup[GVhXoed/W7p'1E':`imDoVnVN2M&pTK*"7uCq);Zc7_PefmP#>;=Zp(QgU*0b\+FefUBp8J:@;Wq/qWb?NC02/!a
%"gi%#_VDU(<$OCLY7m(&c46m7gdT7ukL5t*eD=ed/&'h7,GH%H5!`Qon0kpjoT-mV^X-@i1q)g72(;f)11"uiP?^SY*`:T%ku>,'
%5=7r@M>9"#la>4(.?o3)YHrUEA[o[QRGsg%!AhCKCmFikm72FU4kfGLmK<M=BZ6Unk+rK+DJJ++N2cm[P_dCs+_)TR\!:ZDcGCrB
%an,$Y5u9SC&P5BUhXB2'J(tN[2]a,/0198gm0)uZ-J]lf9ur9);&sXJAjc<E>DqlMfeiE%MV*cAG89tVm#_Qb-k-*$2L[jMo1N#4
%%mZ+u%`+(VU`H3CI@?/<,?5MX3l,i-F<PX8]Bld`GCZB/[n5?0[a\BkqnW.P*@B9<r#uSA1i,<IWuJ_-+g6V"[r%<i"uEb:Nh0Vg
%E;F'>R/dQ^.pG/joV<Y(IcX+b>jSf6a9CjQZu:Q[QAG:anCT`to0K!1FGdh#5OrPI*<GQigat050Ep@3r&tBta+r0D<5b?2qaa<W
%R_'+qh'E*Ze;Pcp@`UCFoCrp`W(.o5dh98WRg@hW^BPn@W6VudQ=@Ll1O]@T\\tis6acKlZK]M#K[_In)0Z>+#W)H"k0''<R=\ql
%jVCr8HFnhU13Ei2$M5>sAc_];P,$9RU8A3CnGtqCb^#^RI]FGs9&"%O"N7A<.]eL?`oo2n@GW*2Nm=CZ;k3"q+J1H"1iR[Hmuj^)
%\pGqm;Q+Es]pX-;>VA=aks=12Nbu&[jn*:sF8FM_h)HudghJo;C616b"On4/@*l;T[04)"U1VWMAODG.J!-,(U5LCa"d7C7,+2ZN
%>TkSri^dRgmD^Y+.k',iGJ<(aj$\FQ7d8\?!fn!@fra]R>+T<[irfM3f#:GmNJ38UB_lX^b_0TfeX*jimgi[/\P%#q02M0(O)Mq6
%mL]>ChBTE\mdZ`sU5N/:j`Cu-J7%_n`a]5\f=pXIJ`t5.J832A.bj#TKMj'Xas3t2Ci5?/gXdhr7ag&5L5?#oi5]"h8J0Z!dZM6Q
%`Y&FkJ;2KTPSCeL::dsG)]#dsXf%/=kh/O#NjpE#R*)'HUhO[-^eVPBGn,`6&5Hobk[Z$We79^i]Kc;(Z>R17P&3_ff3\jE<r-O7
%8iD!moBWYWWe<.;E2BDa`f&24P[Rg2GOPfD5AEiK8LEnq!W^=)"2JjOn/rIL8;N'JX1Qt[f3?\>[^qG2(P]@sm\PG$3nO'XJ-[,#
%_1s&h/!B),J_NpIMDR\Knoe;rQ.<CPDg9q!c\-5"N+F/d)/OuBdbs#d9Clg%S%F(/q.>\G&#R9e$L:<<6epNAA\.^%$X,GV6*?!)
%M@_i:c\9W]5a'RNcd'7XlCQ<\'QXejC.FK.hWUfE9kmoEeT$``E.'3%805+P!f&#8\MAJ9\kMP@I&;)CZ<gI[eNE-Gj+DD*ErG)-
%dkYBsrD%H$&X3dBrN[LU@oo/O.YnSL+ePb%F]A)j0#9+Poi<73<&3.R^&t:6WR@44B^F&Al)*oGM&B=RPCo9(&LKIS]bsi?FY4`N
%K3T\fc@ro5cPs3\dQFU(,NWtK)<#3>`t23cMV%M>8(F?h;b7K)!.6M;%t?"YH8&*ooT`cZ5&PG$*k?scOu:9)ObJ%5WU@;`^:*e;
%8W=o601j3Q`YOjeY\[:rL3$qB!;l&=mEX/k3,[S0aiCo1>q0NS#FIEJ':Np001hPk\T$ot8/>8CeBel9bC.QebR>7%bH:'"1B0u0
%au574eLTC2pY_;7Ar,LHB&mHO?6$R(l"MDM&,TiQLI)_a8,a^o-0[h:Z5nH7\V.qF/&F.h_ns(>9:%?n<%ioQoEL@?d<oeG]1aaf
%Ci'qGUGO3N$umI#+7=(;X)X<"YX'KjGB$:gGu,+P>%OXl]S4Oq:DTO>9i0],1UVr39TNCAMK6ncMY[gYPFYL)(\eUMU%["X[d4!a
%7UjpN>:s#6A]qD:/OK'^h@AZ5EW;5QG(3X7YDOUc'Q.GXEUS,Hdt*B)9YL&EfsKiH<EOJ,VGHOK=i./B_]f`GK1,DEr!^H:28k7;
%B!VGI5jl;$a!)ENN#Y$6H0\>#B'M9Qcsd92:5W8<-k:AC1lr*J6ChW=!.S%j4:s*OOB=j>YAa*DNmkG[$*^D6@tXi#VBhnU@&UqK
%X*;%l#"ccI^>59TR&VQj1e1)-!?"&18u64s/#7I5+&C!>D\eLE+)2s:$p'*5>;%:8A[FA4L7i!'c1;8+oLfZDqh`e0^9u:14(<Dh
%n^6'Nm;2,?TLhJfL=/JgcJk/A,[aMaVP8'U#$<a4,a&*_+nM_qiBZ;)'#:KA)XnQu9/!6_PuJkmRg,nh#e=8?*Hn,+3+Ref8N.K[
%U[s@8<!fNEfts3+!Pt_oiB"3;$E+4sk3L2iKCF0ur\W^<+jVXBkL/to]aF&UmY^<XEgsbK`\Q4/s6+6Hcgc[99('`3cr&U\X!es6
%[(TY@latT(Y@Q=PKR]Vs"5oF::85,%]K%ofYD"Xdi3AEpUPIF]O(!uDk*Xh]DrCUd:C-9='I"T9mRjqL<JI%Zg:NI@aU@7.p2M=2
%rc!h-(lmT._l`4-b_(eO_b#4Zg:fFcRR_G<.3[EVF,Atj`t#K:*2MC1,LS\EWKmn1o<-<UdN,5j2]T#\\*HoZc(4>#j2Zn&=XNgj
%ec-j.5Af'.!!2A1:^nA2$ocNM[rMdr*>bi+<.4QTY)//$5jTgsZt!NJa3`=i/\6*o?&BmPp17AH]1<-7fo?o_>'o&a0]e9)75L(b
%Qb,Wig$k`>$GcE%pPq@gSQ#8(f6Ea^$XjdC:+s#u+5H#L\3QQ^Y/[QcmT"TqVKN8<q.PZn-;[I:7b@_R`-mtZ;4a[Z97XIKT8Fak
%X=!Op?\9@Pq\*JX9k#sd6#c.?00N[gbfa^JnA3#VN!B8[SR8SA'3#%F.Dq9@fTM/%#iSd)"@Y8)[SS8Xa4j<`r@l^</5HD3><]nd
%KleH!*9X_/-m^ouOG1-p8f"R\I-TL.]sbBG!K+"uEAHZ5*j\W.0't3UPSHCB(l\13WplpU/Z3H$K%ri[j17Oi(88$cP!r;ABt;5h
%CY.$ACt$>uVd*n<5B/oh'US])A6?)r&fS55V+]H9m"jGP4%<s/9%b#YIG:7EGs.FRp=LJ&$krEqHHI?CS`eo!>qpN/Eps;qMua0[
%@q9-#kY3MV4:;nH\p.q'fm\g#ROoL^+m7he!Z9NYJe'">PVE\cB@:uPe(91m.jk<UAanT&iBR7:<C6V/$^m7;-K(u^E.fIAC/+o-
%EPjb$!5%TL,dc^!RuW[I1_q[3P'$UoMb%off"5/qP3FB^'Rf*1*>C+V$4&7c"L=Un02W1TC0_8Ve(m?dYQ!f?WY"D.=U48*0a$$h
%U@o\!dV<'tL,'$6\jh/Vjc/@e6dJW$Qc;J83so9:hNG6?V_&p'Lh64[h5&i\J-DK[JBGjQ\Ra%nIt3/O!#4EtZtCIoUI]>i>ElX2
%:C4122=i0&8GITi=#m=h79&7(Z8,.?*K++5is?L/b1=mQO:8,GgS1F[C-lW[SJ,eDdaF3];!RbZ%dEZO^g(Ld#;?(YLiHF^Q^r'L
%\K;;fl9uU?Bo8DiW-p1<&+rgm3[V+]OPK<0Dn=cVA+q^hrXm^K^OVeXh"i3.`i,2dIfER[Uib)TF&ou9$,n/mF$*7XU)&-4.n'#m
%`>5LcW^9W8\^S([/VR,G,FantBS'guWsrj;@:'hQ*'^>s`j0hWa<";1$a>:">b2(#5`"L6X[64,r=)egP.`/?"=!,k*!X>Kl0\Ob
%7IL^%e"dA-"9,n<ef.Z\gStBQQ`U*W3``Q/A+XjUJN=td-T!E_O9SCmKdV0<V<VNQP%`+G>&<9!J&>G;"Yo>?5l4<sDIJQ6%'J)B
%L]^0-qA0"Q,TWkN#JVm+en'EDo/3Yk+a7O[8YA>]//2/p-bfg;Usu[3m?r4Cf9],'otGNn\Fns[e2:Ac[Qm+'/bs.^!i<C`klFg3
%/Io5^dk\MD1*9i1nbJ;8Hd^_=3+PRaj5"bV/=&XU)(i2l^5/#pof[&j2W(J'[8P3u;Lpi\[_P^K+rVD?ns+Z_\>;h,Kg2D"YU;%@
%'t6h[d"MJpS=;ae.;H`n7X`FGNFQ!?9GeW4+dH_q'<[Vk/!q-\nflq3MIt$EV)9'Ei%3;\Ym_5?OWRnhI9\j+8Mbh!>4HK+KQX_h
%5M*p(rE5m!:YOVJr7MY"g>$InrE25/0*NKt2mZdTnCUFVN]\01)Sl8()j';_"Xr71nnk>S!p_#[CH\%->b#[0)NSITX'l$=3mD$u
%EFK0Ob'qCBBK<@,0"41"PTKo9I#jgB?eI,<\Ba/63..:`0a<c!k.Q54h2jnjUpO>I+Rcd;U&93GEW<``[o$hN]rII#`moqid[Dr[
%jl>C[hB;eKP#GYLk@_.'k$T8@`Jjp:"&t%!BVsCM-`X8na])RbKdPsHG(o"AX\^bL>F"+m]ZBhO^4nE!aq[7s`'kC6WOcEQ\FX0%
%Qde0m<6@1u&kM^nU9c(CZE+.N%O>"!9MTU5[<FFgJg,<3p^ZpO*#_cp1q@`i)d)#tOVB-p$3N]Ba.s8l@G&P;Up;0%=!_G20+?;F
%K];aGiPAr%@VS&/)iu9P`]m$99W!-XQOlQ#hm2HcJnJdfWtXtDRpG>:>fTN!_\WUYkTe]s1k4dGTG<H+\\gZ<F4h"0,)%gR8LhQO
%'a[Z/eNjH>5;&V]Ha7or+hU[(c0qlQQ5Pa\Y<cY*/YR^sqCqYO\MFSR*pA1tmg'3L,#io&TF48t5QAeN,Qk?+l70.V"'2\A-FaNT
%\%=:chcUi%,5WksEVRubW-5c6Lj._BrWi[=s)u_2;Ic2Qj,GW3eLA`=1I-Mi22XuWdSXZ]\>IeU(2s,"1S:87J"fjQ8[+ubk3a'K
%3iqj_r2\9-H1SM@@;`jS+#nW(rCP>,iLgJI)<c(:ZR>+Be[TL6^:F-T*s&`sVE02O2YaG4E=,d5^FYSmK1<O<j7i0Vq_1"g!d-dP
%he#XW@A:sSUejJ%k]SslUl51hKX=DoYb:o]Rd/?W7b'eXs5+<.Cm=K4$8Sr0;$+6MPZ!>fSUT\@"VBL*=1`Li_bjH9;NL;?FQM+8
%+b1o5[>,#Pkq!HLi2TFglBr60DclcamnF$@TtfY>86h1>,9PQD(P(\3rD?<I%1G5?)AgJK:bXF3B^L*>_S.snIgJS'[0bNK-X2PO
%D-R4_*2eS'kd'&^EAg/4<]:KL!58s;[)_IoXH[L"8<p,Rr1r5E]Vqt[cgsW=S1npr[23F6'io3Ir+'su;Uh1=i%hnX36](6ATjsl
%10??]7Q>"(a%[7:l6`.1fe&0j6dnS%G'D^['o:-F$d8%Z\`Mg_TVDrgWJWdTp_RRf)k:i<"XuZK(/-SGrC&,!:mc:IV[G,Zr]JZ2
%MK5]2k!C&)f';J$'k"%C\$2<>`_'hqcsEVAZ+Xuc%'^3_rKi?dBa1fu2`V\o2^rd0FIY]i`]$AD<`-2eKpeL@RJ'h0`@rC`H.Ghj
%gFC&Mh&l"_,U_flE#KK8o3:MJc;=M:RGS>'Pi7`_4/:+e#_CauNd]ug-CSGnARKsgbBifTQLu9lO94Y![Z7HX^lYS3`47a.hjP6]
%A)+3'f!fG+<KUP/p2mOQZ/8:Jil*50)`=@]4l`i]YH:MsIN6*FW,W^,/u.CIp=:2<)2&6aKLn:riQ:A,Uu,_*AhH5UYqF?XN\EMQ
%Pa)3JQgL@<as2Gt'I^E!6Co==U0UHoCra_LPneYP1;1U)ID?8m:Sr?YIb6?BWD.:TL^C2Mp6*5`hXct6gLE<V@^^*e\/]+Gljh'[
%#N=&gi@eeU:mk'VI2sm+Kohs>LnZ!]DAKXae-N)hObfZ$#c<EaUDl0e"U,4Y-U([<2&IpQ^a<9_og2QnL+:\<WLn;=%oVa*CrB]q
%?bb#Z;%'#>e,.*&UlbK0*W_#pmc0:%/]0!f,?J=AE"=*R4(/N_n9W'O!7GAZN!m3aA^TmNf,CB(F%8jD.<c()eV'^aA)47Mfj+\@
%IX=.R"t0AJl]0*re,QM1TL#)REk+9p"pGLXEk+7i>6rc4H+@onqt&)er.Xr.;,5+(I.8:F]T2]PkL@+.q2o%\G+7uH@eGjj>S_"F
%8'^@iGCI'J;oZ+g21?cJYoR_5AF5??reD<'PQLR#A`phc*^NiKM4G^"N>$CDgRVrp.TTl*ZF$Sg:a_<[H\WJ;LV49B^cMgu"pO;Z
%f[VBS/jBm_l%MT&$o1*B?Kq!o_rlB%7=6rm]kD73hs(+-N+oHn/sHZZ8L\[Oc(de<c+5c?&XR2J!TnC8W'akFHB_qI3,-\F436/J
%(J/M>ZEGa2b,p0W*o/^1qM29rLd'k0In59iaM#TDe3WVS^*98e83RilgakZF?(TtL-WZ7AZ3O*3Er$-\gYL869t::n&;j5)b-r'1
%Y3\P+e/]AZ*Ul$padnQA0VICL(Gpc!Q+ebPfB=QLG.bPfT4ZKNbWAqL-Z^uIH5$6'VGgZ>Vk_ha<k!C8&=`qi+:YVLf^>!K.ghM]
%a$:[1=$(\s`6#nOh'%X'r(X(+<ImLq:O+N,o..!J;o6"*ANEcjlg1YBj,-YWkml^qPugqX3h;cIdARpsP64`_F+XF4B/gqAo=U\h
%I\%!4alNI>ZbbM]A4m131sTjLB7bE:Yn%b'+mK;URP.;WlC?Pd;N?6',ou]VWo+l;3&UqW8e]l<`C.&Lr.G"egeUjWm0QYf&sJM3
%MJ@5/EH!)EJC"77in"YcV0F2_l52Fg.&qnWr8H"M]VXYg,"`1Ndd!3ofs`dr011l(!"?&BLW\0rG!AM3%9ceM/^-;a@dYUX&>_@M
%2M3WG*PR088^31#SR;IIX]b6a`G(IR.0Bg!8^uIR4EipWMF)(e%6PA*\E'WH5+!ihVBnG-b[+j?lVMqcSK!&2"u.;H6gC:D=1e65
%LQh=il;[LTrG]Ili*gHP-?mc+;G$eej_E?1TYh@D;UZYm.'N>p<#-3`+.IVU)7(ft.umZpe&R5QR76@hE%`hT:dnqoD[uApW`(Hg
%$!den)@542?o/qh>6:j&^@s4PY)p*S"dc!uM9Y,sc*3[rD(E4A!Qp65?Y#k@kqII1g/G]t`Tb_e0[_LMcpae7S\5H17RXpElVLd2
%Mn<K'3%%0_)lNuj],h$/[^X`BAREXH_Pkjb:;[Ql_,Be)CFpFjPHqABZuu.Km&*^(5!s)u3b4(W<KpqFk:o*Rc[&J(aI-m7b^tY%
%8rLgW^(m#p+&`H7Y[5nb62\!I"urkU[Bg8qpoY=49u]],<D#k4>L_k?]cG#?[O%Sif.6sDh:6m4Mt/A(f+B&'dYSWKR;h5GZ%%1a
%Bh=cY3LdAjFZ;7p5EO8ZF<=UrG@60QIp,PAAC@<S#h^&V('OC4o,8*@7/X2o#a'cN3"QA4BG-t*?+dI]l`toDJoe:i2/ucqNRG<:
%@0@mh]ht/-i7,rW35iOi+#rTTXPjC+QX::@J.0)i2HnoAdgcdsd1:FAq`+RiJdo5]j6&"m9G&n_431p/Q]$G^E.q6S:7eE7N9WSL
%h9uX$6*R5?iYl]nb;sjiP_t31dg5\"/#<708<%=%-)sPI$]9OX'Qi'HUpBa>V7:lI>$=dqf3@V-J(\;'\A\Y9SAiJ%M67eDU&?,$
%Yc2A+Fs:?es-WDTDd8od+-JK!0'pn._rV!tPNPWA"5<bdr7C7&q+Re]idAAIL*+%DrWUI>5GRcFCLofD)dXsW&JRP9BJ<F,6GbL?
%GS?8cN=toM3H%\UnqT7V@?DnWGmX)+ooklW]VY-S2J&Q:^,b"QRgmGj&Ojocb+1/WDcC==i7=m&7R5a[:3M/T.r8Tf.*`?28249B
%O<pc7NB!0T`.gUm.Z8+I2K4M>N!e1#q%t_M=:2(UW^05og1`.7+Bju7A%PbQC'3K/>nK_tQr!ul&<8P?B*$S<SeSm2T.rp(D_>Td
%CGT[qf3$K05^J=tIJ6fm3S;\3D_/L:q[OTrB9tBJ>g)Qa&UV%o;g/o#Ij_^agbgSQRJ><l+50We<,^(9MF)%-7LNES0b2Q6b<Unc
%'S^""H'-+[rDF7u\\/u5AUZJQL!RKtY416)h>R47\>:l;=<Na0/OL;FM-ZQH%1_TPehmjt'9SiT\;AA&+0QQ'#)>rVj;4C^A>\0U
%Wq#0e:9o`DeV?AGD[-Tk2oTSt+Q\Q4').1YYP6t_o1Qk>.bbS>M+S.Y(tZ<(gGj2YiQ+1Flr;FJ2-jbkldB*^aCaE+6r.Z#<![?u
%6IVU5F-VC&/Yd[eW5jUV1BO7^)d<o_c+bh(3qr-[OIU,JKeQ,`.IRY"0VN7HK/3K"rGVWOQ"+:"rRq$Rb0$cbI8g@nXo$snED`J=
%fp]6aLJ:3U'_7KcK7Zu?a?&4i%9_FT'S%0`BO.%fBu!*6oXqcpPr!+>"NK""KO&au!g1]8b6f1n@9I91L@kL,TW.JS,*;I%IU_Ji
%<7WAH%CL)-Th)pMMG)mE9P$eTHbrt&]^L,-O'*0]7(+'?et[5IA3f*h'cQ#d)mkZt8';GST3f)"Kgf.+A-iVKNF.J396pp@DNS0O
%nmmUrWr.RT5Kggr.?*OH\jUWGKb3h0qtL"ZZ-p4$Hoego02s:J'$B%NaW'Pa04,XtW+8\r'rgLs%oefDj7lJ6s$eVKd*dG9CZkOF
%eMp]:D<.\fYb6X$p;6MQ3@VOk,'H#KCNT+;pmRh'V1q"OZJ*+Z5(%q'.)k^%6FErr(I[ho&Vi;^4YH,o=4GBg9MR"OjL7AFaX5AL
%I5N&fa^0GQ/3U(uk&)ZhB2Wkkb%aJh<E^DWA%!PB,0>"s-#-N8Kn11<1ndn2[1oejMA)!aY(f+\+;MQS/UMs=ZHJK(5PjPK;bhsV
%\pnaE8Wb"t-)&7&JNmURLi<[G"&$E09GF,qiUOT)8M*Ei^`iOP@Q>=$-pG6-01c59a\We@#)5.#0\q*N@mA9dUCps?KoYBrfY`:!
%T%[kr]jIrlKVTG.L#Z'u7[Q]_-8`]p?V,>Vmf=Iop#_RAdplNf?6#r,XDQWo"nh_;Vt/G,>SWR@Ob\6\1?$(q@^LO'=O402.b`O5
%Ku''+5lUFW.:`Srq*m&EHk6)K9[Hsb'SFOFBR1)k*M"3[5L<NZ1I=rdE@96FC,2"6S3Bh_.f7U\S7$)X&/:-+#pl$IE?pK'T,b,h
%/<*[_<(X#CKI`g5ZE1%YYW*Q<))Z*P7eLhu7Zq2LHbomk]//=d;(\DCXnp#6bU8tcnN%'KFV_?2B>M&AEu#1(1il.'+/OfoCK*I2
%ajf*pDccZAmmcNholJ,ScuQ6Qa4oO4;l^%+m>B$UoepNA3mE17W:l!lB_A29ctdCr`1$^albja?,-ufG@i&JJ?K>m`0f1qD.)H7.
%V:@PI3\mOg[g9)\]$6VjG*D.$:/h>_>+3`*<%/YS.)eX(FmnjMMKA<SfeD]TY"oV<g,,BqFINt]]N'#LTh4&S4Du6]1+ThdePC]5
%f8fo.<]^s4]p!"r,S?r3+QAl;ci2V86MS6j"TRg6Fh?)<[Q-L=qHcE?`T\(*oR:=k?6k_O@+j+Y`+E#-"P(<Ap"b6?e@Z(U0i]0R
%_Wt4F.eU1J3RnjmMc3USKRPmPB1iguL31=dMs\/Sh30+ARF\iUUO#5^;03)R)^4LF,e6h=ee[qshUE]0DIJi27',%]Qa56@Q3MGG
%q2C/uW+=A<Tt4q.mojlu<!=J@86-II\VBM)W'=8G5E'>O+0,<W;Y-;UoD:,2Z:5s7LVZe#"D/8aTQ2K2g:.S4h@0[p?./!:De>P:
%6`/qT/Af)3V'VBMGl@,mCno=!NfJG]I-=sK$GcbXS`1sbW>I"B&-P89LX53[EK_MZT3g:UL0ORhP7A?sQ$UV)R@T5p24+6<3WgMW
%2X^<m0rq8PP>n-0q^KB2EmnC1qP-pYY5iq?P<Tqh#Jd/`I@l<YKGTR3M[hGFWB7>?E.mRp+t_F@i@#1ibj3F[d1n&Rh6SP7rVA[,
%[`@;j#KO,sP.*EQ$^XqAno=$.So2KDO&fXdFA6;d--KMTWhY[c;e8;)/hL8(Z=/M/ACXFVb=\,d.O_RkPb+9(>WSe-@Q*HGFc^bN
%),>UPA9#V2rAoba<#k6Lec"ed;jkQE(!1nsn9&4.3'RXSRDp"4+^1+EXr7^kB%iZkWj^W[fGOLB[p[jI@W<i6@gU'*K;?fQc9iA>
%+eA2?IBIQgoq9kA7jAUK3c_?oc,>N3HghfoU)0d*:l=X"q>j+$gdiI]BNl*\aH;8uF8n.OF@%EqETQ/#ZeHc>[9hNP!`J=sc'1tF
%V4DlTkYfkn&_H=#5'%DmS2g9a)i>!TCg"UX5An"-Afqg<?S3AqI'4u>l]ru)->)s+gZ9Y,cS]h1ZJ]Dr28);39"++,$_nupRF<k6
%Y:aO.MEg<T\q\'D"94[7?t<gnXKnKT1'q_MeUaJf2?TOF_i"hJm#q/$rb7.;P3SdGJt>:SoGnK&lk5e69jKmNHU`$XB:W$C)]s]H
%P"e,E[\ge;\iI36W5Tr3)#Y;M7,FMOCI_MmrAUc?E0]K65M>Nl*U"g:V(Imo9]iKS?.u"8=5kg\$9YV$n'0OTZiI&7.`ESh=a+tn
%A/Qk]GL$/H(!*uDPK^8>0l2G0_5o"QKmGgsY=A<78^i0mO&<=X:'$/hp&0?_+BHZYXLB1LV,Ja6:BeC6Tm.uONneeZ.[rha:j^Mu
%07t^*%Rt+kN^G[n9)00u0B^rgFDV_sPXIaIWJ-GRdX-a5KlWoeZS+g3A,s$_Hn=qEjWu?!PkQ)"B62p&_e0A=_g&%cm@V-)T1!m(
%F"97eFqj/P-B?TF+aQ;?&)M^62g48ss/!FZ$+H>%*WV5WHf*K%j_bEW-Yu'r,8?h>b<jH)k6/C3fb!4Bn-M]$`\'Fl!cJgkcl/BM
%pqA#:O%-Scm3ejdP@5N"%9BIFj='[jr\Q,X0,tckp66mu1,'FS<*olJR/2QN."%uB]4H]-2M*P#0Z\"M$Aj<laa-Y#4#q;+aIS&/
%c>j=6SM:Kpa:lQir]t9cgrQGH>8\L(5a1*uh1X:V2_1ot$3I/JqF_=iiA"AOWsGp'GH89IRE*r]KK@5B-0;`%6eRnV!ap"5a1PDj
%_g4F1g_eC"(6>n0RtPo5=Vls]_K(OK`-`B,.3RCbO^ppIK+=;8;t\8O!09n!m+uc.G`C(nWe:nVP9FSjlk'mLeYpoJs1"AYiYp)"
%j@\%5-%eX/cZ7,g0n^[FCN\'-o=]RMo9[]Q(E,b-("X;)iI!$V]rDXlHE&-+?Te[c6t3OV0e1\A`%Ls2FG>\JEfu8RG8YeC;C[qS
%/S?0$R:TmqD_f[AE`""7<rbKcP]5h74pHTlEr&akY_+9oEt1S':QLV9A\g.]jKlUSRF&o7mlH(RQ6rj<X7j#B'G7'^(f;^6rXs)<
%lF%4@\bH>I?n-\]:^BcHrO^pO7FbBiWO5baiDVn:0=9*S%UWT/:M!p;J"j;\rBVC1=('0tI&L7LBpk'UhUbIr1Jh!'f350gI>dt8
%phZl1<PO"3#<-]%iZ*O'e>2%^/GVQ371YUU?>`[W=V4lK2D$8OC+D!:X-@\Fi]=X?_KQAq%+q3Zpfg/AQ@.Hf*.4O<VH%>'*C1ib
%V]`#GGq5Es:U[*V?VmY(GD>&+b<O]`"&IrqVGg+"M:)VFd+,XdD0["6obCG0f\@W$P-5ic%[Y?2H&=DB3)@/<:;&l?m!?b&U*^St
%MSSRQ?MneJ.d`)PY'-mP$(N<"Wb:GXC!*"k]*AJdDaaNOP=%:QW(ZAYVAKBTHI\53n$?o\lc$=tpoO=TOoUcik[;6GM21\9EZ,8/
%HGg0D(*e9bCH-nS0;Ia%=q\0p7_iN"KWmC^lXcP8f`5.V=[gQJ1YVY-1:<G)(5T=M*`IcC];fO$b3qt""D]c,U3[Ve_jX$!B'VrY
%0L2Yjf@du?e?b,LI&FW`>ljA^,m.\*/?cl_ahEGTURiH1-U0-aV?m0Rc`"_<,1bt"!riBe"=]m.m<>U!("c,ZNE`-nA1QC[C13^+
%\(tg%n^98BIUlH9.KubW=65=f]#@)fj3Z+\c^B?[!]iu[7aRmPc2^0@2/Lg4eGN6WitVh")X-a!_GO<>.5N(VO5#rhC=,/T&r]#4
%@cumd&`_"1D:]P7T.Y,:\@ohU@[G3o/^"Kn2Gm]Gd$Hd;BG#btmf^Hh\AOe_6LQ)NiGCmcF4'ut3fY#7b>\d%keF%tp*,Q=\i?h5
%-Yn=um>!X>$ZoFLUfM&Cldqp!.t`49bbHKp7udX.D#ST^E99LG-qL3%>,*N1@+;o(RTqFG:$+kuJ!ZMLmRHkD)A1YeOO/p_hg.jO
%anipq[[e;Y(tY,KAei=q'7uQE*qnu+]UH:L/rWTe.5.=6;]\qd%G=.f@!70j2$F3Q[S)+Y#21-3fnOjeBj(9C9$?'sIh^g"D`WY=
%&G$Ml#];$<>o>lSJmoC[7.L-F]D[N>D>4X5p$VOi[Ne5Z%#A98g?B@tDZ.h,ZAaDkD^!^-+O$>>r:uY$)UPh>*Q@*h9Mbk0AO+]k
%'d8RQD9P_^(@ggOin=\U%>MMl8U<gB?G3$(o:G#mci&su=du:%$?to&fYpX9-tL%+Br=_Br@WW0prUq?aeUu*]B.k3Qtc-fjo3_N
%qjW;fc[53,*m9a'UaehfoX,d+4,d%3(_djcQqD?<5b"6eX?E\EVoQG7Im=d,`OK:+Xb*\dYq^:rO\<!8@/o_1W4osbXXW=R4#ip=
%e)D"!S*(qTh-KrrVt^*Ln*@/A.d2:$["&%H^\d/K2ui$0n,MNgrq;*h^Ai,dqsJD%k,[s"r;Ch(rP*^>JP!Crec57>Dgq_Iq\iVK
%+26:Wqm-"ZYQ*EsJ,AN"++F+Ss8Uuks4qn^B(qql+27XO+9(g)qjMKuP5k1QGCTMMDuT-bs7!pM:J^o#++O=MZG6;,qqlo'bn'j+
%5CN-mT>(-kkAPX1g$MKuq!e=Sqepr[rU#mM]<?MSr?&cN0E:glJ)dPIIer4*n+Qdq]to[LIIWO$nBI$/q;JrXro5s+5BPZW!/kEu
%&t]_%).FR9a*!dB,6.LQQLX$/0.jR'M^VZ]a:<0lblI'fj/fKtBVdl/QGk5>4?JJ]PBd$>R7br:BPg1pqTU%Ud+Y&#^'P:K%UZZ6
%]^?7C>kSW,#u.'<$#WPE5)pt0l]n,)0NW:iq*K/d\>_iZ\:o:`%Gj1.%FM2S]88RMFkS[^RodYBfj2iKT';CjgAt.Z,5.3/i4ER4
%?O?tW-GT(Fqj(,W2K5)En:fYDW<p\""I?.V+>;hu6\VD!72"<IDajf^Oo.*/b0K2\XrE\C"5l)tUX[biSQ],1W=>lm'F**tXTN4K
%\Mrh<r7Cf@eXea8/t*Dq"#PoiqWi/?b45S:A:eJd>Z5t^='qD=6qKi^Eu6$@>mH"S5(H,N`=kkb/*l]cF,N/of\nd06_d8gWq4%&
%<cHY`Gn,CO70(B,"t+BqCek-/7JL1.=Ih`l?1cO8<Q2S!NPY(Da^S0-=Q5ksp5DVV<fU]f*)i#/Df+/iZL6;)(8l4&KUcs-e]jiV
%=RSuqdP^oboh1H),I<-jeY?kshot3@]'Fa)nqiZc^kERl:cgdNH%8mo2q+2[T[MGWn[&C9^^Vu'?dJLR$/f3l<iGdUL4Kr#Lm*2`
%<cKE<.sb@;1^rNh/<7G%^1od0fhnu=Ge`AWL/#?r;]"h4"BedNV%")ebN^B(nbRMO7pKW(/Z571SY\1%;3Y9?_,u^k?e+];e<lpe
%d>P2&4E:,nQ*$Mf[nedXIL9N7jE8g>GK2HC'_7KrH3[]Y@OHg`APr^hP^'L*o#gLFDJV\nA5*Zhouo#2:GQc1Ud].l/7"GlR@BgA
%7X^/)4^B7a4_LG:SS2QaW!L0I7[,l)K>j4BCOJp?C$O%)`_7XXn'/G'N_U5&m;N@3,S4/JO8)<A7Y2V_lR6n`9Vd!#H%ek,##pF&
%c0Ig#Ji(Vl=JV(^AR5h/q,;X3lEl=Ge;*AJ@4rG%<?ph>9PB#lWc@fC;K5JF'Vro^f>FT8=K`4G^-&McT\+3-#8IS6!`F--d]YZs
%_X;n2h;nRk((64:ETJa)P\"*_FaJs;^I3MoFFP;-+>)YcMKL$9Vs;f';&lI.hIJ8Ea9'tO$pjbY$-\hSSNY,V@V([o2AN<p%qa4D
%ia,ZbR3q@Ylu"sO.=oT)@F")M<U0Zf,kjD-j8VTC<j+$i&m=?#,$CmOV1RU4,6k*$(9,l-FXU*c[S1!&/DJ2J5WlM#U"3E>hLdiq
%"ZiAKI?s;68@fpUlds@hlhcGo[PZX8Ui4gj9&1%n5!K&QkSdtdWC96XfXq%uGbnFH@8(u<]fX*>V&e]G7+8&bAP<]A[%!YL@W2eJ
%jPeKJR04afeSJAJ,Bl(($KigK6%Kh<4k?IV=A74ohlIaC]hp+oNrfZSSit8#"'n"&#Of,+UKi(cDgFS:"81WE"dM]iDUdSU;5dMk
%,s0&RHS&/?6"4oXDK5?G+tL-=SI6(0oR2X45DE-9Kr8O$!7PD8&bWPg5lOkB'Mqn#V3HBVJ_o[We6K5((f3<Is)%$bj)/rgV-iPA
%eS%9S<.Xgp=:rBo9:#_"B_0qDgb3*j(V6N@A/oo"G$W_5lF/`iEPqcY>Nf.g/a([S:,u+4=^tTH>Bt=TFS9b;9U2ZnZpRB20_4;g
%<L[S2&=\<\Za)sHYEhVPA`)G2#ZsBOOY8<%jKstS:]%C+$1Ng.\U&283j`"lX2LBQOsTR$>tUbX12528F/oA\4k:jTETmn;pCKb\
%ICD`s:U4LFo%J4/7eBHL)*^9]!\AYZ,)41YFfZ]1j"!8jGN5i._rdOWO3FRE,32p!8hMt(]HF%,:4#ZHLrV7rH!33Z[qspDI_@Co
%l+.R]?*YI@Q8M9m/b?UKC,DCaWPD'a"\"e7</3rkVV@!Qltbnj<4159X:d]%3NGUpaC*22oR2b)WI&%P296Cd[!@WDQOXSmgme(K
%,]Yq<H]X#S3'QO3I%[,R-j>,OXI?>(h:<)5<QCTJQupE&=1=+sV.?/Iac];Xj9<%L]3$]T=l4)@ZO[?4Om'p':)m;47(>4@#NXme
%Dpq*qc$NNF7s@rD8/+r2ZIRmReiQkY!sHV?4+$3$UA_X5G1:!GJAb>?K),9l6:TjAbL.[l0t!kR8;@U2\2q9FAb-Rf7-;D8U@ts^
%r0D^h_;dDj<(C7^[)R'Zq8V8KTMfU$Y5M-@7EstFKS2lq)QI\)X(ZVW"b(C<pQ:"q(5f;-D%23MeuRQWGUnZoMW;9Z:El>HP1kJp
%(lN?*T0:<INfbl-77n?oq1N:6NAW-&VAVjLVEp1WK/uP4*TNVbG=3sURT^=Enp\g:%)Ic+Cr-hYQj>1qQKM&)d-S0].'N$f!Hah2
%S9CeD8?tqE87>K.'h`03-5dMKQ>+HDG'o>6atgoQkrYEj*d"X<LfWb[bIhU:o@!q9la'3N4Vk>ZYP4k"[VTbM6GM@]CY@(QrKp_l
%PuL[L0(%:%o0.CPKoYWH]%7%U<(n?s-Hh%l5_@W?SEoEnZt93!9f3BdfOogBh3XamXA9oJlEA\h)HPmSSE&n!HY%=EJu>m&NL&,!
%e:9T"+9k-?NZiu]4ip<M0i!Nfr.A%_\Ub+mQ\1Z8g&:tR>`:Dg6`SndR;N/aLIb>@oLX5QnZF%j=P_s;42FQ-XWB$WZY<RFf?\fW
%m^f8OMMOuA8[u"0735.G/laoc&sm3%%(@dN4dMg7=qY!]#O@fZ7oMDu.G1.j?BgPCS6mH5N9Oj-?dJL2.$jG&e\;pA1HCo.DHj!I
%#OH>Il#'Y<Q2UPaWd1q<=@c2iW803X7V(q0-X#<;/b!\H3_GpIP;jthGB%/M1-![]'-#XS(!>VB26cArdl#,05.t1E'6)^>`JRp"
%]H^W9gIkQ"6WRkKgD34f<\V6L1mFcM<8ulX;Ka;VIHe*i5Q/0QoBTpS=CSN%'E!H@>?(P0[;JjU6o,j9U1ZJo<LJ,-"d4tL*6g1B
%RkP(Zg+jg%*Ekd@qFI='&>oKoC*4rO5Lo(.amRCL3@R3[B^LV_DM,H$\m=!55rKiZ':5Vf(0*djXkIc?b4)Sr[8u-h&o5ru>`pbJ
%5p\].]Y,mIQcu[IMu3<-Fu.jeX7003on_X9R>`T<*&8c2(8CFNX!WuZmPMBacqHR!=Z`*T7J@ZgML=_n;4a2u?c7Lgh60I!D)V5s
%b(IchU)?D92CP4[[]e[&G_gBA5[QqI\n1h3efCt2BkDf,(L=UJ_rqr*,S&1)jS\M_Dfg%r-1b7NCa3[uP2=>'MXO;kBm2r<Tk`Z^
%k2*Ip]>G&BL2n34-6.o[9>mr+cQ4P2PrI#q>d(%S,qobsB2mRdpuc&9L*PCb$]21.*.Z+0?"qut"tY)3N'!V<c[">GiH45#]+1!b
%JG-?D&UMXefarigT'8'j5=$)F0B=^CpqL)q8H(9L.Y5NnVGr(Q]dN!l5eY%2,9Volj:L@5d>]X5d1A`gO#2#\OrU_mY"Q)mQC^M8
%9e>r]7gr%@ADIoV/B)%c6:hr\k\%[7l/q?Lj9&I]8;+u7dVUU7D0G6^gbR;XbEfdsm2ptJXpt1E0Ed7C;ij1DR0Z=ZHb3%`.CqcI
%B4CP?fW*]S'G\RuEP[89hAI;g:5E+hAVW73F/@,B78Z(g,ZEdPZ@;a7%/H)"'*qd^rafbDoaB$-jls*FZL.9^$bfEX3hXMo0\FTs
%ZI:lH3+UbS=U3qI']W+;g@6@<=qQYW(j#l`o<Y.FR@7\H8U\Z!B\Qm4Vbp9Q^VCF+dC;SUqS[99V5?m*p8&gRa]c"6*9(^sP#(qK
%H2Re#Kucq?0?9$(77,:`KgZ^Np8&%]>f=<is4N*[,,*?V-a,$MbCje;MO:[L"&-]["64+V$AB"*FCsK6#tlWZeud2G01j">1Iu!L
%s0?kX?X!BLaQV'bAb4!3f;3ub_Z_dL[VPc^hW@8GJmt.7L1K%"`U\"&$<jf3V0Ee`V-fI57G)^/-Sf(f?Nri=lB=^%@`0t'$<NBm
%G;Kp:`aVe]ik;H_X#Eq5eoiucLt;NH*hY(A/"*.:=[/rWX;jf/lh5@)RZh<&k"D#KO%lrG?ODMZYlt1#-rW`@5UVp_nJ5<?<kC,+
%G@pha3f=NnT=hT:n2BGf$-XYSiY>LfE6t0i;7`i.DDns=Z'h0$kn>bRj&.RdV!S^blmS1<=<koBmn>K=BIumQP+CrB_u6]A]_#)W
%BZf1.V<e=3IEQB>AF<BWDk9qK/PB!4HTLEJm?5g@%J:#"qZslRgG67H]fA@.%cG//4_9J,T["-<Lb`r0iTV)H[Do0+SaF8=Et>t<
%"]au/[OaS`RdD?<%Y,`M*&!^g30l;A&ASH2f>pFM<uP`JV=5m&5?XL%^4GCU7$Hkt@*%aM9[l*<a^3<ka3VZ50)K1m74k=IL/WTU
%LO3Cg9a(3G<ja1^A-WiTm\^7$dj.XAA0_t\j)d[Hl^l(!7k0oO\1CLj7)[(Cj)U"MH%n;EG4#YgYsNEcn\1rnbB;"@6'23#Pt_UG
%55R#<r5b'GLR]A^fTN2eQRp[^>Jl9qR'`R^8SYG\$VfT@)WW:`1apd!0K_h6.Y,"NG5kHHAtsc)N3dgoDHVCN<J)NNqoNYoTDMN1
%@[7Ei:9p=ll`(UBbZo*76uaiRBpC&T$-59RC=+;nDlWS6B`-$+GAl3KYW`YsR6LqSq+JkV+RE&Z5nntV5AmUH;Fpj*5!`<UNI-K@
%"ZrnQ)^=3T7J?Q^1'kIp0e7&a<<YOBhcW'NNVa288#2#Z7#ecW(nB1t=n\N\:=1&DFPJUrU[J1$Ve)juW?bt^ht`k)mGuRqfTIQ+
%)h:=@fOiu8V2U;_mNqj@M<Q?Ej0PcmC^i8R=>J+HAc!t'lD2)"?8L<K6?ZpMDXGSR%5JL;^I:p-(8(f`<[bc3P)[INgscohJq4Wg
%VrD1?;JAMS]Af=62egh63@&TM?\j9)MITo%Y>-H.^>fI:N+4fP(OK\P4#ND]<eQujOp;]nPRXZ;_WE2lFL15Vi%LY0CZdVCTt&Lb
%P_-&"0!jNpLG6'@Z.i!#hZid^^I!YbY,s`&Lu"<\qKa9'b@5@9O@(jL].jVl4,u^X'-qj.\mFFM]\T(Qa0)NtmJBE9;=q*l^qofY
%hr5fo$*ef<Bl0RiA_=3s-O-m.;L81/Q7K3p.I\Qkd!@lGk)lqXqIM<".AIi6_0*6jl[Q54C;/OP2s5[XZ64H*XTC5t1?3@a[Q"Rq
%pf,KE")ui'CHX9CK-Xd7<l&8>I-tau[I0hdF<pdqmOJL@n*[2$WtUBghJiI1<Scid37G5XNd3^n-sp*<MerE_Tga7\c9=Pur#E^f
%r\>0ba?g8[^N-@2?r!G4?'%kjlfYQC9A6[F'Tm.bd*qZ/..-hU(1s3]N<OL%OFPpH_"0mr5Nc\Ra(M_bIrPipf*bf._NB\=6@FH-
%N>M0u2]&Uj/PCW;OO^WQ0$-^edF6i\B&C!.KLGhOX=\cR'9?D])R:?k2M^V@Xl=lH<I?76E#:F_]q"D@SrClUn@9uO'^<o)m9ClR
%C*OiU$04$qd))158aG?J4Jf!!+-m&drU+[s2X?P^%2?=XL3a:63SSm*pXLK9=*9q28^mQ6L7tT_QeZoLLlj-k[*O0%H.?i1FS'uC
%T*M@>*ZTQ&edA$N[Rq-O:\5HA0IO0^`/f&gj&R8H7PpJ"jE28AgH&+1pC6:cd8D]dKhQnZ@]EY&j*p_Wa-jli]Rp;;`@t83$8=U4
%o.6o8\Nd(ZkO>@pCDJ;;m(JO.m*q\2SSo,.4=+F!g2[To;R+1ek0/lDSPRYUJVkURV\!Z\Y30I*WQ2^XU&p<QNRp@&eN%Yu]O]U0
%<(q/H#c(ij#&4c[9G\W8L^BfsEm&%'YDT!<Ar6E:)=ir#0eJr]opR-%,N0"V`no2u,94UqJ/J::`f=i#rC$k/KN=T!`!ci#jj((n
%FC&Vm&e$CUNkr`or1Nk9MdRC-2%X]I",.W<kn]+<'lh21@GO`]VHG*$1t#sCF[BKSQ,<M[Zj<gs!]+^5J#OH;Y*.kZiKU_2d_>Tc
%747U-G5CNKJ*>hKSomY^Z&jW]&_A2mc8*S#>E"pt(#%h5<S$#ECY22;eRPL>1T+QH"n2Fi<n<_S]m"@r/8,d<9.MMqe*(.PE=@5A
%ds@WpeeX+5%$DGQP!4!Mj*_@,P4q0>_5indkOp0=NLtH7(,(W=icN5Cojd\4I<$\VLb+:/0Kach`Td)SALBLXIsnS5]tX8NfgL1!
%DPl1JFPVN9jHbL@#>,jZb-!&SA.?b#/;pOqM+s?e=jD-HB@UQj]c*XN>?#ADo8p6,iBa,kP?8]geZuHc6O?\\k3>,DT?'6tnc`d?
%^9l]%Ap(%e;o+nEZupu/Tdn!8D+GLgCb?)\?.BDIW#k4R1q[nU7lO4h_-@)RDbNS/eo;-e<9G4%AKlP!l`7EsU(Kb-ef#d891b'T
%HJBP*#uQqXn;4t>[4;Rt9`j2=.OhW^;5:-,?Rd[G17RMjYNGm$h*C,<A^rLs63jL$aZ=9MS(%I4p?G^(ISc!14!4)ka+[=TXoTiG
%[,0V=Do5#MC1:]\OFAo5d+bB9Ygbs+AM'/kcLn)u@)*Fe.cf[E+,VeB10[bdm0:>S#6t)G$Y[52'-4I8-'gmVK$A-))!T&7^]T[M
%,GRs@IjsC.9mGm]PYQ<@/5id)FrpXJ"$(L-"4:nMA2LA=l[eT=4!&ugVKUW*]LslG^hddqN1glC0"?-..cGGDNO3B<MQ#$mX0`TK
%JaNT2Wlc[%H4&pZZ49_/PGiRu*3'TM>$2lG>o8rdI-Yohid>q1N]+C,d<B3_Z,c;d#tE?rbm%+&W_epC;dh9A-AB^aXB1p;=A%FF
%YsL%u?h9#A^Raj&E,U>9M..Qh`tkcUV22',&F,:JG4K>m9X5d@Z`/SGIS$!'RnOSgnCkuAW@j-h(=Xjf(]e;W"d7Q:Tt6t[o;\jn
%1!L%jr[G^nX2*:)k7h+#p\"8EfEV1-dN/T>e0_W^ihXM>90HC!*aP7*#q'_0+R1d.I6FB5Gt=^Yd(57F;54+PU=Y)2X%/)Fp-91P
%VsHPH[D*Jn#h7?8b(9N3YjVS!+)T/fG2)B)en6I&>=FI7P'MEoFE(:]-,#="NF%MKQ+n,tQ\&s@;(.Wi-XjJ&@;d9RlNO5@okL`1
%q0*OQ'MZMm$Lao2/=aj4.V9ljb#g`__C]gN6_]q?NS5HuTVf?0nMQJUZB+XK2,nT557$Hh]Ldl'J(cLpQ<4@A<6S%,m5#'hXcPVB
%pc%m<FUh?`]/2)_7r<S)<?2EJLmZj.6K_S-iAP;GMAUUPgb6uq(9@9EfuQ-27Zd(;I0-Nj+mCL/X.j7T<7F#]K.XjK1SbPPkD(qk
%U"OAr&djTV%-Hr\eTt&ePIaGoZ+4`PKi"c=L<c,!g1=PI;W#Be)N*d-:d@^Z"1nWKZ\XEXM-`F?B5L[X4_+<K`Wf+K(<N=*p+:0G
%PC<LB;C<5=WPPT4ERZN&e/9N00D+\5l>SN[apk3Z'H31VlC\?Z<e!Jk'DB^]+8T,q:>j;P[MS,JB5tM1=SlA]9]#6]a74TpB>!s8
%gtQ+.kM"QXbBgdQjg_+&:6$h:6ZF@fn:>8kP-cg<6A9=X&l^$Jk(Mc5g4Tp*$t(FF:dO5A1dS/kqQMBl`#lNd0Qisl+E_^5AlTdJ
%.18.?)9!Q>0`G+31$`e6H4RB9Sk\fCRSR?-:8,NOaMG+kSZf^Ig)sKQWCd2c:M8S43Ino=!-urYi7&rb-dW[rT@+2>/%K)b9^9pm
%5PRMD;La[?:HG:bgWc26M%6s]MNf/[8lFpr;NS[5)-"/o.\*)F'PQ>LKora&5QTfDhKd+nSW@.%ju/k@Zb$duY/rs75W/]4M=1V\
%lP*F=Y"/q.E+W'NTclg_D*WZ-kM.,O]Eie5BmupX3+Ssee(2n*:PD`N?hM7QpuNk3%E;Dq6of)$q-l4h^8Z(6<Z4SN_@KWn:."6]
%#rmIeIs$^MD08(CGTX(tNith)E=0.r8o.eJV#VuEMs;u$3E!<p6&jJE".QIPZhm(p7rP?aaC:Z+[7<:$n6<-)`QEor7QKC4L-=7'
%0Y9AA_u`/g/kFIR7W`8C^'nM%6(-2SdR5"IP!1$873f(*R<[PbdQF>%OiaN<3r3GDV#@l'KppeV@*s8U/uT.FghC9=6`(EI)Ke[C
%mS(s%h2<r1a+7`:0'K3#\$5QeY:)`/#HqD;frnt?ms#q!m0$:VC5LID-miE(WU>EXrMX7OWd+lsJ>OsNffLjS/jM]<Oet1\dTil4
%\0T+)e9Y=,M#dBqe-;h6HoD9_/2L#(g^i']93fsaNl_WWSPW:r2n.OD?M]XFh=>i5#$"t3lm[f*k]Q+6_]ana,FL#=lsKtu_[?!j
%Wd:B0#4-,H[;)GA(66jj_uASZnV^Ch'-2`=VZE5C*<5bnTQI)dU5Gg`1D:Z<(e)APPA:b!>S3c7@O*a\-RM*[\jui8B!u7+.!Jkn
%ErrdL3[krZak8!UX6VHQEqe"pIAsF<^[#AsQ!]!so<DD%_^%Lm@&sMNn9Nkgh;3ZIio@&,_qUln_eZ$u*-W"@B\N\,!4DZlFmq'W
%Pd,992c2jk7NR8+.;'pb1MERO%<j+]XeHg)NGG2AS.$D:[ik!PEd\ZkK1Vn^4JMtFPK+k&&)NTZ:n7>(1Oaj,M%3il8-YNs5RGgh
%\5Q3\N_8pP0@/6n+Ni2B"KNsT"h:RpU2cZMe:6u)Uq.-e%pMgD,)KB7)4ZA_$"9KoJm?FUT!T?AU9T,.Kq`\>1]XtWZ5?SsA^_eT
%?d()fQA8%Wm@&paF7uq'LH^2b<N<%KcYKTghQbgY\G@g1`!4_iCh1qoT]gR1g>R+1XOTDKf55,<:n,X1.N&gn]Ac?jj\)/Sk9%-0
%@GF#NbYC!"/Y4j$8#'-q<BRDP+>H0rlM@%u"tkO;19EV_$$'iC'96X5^q:8Ag>P!UPZdk"QdOQj9;;oaK;90s(K@ZaV8HRqasd)u
%%'r;j9$obe!:3m1\eoJlHj9k<`l?uhAN-]9Vs_L&o;li^n^nYak7ad'oN^"XDo<`J!%aZ;@I"/qlb53'?RA5?S%U=T<E$'#_QB`8
%iCXN\Am?^iKJM][a[O<jY>)+1?i-rlFiKJlK#U&62IqJ>!s@N.&FP"0;_"M#E@l/BO-I']8$BG6Fs/\*C2orkr%?[NOpiPimq2JA
%Ng@,%N+Ns>(kDh*3nQ.k7%8q4i1"K%;3,Mr&adjnBi,]ajQitd3RN%O_bFG-\rR@foikU8OcCEfD3ICne2NGnc/FBk`E,LE5bV*D
%c:fn3fG#!rX,j.TJC8^;k+/c&0Ob4TC-;.pPmHu.j$)H.B:u"2/)m'S7taa>%4u)lA![<P:Y::"[8)P_VENtk<4CesMjmKC#h_0*
%$RDLCRNY=_Y+Q2W[_Ds8YtKh.@4CbX)?`N/p!>"^.e_]L_FD4H$4aQXQ,9h<@r(`mCj0?>m%K7C_+;gQmADF"=9U+q)Q9CjLE+m9
%_0bD4@"(e3h+TeLQaqR(P,Sr5P#<L@&t^u1*E>jGmKiB.)*o=mW%/%0,KPA/`HA-.+jL]aji_VJN<[&(,2Z'VhTe[u.jNmu3%;7,
%eu?U"8bM)k^A`r'3;;2Mdd=8J05@#@m-Z)E)Gb3GQue%b7O9jj508\H_Hc8+@,SQHpk^9:d#=qfBF5+@ICSfOpTpsDQX"$Hq^R)I
%-.T>K4GIZ5FFmW<7bF7RK7%Ygk65dm!1ddcWlV"ZAr*h1^[`D#FsbYWfqH,P.bdj!$b-84Ul[j:/15A$87Dn/K(b?j.n5rk6FI]>
%=O-BJnt.+en;FSAOAb8H@gNgIp3YPt_F:X?+f<C/"+$%CFQd2GPk!J.QVtP$6)]DJ(;<ZT.0tA\Y>e_&.d##T56?#MALW1+DfboV
%`!Z,m+aP0E>@J?OUik`M,n+6NOU<80_'3Y(Ts]b5.o"USY&/`!e*08cfhMFR$.?f,b"JpRZ&L7X5)*92e!a]=V,5usBWXlF1cW`\
%i9s<W`82c._l;knQj4CuVSYk5?qHfu:`R:&Vqq1&`u:8mXcW0e$(G$/+POM2KqLH5e]R$gAW-gNPIt]KD(D'^RsQlW;[r4YR$#^m
%S?2*Wmj)>\C0o&qH_H1Y2cL3l9*^=-&Ik=9C%=CaJcYAelW='YM4Ottj/O+DaYE2JUbMMF>]pu#,R]RXM/D^;2'^-V7O),Z&\fPo
%(U=0%FQUH/]Q<;O]@\Tr-Gp(7GQ/[))AW'7lgEA,6=>Ml3A:U0I02F(qlqem[(C#hF\0`3fp<`183j\c\m21\BcnDEe2(,h:BFpU
%/Y^NC`<?'Ik:i\f?t)3`8Cq!kK<MDmYQ%\5!eEGA@K$c4.Q1(-AsaUBXR7n9DYo)>d8)5F:YkGt!snI1?oS,>VHPF'5XE**M2c<Y
%rimLKSQSB^>[.Q7MYO\+#XU5GD<Y6ji;^FL1oq5J4em>J/JUm_iUXnJ:^(tWF\1Z;c[)h0I-hfcs7:Pk_^jQG@;[.o7mFP=dL,Zs
%mK&.oPWJC_dDWkPHC<8&:?qs!W/#X!;7#4`Ush4!d+EAQQohFP&!8TcA%LC95MNMEhPbFG6/:A+k$/S=l53?dhAb2SX7e3Ul:G2+
%"W,E*XV)tVmS/%"&[`h77X]<773[nZ*B)qIbS7@(^*@8$#mTMPdMCq>`2ap\6A[TN8lZ1g!$IF/s&S/4;4pf_+sTU@RO-^(iuAS%
%-ms"Tq7#Y;p_F4T3>J$CE-oMTg<F'u2T`^F3>6k:fsc;,,$H&5\m:oGWJeMm\:JQ=T$GaPN4(%,X:*KHGEBCuBV`(*Bg3@?$pTAQ
%B$E$,Xuq"gnh6m(Z/,u[PU^HDS8u4oTu#G.+6uH0WLGB#W%anP<essph""bP<7$Lq#-%;1,*QshU:[@BAr5`U`qa<a.4!?(E$k[S
%LrF*qpfOEBR-*YmWYFbo@uB`e>+,WZK3$kX3]\ciT7X#%1Y"4O`C$T'n(B<m'(_3`k```T47uX5mLZF8F0ZV?U&tF<GsG)(eaSX+
%mO3W#6;7AM&fA\c,s>V](rJSAlXiu9qKCLubg3&l8:uBn`B^hgHLX6L-_(_MH=J6^gFAD@SR<tQYs/&K^4(*h>pU0j>(LNfdbDuY
%j@pR#^kROk1n6LI^"VN<VA'B9![Xd`E4VZ#rH@?uBA>_C1aQ&R2"cKoD`mUIGQ78E1^?20$k<dL\HZbiR,"u_IffSqTWLaGPE,#I
%`,\E+eI\;C%92t[6UYP1lFO@W9S/U$jXUg+#!?_DL?H$V;f_AK[0mCQ5C=$%+.*dOf.#W;_XOWZHIGM6R,%%4F63n_T/+b<e**Rc
%XG+5=*TT&m;C.+["!"&YWq+Jg.3*VZU*=k=7-eBfh*Gk#(aEK-8h-+to%gAdLm&+Q`Cdlig9d?)>6L@N=s][*@T@DtAnm1LMl+G]
%/o(jSh1ED,&pPYj6PcK51re$]m1E>?S.<d\G5BjcV5%E9K9eW*ZJq,X$V:W\#98VsGT$9N(DQ@2.7Jt;DjXs1E:Q_fNjS2mJ;[A"
%Q*jpR%Sb&'8/bWP#;FE"qf2hVFAt(*E0%j(:4R9-jVtM:a],p3:e8StX1aFNli:a":s0a-S@oAt)@&8ogU'&=;7>f-__L[Sg:=0i
%CPMsWL(uYTqefRC<Q\<2j8)sNr^gqi"C_Y]/5rrOE4;(GA`MF5C0%T(I6G]=B';aZ-kF5b\-(]`c=KgDRB9M7\`sB;b[r[:-t6pa
%)5NfT5a2B3Xb7<]`=iBr.:2Ib"?0a)8iHRagM%KpEI(3&o+Ls^YaJRZ_@?oW?$.71k+e;42sc^:!#H$1&.!W?&JY"gn;?JnU4BO)
%T7W\%[n*iM&X<NBJqEPC:upcbE>&K$>*p[ob7%7Y2eWW,!>IkI6$3tM?)a8VW4LbS#&(T#D(.P52<:(&hCdH]"&ASo7K0CJL)P<>
%A*.hHpH!bX\MqNAXqqP#?-qI8No;?Ir$i[$@Kh^CMg"`0d61YY[VA/:,OWqS,Nj`A$g_CBlcjDgj_&p<-.Rj\V+(3TV*N:A8RQ>i
%r/XgF-Ze%V<L72aRITt\YGUTF_.hMqkXI%r8F_gJ.!Cq)-t`'"BLVJK-f-#u@N3*CodJgqK=>?MNcr@aIXAt&f+QD2Y>(VGg`)lX
%%IA*Z[C$'bH1D[c`@g"Urftij@\4@jTY(<*bI`RRCR.`u;%HW0i&YI!k<s*t_l"WG4^V,XCW%=g4QUqod3,jG(mr:khs1knQP_!%
%eB,2(>%a,?]U`!'HUVYKWIE$BcT"UB^?![Op\>RtUFXpBg5Z;r?)L-OK;ho>9+#GN(%daPm&15$c9t3l#^F#j"G8D>a=UdV8<d=*
%&B(TK="K(#6\Z4D+u>`[esskfj,m#)5ie*)=;7aaP:=.u9a1]6LHts0f"Pi>2Y/;*%X_S&!+thk=0mQ2k(aQ?q3F8OnCpYliVl8n
%c6PELE1i](7?.BSB:Fi=5CBE3\KPXBWuH-jb)i9u6"[>>,-X<FR0Z<gi<*G_#DSp?fQ@JZW\:i-9.O3#K&0cR43e5akbnijCW'sq
%n^?,r8lU"q,\AnAfN_.:_6pmjamfYsIM1^4&>*@S9NB,';AaP+:0$7bUk`#2$rciK5YEXH&'<gRC!P$h*Ei-?1MQMkBlY-u\s+RH
%UWD@RDJkE)p?Tq=W`sW1dW'rI=-:+F0^RsW!?O<;CW:ciE&`7Z:,S%c?Y]AJqfZ+Z'!DlD_f3%K!JmX``E23M)"-Z40spnBjdD-f
%.RqP.f#--7ER2*BTR9h`:pYe`bJ^\;)n!IPX9#G-2TM]>TW5+UMAju-O[8:U([%*`E/f>6]uqh^'Zf<N'EtQY7>3Kf//Ri&;O$qO
%#"9*YllZI72L]lb<H$Z%<S'O[331>Z`;bR!Y,[[U4E9'2[tdNMI*CcE3]uG&eqo_X\_Beh(H'XoI:^$Z3VfVKJ@AOZQgS`B1f$n]
%V`PMC(5dZKeO^2aM(Q(A^UEB<U4DRQd%kI)1lF^HhZ,7O*R4AcG"P^aKNs$&;+EMeRdG_f&NKErEsKgOC.sQ@Cb\n6A=.n;`B-@Q
%XjO;f2Edi4)P)!p'HQ"jROMqqjfP%JH`[,3=;1J+X\[:M(i^W'&VIhohH`E`h;um[I!CW)/;hP<b(8,KACWK^T!F?=^lqI\SaZN8
%ahI#q]]WYHKfA5e\M-bRMn)B&kG#B9PHh1'T1t&hIQJF_%s&`rj/gb[c&5o6?b:E#R`$ns:#1*CSSrg&d,bq/0[jYg@:"A^^U3V,
%dRaNuk?aA&Z,AMp:sDnsODa1KT$,=*i#1J.&'s@j4_rXJ"i1o/)_!9aZ-MtUe?617b1>uOG_)loH4p7nqZ1>topPaOV6>[1$ElDc
%p&e[sF4o9.2n],Ks7ZKih/@f<Vr,8U[JZZ3qtBdAd']9bci<XtDq=s`YCEA>E^"o?5PKrtr9urMp8@ZBr:&[;IJ)?eIf/W3(I.c.
%+91iT&)[EL;]ccMYA78[C[9euVnVuSZ[U^E`N$01rjC'6J.J$4#DF?dGP,\@SO&-"RW\Yi&%D)C\`gJWG.q\LI<3O/-JktjZWTK]
%U)NG!r69/os/4c1bjOXf;Z;B6'L2D;[ndAR)5lX>'S!qAS431R2>cdk0:K4sg7*b&oX3l\5G`/lFc4<5:&g;MI3qHOXcmIu/Z"Fc
%Gb0rDb:EXN_R=3g_Jdi-ctW5ef07[5kH9$ZpUAK!FQ8%nBt:c)D:)@#Er-'-:tkR+Fe:;#q691fG=UWT4St3*h4nhYBr9_[rhZdN
%9!$p`oU-%*._o7ApYhTjI;a*i?1VN>K7kc$\'9'_LUG]Uaaa0d]>+=72n,5+hIs(XZMSt6r[j1:EdQ7G55`1nrgTO/Is^:TCnlE2
%7rG%DO2Er4C;*df-@d>rQ0jaLHQeG,X4Aa"lo#pshq[<dN.TATjM1<eq"3&6Tf,29(Q8kF`qO;$&(qIHC]_2A(+>5-aX3ZWm=X!0
%T@P:_ZkMcSVtGNtCZ*[ErYIZS,odlM93d#^*X$^!T7rol@6:`L*C80cB*j-B$&eES\\-lS'3BPT>i*BdCR@L*2/ObWF2<EUNq@WJ
%Pinmo9WA\R\sO]$lL=;lD/Y*Z4+)`?I?It+r9a[E@P)pHfFV!j(?gM-2%5]N.S1?\U#=\N;cXDF'/&\G>lE%IFE8C(2r^n[nE%pj
%7,\8'9@dq7=u]$LdI>MZ)tC9'3;:)WEON)h`"WBj7<a)Wi4&sg`pF.=_OL@gcRus1XR!<=L>^Bk@F;H4#hMQuX<*,Zrim6ir"fb,
%c`WiPg$'K^=1t'VCY.C"8T2M*Oha/jM,Pb>*p0lmbH4TV?52tp`PjNl3-0Igdi77pJZfbO]#<oUh"^6l9=[*CU(3dOp&i0T[8+@.
%`=Jh2(r8n@AIeDpiA!dh6@a)*..(*$Tfa(V2]U+_p+%lHQ+$F,EChtIlPNamSr;j;"tUr%EVA`/N6:DWB8=GPZuQf:I!TsU">9N:
%SsSM#>fXbuT(dVVp[+Rp&.aS9o$j?1UEAHtB@#[M_&A?C5L7\r-)S^=7=>J"(*9u2.t@7Yql[+ddKtJ/EJrbklC2G\,dWj"oB1&F
%buEcY95d&[]'$a=pbSKT!3"qHZ&bIiYd!HT*d(6)YU\.Pn\cMh:=(h``!iNsUcY/>2)[=!&.2^rUAiZFB5-7HMT<grL>Y\@B6)(`
%J2&;mfRd&s9*+d3A#7^[Tb]jtioBj2>3<L]^ZgaI]RdHdPPdo?I#0hH1e!+g2bUhePM^i--1n0\IIYS$:LeHedp&MQi2c&$q!>[X
%._`p^h<-V1Mgtd$nWVF$+2$d[$fCop-2=s!=9!_d[WgX,n[kFM^0Q>?rL^h"L[Y6.:Z$Q7f'6W@X+0p#2h1Vjbr7ldaSu#'^TIP/
%jr]'KmWZGGm8)WQq;":7p:hj28(S:NotUL\s7?9cX+0e,!;p<STE~>
%AI9_PrivateDataEnd
